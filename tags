!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/xiongzile/workspace/xv6-labs-2024/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(OBJS)	Makefile	/^$(OBJS): EXTRAFLAG := $(KCSANFLAG)$/;"	t
$K/%.o	Makefile	/^$K\/%.o: $K\/%.c$/;"	t
$K/kernel	Makefile	/^$K\/kernel: $(OBJS) $(OBJS_KCSAN) $K\/kernel.ld $U\/initcode$/;"	t
$U/_forktest	Makefile	/^$U\/_forktest: $U\/forktest.o $(ULIB)$/;"	t
$U/_uthread	Makefile	/^$U\/_uthread: $U\/uthread.o $U\/uthread_switch.o $(ULIB)$/;"	t
$U/initcode	Makefile	/^$U\/initcode: $U\/initcode.S$/;"	t
$U/usys.S	Makefile	/^$U\/usys.S : $U\/usys.pl$/;"	t
$U/usys.o	Makefile	/^$U\/usys.o : $U\/usys.S$/;"	t
$U/uthread_switch.o	Makefile	/^$U\/uthread_switch.o : $U\/uthread_switch.S$/;"	t
.bss	kernel/kernel.ld	/^  .bss : {$/;"	S
.bss	user/user.ld	/^  .bss : {$/;"	S
.data	kernel/kernel.ld	/^  .data : {$/;"	S
.data	user/user.ld	/^  .data : {$/;"	S
.eh_frame	user/user.ld	/^  .eh_frame : {$/;"	S
.gdbinit	Makefile	/^.gdbinit: .gdbinit.tmpl-riscv$/;"	t
.rodata	kernel/kernel.ld	/^  .rodata : {$/;"	S
.rodata	user/user.ld	/^  .rodata : {$/;"	S
.text	kernel/kernel.ld	/^  .text : {$/;"	S
.text	user/user.ld	/^  .text : {$/;"	S
AS	Makefile	/^AS = $(TOOLPREFIX)gas$/;"	m
Align	user/umalloc.c	/^typedef long Align;$/;"	t	typeref:typename:long	file:
BACK	user/sh.c	/^#define BACK /;"	d	file:
BACKSPACE	kernel/console.c	/^#define BACKSPACE /;"	d	file:
BBLOCK	kernel/fs.h	/^#define BBLOCK(/;"	d
BIG	user/usertests.c	/^  enum { BIG=100*1024*1024 };$/;"	e	enum:sbrkfail::__anon2469bfd61003	file:
BIG	user/usertests.c	/^  enum { BIG=100*1024*1024 };$/;"	e	enum:sbrkmuch::__anon2469bfd60f03	file:
BPB	kernel/fs.h	/^#define BPB /;"	d
BSIZE	kernel/fs.h	/^#define BSIZE /;"	d
BUFSZ	user/usertests.c	/^#define BUFSZ /;"	d	file:
C	kernel/console.c	/^#define C(/;"	d	file:
CC	Makefile	/^CC = $(TOOLPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Werror -O -fno-omit-frame-pointer -ggdb -gdwarf-2$/;"	m
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
CONSOLE	kernel/file.h	/^#define CONSOLE /;"	d
CPUS	Makefile	/^CPUS := 1$/;"	m
CPUS	Makefile	/^CPUS := 3$/;"	m
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
DIRSIZ	kernel/fs.h	/^#define DIRSIZ /;"	d
Disassembly	kernel/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/grind.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/zombie.asm	/^Disassembly of section .text:$/;"	l
ELF_MAGIC	kernel/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	kernel/elf.h	/^#define ELF_PROG_FLAG_EXEC /;"	d
ELF_PROG_FLAG_READ	kernel/elf.h	/^#define ELF_PROG_FLAG_READ /;"	d
ELF_PROG_FLAG_WRITE	kernel/elf.h	/^#define ELF_PROG_FLAG_WRITE /;"	d
ELF_PROG_LOAD	kernel/elf.h	/^#define ELF_PROG_LOAD /;"	d
EXEC	user/sh.c	/^#define EXEC /;"	d	file:
EXTRAFLAG	Makefile	/^$(OBJS): EXTRAFLAG := $(KCSANFLAG)$/;"	m
FCR	kernel/uart.c	/^#define FCR /;"	d	file:
FCR_FIFO_CLEAR	kernel/uart.c	/^#define FCR_FIFO_CLEAR /;"	d	file:
FCR_FIFO_ENABLE	kernel/uart.c	/^#define FCR_FIFO_ENABLE /;"	d	file:
FD_DEVICE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anonc1f1ee2b0103
FD_INODE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anonc1f1ee2b0103
FD_NONE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anonc1f1ee2b0103
FD_PIPE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anonc1f1ee2b0103
FSMAGIC	kernel/fs.h	/^#define FSMAGIC /;"	d
FSSIZE	kernel/param.h	/^#define FSSIZE /;"	d
FWDPORT1	Makefile	/^FWDPORT1 = $(shell expr `id -u` % 5000 + 25999)$/;"	m
FWDPORT2	Makefile	/^FWDPORT2 = $(shell expr `id -u` % 5000 + 30999)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	Makefile	/^GDBPORT = $(shell expr `id -u` % 5000 + 25000)$/;"	m
GRADES	gradelib.py	/^GRADES = {}$/;"	v
Header	user/umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
IBLOCK	kernel/fs.h	/^#define IBLOCK(/;"	d
IER	kernel/uart.c	/^#define IER /;"	d	file:
IER_RX_ENABLE	kernel/uart.c	/^#define IER_RX_ENABLE /;"	d	file:
IER_TX_ENABLE	kernel/uart.c	/^#define IER_TX_ENABLE /;"	d	file:
INPUT_BUF_SIZE	kernel/console.c	/^#define INPUT_BUF_SIZE /;"	d	file:
IPB	kernel/fs.h	/^#define IPB /;"	d
ISR	kernel/uart.c	/^#define ISR /;"	d	file:
K	Makefile	/^K=kernel$/;"	m
KCSANFLAG	Makefile	/^KCSANFLAG = -fsanitize=thread -fno-inline$/;"	m
KERNBASE	kernel/memlayout.h	/^#define KERNBASE /;"	d
KSTACK	kernel/memlayout.h	/^#define KSTACK(/;"	d
LAB	conf/lab.mk	/^LAB=util$/;"	m
LABUPPER	Makefile	/^LABUPPER = $(shell echo $(LAB) | tr a-z A-Z)$/;"	m
LCR	kernel/uart.c	/^#define LCR /;"	d	file:
LCR_BAUD_LATCH	kernel/uart.c	/^#define LCR_BAUD_LATCH /;"	d	file:
LCR_EIGHT_BITS	kernel/uart.c	/^#define LCR_EIGHT_BITS /;"	d	file:
LD	Makefile	/^LD = $(TOOLPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -z max-page-size=4096$/;"	m
LIST	user/sh.c	/^#define LIST /;"	d	file:
LOGSIZE	kernel/param.h	/^#define LOGSIZE /;"	d
LSR	kernel/uart.c	/^#define LSR /;"	d	file:
LSR_RX_READY	kernel/uart.c	/^#define LSR_RX_READY /;"	d	file:
LSR_TX_IDLE	kernel/uart.c	/^#define LSR_TX_IDLE /;"	d	file:
MAKE_SATP	kernel/riscv.h	/^#define MAKE_SATP(/;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAXARG	kernel/param.h	/^#define MAXARG /;"	d
MAXARGS	user/sh.c	/^#define MAXARGS /;"	d	file:
MAXFILE	kernel/fs.h	/^#define MAXFILE /;"	d
MAXOPBLOCKS	kernel/param.h	/^#define MAXOPBLOCKS /;"	d
MAXPATH	kernel/param.h	/^#define MAXPATH /;"	d
MAXVA	kernel/riscv.h	/^#define MAXVA /;"	d
MAXVAplus	user/usertests.c	/^MAXVAplus(char *s)$/;"	f	typeref:typename:void
MIE_STIE	kernel/riscv.h	/^#define MIE_STIE /;"	d
MSTATUS_MIE	kernel/riscv.h	/^#define MSTATUS_MIE /;"	d
MSTATUS_MPP_M	kernel/riscv.h	/^#define MSTATUS_MPP_M /;"	d
MSTATUS_MPP_MASK	kernel/riscv.h	/^#define MSTATUS_MPP_MASK /;"	d
MSTATUS_MPP_S	kernel/riscv.h	/^#define MSTATUS_MPP_S /;"	d
MSTATUS_MPP_U	kernel/riscv.h	/^#define MSTATUS_MPP_U /;"	d
N	user/forktest.asm	/^#define N /;"	d	file:
N	user/forktest.c	/^#define N /;"	d	file:
N	user/usertests.c	/^  enum { N = 1000, SZ=10};$/;"	e	enum:sharedfd::__anon2469bfd60503	file:
N	user/usertests.c	/^  enum { N = 20, NCHILD=4 };$/;"	e	enum:createdelete::__anon2469bfd60703	file:
N	user/usertests.c	/^  enum { N = 20, SZ=600 };$/;"	e	enum:bigfile::__anon2469bfd60c03	file:
N	user/usertests.c	/^  enum { N = 40 };$/;"	e	enum:concreate::__anon2469bfd60a03	file:
N	user/usertests.c	/^  enum { N = 500 };$/;"	e	enum:bigdir::__anon2469bfd61103	file:
N	user/usertests.c	/^  enum { N=100, SZ=10 };$/;"	e	enum:writetest::__anon2469bfd60103	file:
N	user/usertests.c	/^  enum { N=12, NCHILD=4, SZ=500 };$/;"	e	enum:fourfiles::__anon2469bfd60603	file:
N	user/usertests.c	/^  enum { N=2 };$/;"	e	enum:forkfork::__anon2469bfd60403	file:
N	user/usertests.c	/^  enum { N=5, SZ=1033 };$/;"	e	enum:pipe1::__anon2469bfd60303	file:
N	user/usertests.c	/^  enum { N=52 };$/;"	e	enum:createtest::__anon2469bfd60203	file:
N	user/usertests.c	/^  enum{ N = 1000 };$/;"	e	enum:forktest::__anon2469bfd60d03	file:
NBUF	kernel/param.h	/^#define NBUF /;"	d
NCHILD	user/usertests.c	/^  enum { N = 20, NCHILD=4 };$/;"	e	enum:createdelete::__anon2469bfd60703	file:
NCHILD	user/usertests.c	/^  enum { N=12, NCHILD=4, SZ=500 };$/;"	e	enum:fourfiles::__anon2469bfd60603	file:
NCPU	kernel/param.h	/^#define NCPU /;"	d
NDEV	kernel/param.h	/^#define NDEV /;"	d
NDIRECT	kernel/fs.h	/^#define NDIRECT /;"	d
NELEM	kernel/defs.h	/^#define NELEM(/;"	d
NFILE	kernel/param.h	/^#define NFILE /;"	d
NINDIRECT	kernel/fs.h	/^#define NINDIRECT /;"	d
NINODE	kernel/param.h	/^#define NINODE /;"	d
NINODES	mkfs/mkfs.c	/^#define NINODES /;"	d	file:
NOFILE	kernel/param.h	/^#define NOFILE /;"	d
NPROC	kernel/param.h	/^#define NPROC /;"	d
NUM	kernel/virtio.h	/^#define NUM /;"	d
OBJCOPY	Makefile	/^OBJCOPY = $(TOOLPREFIX)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = $(TOOLPREFIX)objdump$/;"	m
OBJS	Makefile	/^OBJS = \\$/;"	m
OBJS_KCSAN	Makefile	/^OBJS_KCSAN = \\$/;"	m
O_CREATE	kernel/fcntl.h	/^#define O_CREATE /;"	d
O_RDONLY	kernel/fcntl.h	/^#define O_RDONLY /;"	d
O_RDWR	kernel/fcntl.h	/^#define O_RDWR /;"	d
O_TRUNC	kernel/fcntl.h	/^#define O_TRUNC /;"	d
O_WRONLY	kernel/fcntl.h	/^#define O_WRONLY /;"	d
PA2PTE	kernel/riscv.h	/^#define PA2PTE(/;"	d
PART_TOTAL	gradelib.py	/^PART_TOTAL = PART_POSSIBLE = 0$/;"	v
PGROUNDDOWN	kernel/riscv.h	/^#define PGROUNDDOWN(/;"	d
PGROUNDUP	kernel/riscv.h	/^#define PGROUNDUP(/;"	d
PGSHIFT	kernel/riscv.h	/^#define PGSHIFT /;"	d
PGSIZE	kernel/riscv.h	/^#define PGSIZE /;"	d
PHYSTOP	kernel/memlayout.h	/^#define PHYSTOP /;"	d
PIPE	user/sh.c	/^#define PIPE /;"	d	file:
PIPESIZE	kernel/pipe.c	/^#define PIPESIZE /;"	d	file:
PLIC	kernel/memlayout.h	/^#define PLIC /;"	d
PLIC_PENDING	kernel/memlayout.h	/^#define PLIC_PENDING /;"	d
PLIC_PRIORITY	kernel/memlayout.h	/^#define PLIC_PRIORITY /;"	d
PLIC_SCLAIM	kernel/memlayout.h	/^#define PLIC_SCLAIM(/;"	d
PLIC_SENABLE	kernel/memlayout.h	/^#define PLIC_SENABLE(/;"	d
PLIC_SPRIORITY	kernel/memlayout.h	/^#define PLIC_SPRIORITY(/;"	d
PTE2PA	kernel/riscv.h	/^#define PTE2PA(/;"	d
PTE_FLAGS	kernel/riscv.h	/^#define PTE_FLAGS(/;"	d
PTE_LEAF	kernel/riscv.h	/^#define PTE_LEAF(/;"	d
PTE_R	kernel/riscv.h	/^#define PTE_R /;"	d
PTE_U	kernel/riscv.h	/^#define PTE_U /;"	d
PTE_V	kernel/riscv.h	/^#define PTE_V /;"	d
PTE_W	kernel/riscv.h	/^#define PTE_W /;"	d
PTE_X	kernel/riscv.h	/^#define PTE_X /;"	d
PX	kernel/riscv.h	/^#define PX(/;"	d
PXMASK	kernel/riscv.h	/^#define PXMASK /;"	d
PXSHIFT	kernel/riscv.h	/^#define PXSHIFT(/;"	d
QEMU	Makefile	/^QEMU = qemu-system-riscv64$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUGDB	Makefile	/^QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -machine virt -bios none -kernel $K\/kernel -m 128M -smp $(CPUS) -nographic$/;"	m
R	kernel/virtio_disk.c	/^#define R(/;"	d	file:
REDIR	user/sh.c	/^#define REDIR /;"	d	file:
RHR	kernel/uart.c	/^#define RHR /;"	d	file:
ROOTDEV	kernel/param.h	/^#define ROOTDEV /;"	d
ROOTINO	kernel/fs.h	/^#define ROOTINO /;"	d
RUNNABLE	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
RUNNING	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
ReadReg	kernel/uart.c	/^#define ReadReg(/;"	d	file:
Reg	kernel/uart.c	/^#define Reg(/;"	d	file:
Runner	gradelib.py	/^class Runner():$/;"	c
SATP_SV39	kernel/riscv.h	/^#define SATP_SV39 /;"	d
SERVERPORT	Makefile	/^SERVERPORT = $(shell expr `id -u` % 5000 + 25099)$/;"	m
SIE_SEIE	kernel/riscv.h	/^#define SIE_SEIE /;"	d
SIE_SSIE	kernel/riscv.h	/^#define SIE_SSIE /;"	d
SIE_STIE	kernel/riscv.h	/^#define SIE_STIE /;"	d
SLEEPING	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SSTATUS_SIE	kernel/riscv.h	/^#define SSTATUS_SIE /;"	d
SSTATUS_SPIE	kernel/riscv.h	/^#define SSTATUS_SPIE /;"	d
SSTATUS_SPP	kernel/riscv.h	/^#define SSTATUS_SPP /;"	d
SSTATUS_UIE	kernel/riscv.h	/^#define SSTATUS_UIE /;"	d
SSTATUS_UPIE	kernel/riscv.h	/^#define SSTATUS_UPIE /;"	d
SUPERPGROUNDUP	kernel/riscv.h	/^#define SUPERPGROUNDUP(/;"	d
SUPERPGSIZE	kernel/riscv.h	/^#define SUPERPGSIZE /;"	d
SYS_chdir	kernel/syscall.h	/^#define SYS_chdir /;"	d
SYS_close	kernel/syscall.h	/^#define SYS_close /;"	d
SYS_dup	kernel/syscall.h	/^#define SYS_dup /;"	d
SYS_exec	kernel/syscall.h	/^#define SYS_exec /;"	d
SYS_exit	kernel/syscall.h	/^#define SYS_exit /;"	d
SYS_fork	kernel/syscall.h	/^#define SYS_fork /;"	d
SYS_fstat	kernel/syscall.h	/^#define SYS_fstat /;"	d
SYS_getpid	kernel/syscall.h	/^#define SYS_getpid /;"	d
SYS_kill	kernel/syscall.h	/^#define SYS_kill /;"	d
SYS_link	kernel/syscall.h	/^#define SYS_link /;"	d
SYS_mkdir	kernel/syscall.h	/^#define SYS_mkdir /;"	d
SYS_mknod	kernel/syscall.h	/^#define SYS_mknod /;"	d
SYS_open	kernel/syscall.h	/^#define SYS_open /;"	d
SYS_pipe	kernel/syscall.h	/^#define SYS_pipe /;"	d
SYS_read	kernel/syscall.h	/^#define SYS_read /;"	d
SYS_sbrk	kernel/syscall.h	/^#define SYS_sbrk /;"	d
SYS_sleep	kernel/syscall.h	/^#define SYS_sleep /;"	d
SYS_unlink	kernel/syscall.h	/^#define SYS_unlink /;"	d
SYS_uptime	kernel/syscall.h	/^#define SYS_uptime /;"	d
SYS_wait	kernel/syscall.h	/^#define SYS_wait /;"	d
SYS_write	kernel/syscall.h	/^#define SYS_write /;"	d
SZ	user/usertests.c	/^  enum { N = 1000, SZ=10};$/;"	e	enum:sharedfd::__anon2469bfd60503	file:
SZ	user/usertests.c	/^  enum { N = 20, SZ=600 };$/;"	e	enum:bigfile::__anon2469bfd60c03	file:
SZ	user/usertests.c	/^  enum { N=100, SZ=10 };$/;"	e	enum:writetest::__anon2469bfd60103	file:
SZ	user/usertests.c	/^  enum { N=12, NCHILD=4, SZ=500 };$/;"	e	enum:fourfiles::__anon2469bfd60603	file:
SZ	user/usertests.c	/^  enum { N=5, SZ=1033 };$/;"	e	enum:pipe1::__anon2469bfd60303	file:
SZ	user/usertests.c	/^  enum { SZ = 5 };$/;"	e	enum:linktest::__anon2469bfd60903	file:
SZ	user/usertests.c	/^  enum { SZ = 5 };$/;"	e	enum:unlinkread::__anon2469bfd60803	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
THR	kernel/uart.c	/^#define THR /;"	d	file:
TOOLPREFIX	Makefile	/^TOOLPREFIX := $(shell if riscv64-unknown-elf-objdump -i 2>&1 | grep 'elf64-big' >\/dev\/null 2>&/;"	m
TOOMUCH	user/usertests.c	/^  enum { TOOMUCH=1024*1024*1024};$/;"	e	enum:sbrkbasic::__anon2469bfd60e03	file:
TOTAL	gradelib.py	/^TOTAL = POSSIBLE = 0$/;"	v
TRAMPOLINE	kernel/memlayout.h	/^#define TRAMPOLINE /;"	d
TRAPFRAME	kernel/memlayout.h	/^#define TRAPFRAME /;"	d
T_DEVICE	kernel/stat.h	/^#define T_DEVICE /;"	d
T_DIR	kernel/stat.h	/^#define T_DIR /;"	d
T_FILE	kernel/stat.h	/^#define T_FILE /;"	d
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
U	Makefile	/^U=user$/;"	m
UART0	kernel/memlayout.h	/^#define UART0 /;"	d
UART0_IRQ	kernel/memlayout.h	/^#define UART0_IRQ /;"	d
UART_TX_BUF_SIZE	kernel/uart.c	/^#define UART_TX_BUF_SIZE /;"	d	file:
UEXTRA	Makefile	/^UEXTRA=$/;"	m
ULIB	Makefile	/^ULIB = $U\/ulib.o $U\/usys.o $U\/printf.o $U\/umalloc.o$/;"	m
UNUSED	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
UPROGS	Makefile	/^UPROGS=\\$/;"	m
USED	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
USERSTACK	kernel/param.h	/^#define USERSTACK /;"	d
VIRTIO0	kernel/memlayout.h	/^#define VIRTIO0 /;"	d
VIRTIO0_IRQ	kernel/memlayout.h	/^#define VIRTIO0_IRQ /;"	d
VIRTIO_BLK_F_CONFIG_WCE	kernel/virtio.h	/^#define VIRTIO_BLK_F_CONFIG_WCE /;"	d
VIRTIO_BLK_F_MQ	kernel/virtio.h	/^#define VIRTIO_BLK_F_MQ /;"	d
VIRTIO_BLK_F_RO	kernel/virtio.h	/^#define VIRTIO_BLK_F_RO /;"	d
VIRTIO_BLK_F_SCSI	kernel/virtio.h	/^#define VIRTIO_BLK_F_SCSI /;"	d
VIRTIO_BLK_T_IN	kernel/virtio.h	/^#define VIRTIO_BLK_T_IN /;"	d
VIRTIO_BLK_T_OUT	kernel/virtio.h	/^#define VIRTIO_BLK_T_OUT /;"	d
VIRTIO_CONFIG_S_ACKNOWLEDGE	kernel/virtio.h	/^#define VIRTIO_CONFIG_S_ACKNOWLEDGE	/;"	d
VIRTIO_CONFIG_S_DRIVER	kernel/virtio.h	/^#define VIRTIO_CONFIG_S_DRIVER	/;"	d
VIRTIO_CONFIG_S_DRIVER_OK	kernel/virtio.h	/^#define VIRTIO_CONFIG_S_DRIVER_OK	/;"	d
VIRTIO_CONFIG_S_FEATURES_OK	kernel/virtio.h	/^#define VIRTIO_CONFIG_S_FEATURES_OK	/;"	d
VIRTIO_F_ANY_LAYOUT	kernel/virtio.h	/^#define VIRTIO_F_ANY_LAYOUT /;"	d
VIRTIO_MMIO_DEVICE_DESC_HIGH	kernel/virtio.h	/^#define VIRTIO_MMIO_DEVICE_DESC_HIGH	/;"	d
VIRTIO_MMIO_DEVICE_DESC_LOW	kernel/virtio.h	/^#define VIRTIO_MMIO_DEVICE_DESC_LOW	/;"	d
VIRTIO_MMIO_DEVICE_FEATURES	kernel/virtio.h	/^#define VIRTIO_MMIO_DEVICE_FEATURES	/;"	d
VIRTIO_MMIO_DEVICE_ID	kernel/virtio.h	/^#define VIRTIO_MMIO_DEVICE_ID	/;"	d
VIRTIO_MMIO_DRIVER_DESC_HIGH	kernel/virtio.h	/^#define VIRTIO_MMIO_DRIVER_DESC_HIGH	/;"	d
VIRTIO_MMIO_DRIVER_DESC_LOW	kernel/virtio.h	/^#define VIRTIO_MMIO_DRIVER_DESC_LOW	/;"	d
VIRTIO_MMIO_DRIVER_FEATURES	kernel/virtio.h	/^#define VIRTIO_MMIO_DRIVER_FEATURES	/;"	d
VIRTIO_MMIO_INTERRUPT_ACK	kernel/virtio.h	/^#define VIRTIO_MMIO_INTERRUPT_ACK	/;"	d
VIRTIO_MMIO_INTERRUPT_STATUS	kernel/virtio.h	/^#define VIRTIO_MMIO_INTERRUPT_STATUS	/;"	d
VIRTIO_MMIO_MAGIC_VALUE	kernel/virtio.h	/^#define VIRTIO_MMIO_MAGIC_VALUE	/;"	d
VIRTIO_MMIO_QUEUE_DESC_HIGH	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_DESC_HIGH	/;"	d
VIRTIO_MMIO_QUEUE_DESC_LOW	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_DESC_LOW	/;"	d
VIRTIO_MMIO_QUEUE_NOTIFY	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_NOTIFY	/;"	d
VIRTIO_MMIO_QUEUE_NUM	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_NUM	/;"	d
VIRTIO_MMIO_QUEUE_NUM_MAX	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_NUM_MAX	/;"	d
VIRTIO_MMIO_QUEUE_READY	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_READY	/;"	d
VIRTIO_MMIO_QUEUE_SEL	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_SEL	/;"	d
VIRTIO_MMIO_STATUS	kernel/virtio.h	/^#define VIRTIO_MMIO_STATUS	/;"	d
VIRTIO_MMIO_VENDOR_ID	kernel/virtio.h	/^#define VIRTIO_MMIO_VENDOR_ID	/;"	d
VIRTIO_MMIO_VERSION	kernel/virtio.h	/^#define VIRTIO_MMIO_VERSION	/;"	d
VIRTIO_RING_F_EVENT_IDX	kernel/virtio.h	/^#define VIRTIO_RING_F_EVENT_IDX /;"	d
VIRTIO_RING_F_INDIRECT_DESC	kernel/virtio.h	/^#define VIRTIO_RING_F_INDIRECT_DESC /;"	d
VRING_DESC_F_NEXT	kernel/virtio.h	/^#define VRING_DESC_F_NEXT /;"	d
VRING_DESC_F_WRITE	kernel/virtio.h	/^#define VRING_DESC_F_WRITE /;"	d
WriteReg	kernel/uart.c	/^#define WriteReg(/;"	d	file:
ZOMBIE	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
_%	Makefile	/^_%: %.o $(ULIB)$/;"	t
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon033c111f0108	kernel/fs.c	/^struct {$/;"	s	file:
__anon0ecc7a2d0108	kernel/virtio_disk.c	/^  struct {$/;"	s	struct:disk	file:
__anon2469bfd60103	user/usertests.c	/^  enum { N=100, SZ=10 };$/;"	g	function:writetest	file:
__anon2469bfd60203	user/usertests.c	/^  enum { N=52 };$/;"	g	function:createtest	file:
__anon2469bfd60303	user/usertests.c	/^  enum { N=5, SZ=1033 };$/;"	g	function:pipe1	file:
__anon2469bfd60403	user/usertests.c	/^  enum { N=2 };$/;"	g	function:forkfork	file:
__anon2469bfd60503	user/usertests.c	/^  enum { N = 1000, SZ=10};$/;"	g	function:sharedfd	file:
__anon2469bfd60603	user/usertests.c	/^  enum { N=12, NCHILD=4, SZ=500 };$/;"	g	function:fourfiles	file:
__anon2469bfd60703	user/usertests.c	/^  enum { N = 20, NCHILD=4 };$/;"	g	function:createdelete	file:
__anon2469bfd60803	user/usertests.c	/^  enum { SZ = 5 };$/;"	g	function:unlinkread	file:
__anon2469bfd60903	user/usertests.c	/^  enum { SZ = 5 };$/;"	g	function:linktest	file:
__anon2469bfd60a03	user/usertests.c	/^  enum { N = 40 };$/;"	g	function:concreate	file:
__anon2469bfd60b08	user/usertests.c	/^  struct {$/;"	s	function:concreate	file:
__anon2469bfd60c03	user/usertests.c	/^  enum { N = 20, SZ=600 };$/;"	g	function:bigfile	file:
__anon2469bfd60d03	user/usertests.c	/^  enum{ N = 1000 };$/;"	g	function:forktest	file:
__anon2469bfd60e03	user/usertests.c	/^  enum { TOOMUCH=1024*1024*1024};$/;"	g	function:sbrkbasic	file:
__anon2469bfd60f03	user/usertests.c	/^  enum { BIG=100*1024*1024 };$/;"	g	function:sbrkmuch	file:
__anon2469bfd61003	user/usertests.c	/^  enum { BIG=100*1024*1024 };$/;"	g	function:sbrkfail	file:
__anon2469bfd61103	user/usertests.c	/^  enum { N = 500 };$/;"	g	function:bigdir	file:
__anon3c3fa87c0108	kernel/kalloc.c	/^struct {$/;"	s	file:
__anon3d351ad10108	user/umalloc.c	/^  struct {$/;"	s	union:header	file:
__anon6a7165400108	kernel/bio.c	/^struct {$/;"	s	file:
__anonb6393d190108	kernel/console.c	/^struct {$/;"	s	file:
__anonc1f1ee260108	kernel/file.c	/^struct {$/;"	s	file:
__anonc1f1ee2b0103	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	g	struct:file
__anonef4e5b790108	kernel/printf.c	/^static struct {$/;"	s	file:
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
_entry	kernel/entry.S	/^_entry:$/;"	l
_trampoline	kernel/kernel.ld	/^    _trampoline = .;$/;"	s	section:.text
a	kernel/kernel.asm	/^    a = (uint*)bp->data;$/;"	d
a	kernel/kernel.asm	/^  a = va;$/;"	d
a	user/cat.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/echo.asm	/^   a:	ec4e                	sd	s3,24(sp)$/;"	l
a	user/forktest.asm	/^   a:	84aa                	mv	s1,a0$/;"	l
a	user/grep.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/init.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	user/kill.asm	/^   a:	02a7d963          	bge	a5,a0,3c <main+0x3c>$/;"	l
a	user/ln.asm	/^   a:	00f50d63          	beq	a0,a5,24 <main+0x24>$/;"	l
a	user/ls.asm	/^   a:	84aa                	mv	s1,a0$/;"	l
a	user/mkdir.asm	/^   a:	02a7d763          	bge	a5,a0,38 <main+0x38>$/;"	l
a	user/rm.asm	/^   a:	02a7d763          	bge	a5,a0,38 <main+0x38>$/;"	l
a	user/sh.asm	/^       a:	1000                	addi	s0,sp,32$/;"	l
a	user/usertests.asm	/^       a:	fc4e                	sd	s3,56(sp)$/;"	l
a	user/usertests.asm	/^    a = b + 1;$/;"	d
a	user/usertests.asm	/^    a = sbrk(0);$/;"	d
a	user/usertests.asm	/^    a = sbrk(TOOMUCH);$/;"	d
a	user/usertests.asm	/^  a = sbrk(0);$/;"	d
a	user/usertests.asm	/^  a = sbrk(PGSIZE);$/;"	d
a	user/wc.asm	/^   a:	ecce                	sd	s3,88(sp)$/;"	l
a0	kernel/proc.h	/^  \/* 112 *\/ uint64 a0;$/;"	m	struct:trapframe	typeref:typename:uint64
a0	user/cat.asm	/^  a0:	2f4000ef          	jal	394 <open>$/;"	l
a0	user/echo.asm	/^  a0:	fb75                	bnez	a4,94 <strcpy+0x8>$/;"	l
a0	user/forktest.asm	/^  a0:	4501                	li	a0,0$/;"	l
a0	user/grep.asm	/^  a0:	fef9                	bnez	a3,7e <matchhere+0x34>$/;"	l
a0	user/kill.asm	/^  a0:	0005c503          	lbu	a0,0(a1)$/;"	l
a0	user/ls.asm	/^  a0:	26813023          	sd	s0,608(sp)$/;"	l
a0	user/mkdir.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	user/rm.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	user/sh.asm	/^      a0:	02e7e163          	bltu	a5,a4,c2 <runcmd+0x34>$/;"	l
a0	user/usertests.asm	/^      a0:	00005517          	auipc	a0,0x5$/;"	l
a0	user/zombie.asm	/^  a0:	bfe5                	j	98 <strlen+0x20>$/;"	l
a00	user/grep.asm	/^ a00:	e39c                	sd	a5,0(a5)$/;"	l
a00	user/grind.asm	/^     a00:	99de                	add	s3,s3,s7$/;"	l
a00	user/sh.asm	/^     a00:	fff7c703          	lbu	a4,-1(a5)$/;"	l
a00	user/usertests.asm	/^     a00:	854e                	mv	a0,s3$/;"	l
a02	user/grep.asm	/^ a02:	0007a423          	sw	zero,8(a5)$/;"	l
a02	user/grind.asm	/^     a02:	00098023          	sb	zero,0(s3)$/;"	l
a02	user/ls.asm	/^ a02:	62278793          	addi	a5,a5,1570 # 1020 <base>$/;"	l
a02	user/usertests.asm	/^     a02:	09e040ef          	jal	4aa0 <write>$/;"	l
a04	user/sh.asm	/^     a04:	ff65                	bnez	a4,9fc <strlen+0x10>$/;"	l
a06	user/grep.asm	/^ a06:	b7c1                	j	9c6 <malloc+0x36>$/;"	l
a06	user/grind.asm	/^     a06:	855e                	mv	a0,s7$/;"	l
a06	user/ls.asm	/^ a06:	00000717          	auipc	a4,0x0$/;"	l
a06	user/sh.asm	/^     a06:	40a6853b          	subw	a0,a3,a0$/;"	l
a06	user/usertests.asm	/^     a06:	40000793          	li	a5,1024$/;"	l
a08	user/grep.asm	/^ a08:	6398                	ld	a4,0(a5)$/;"	l
a08	user/grind.asm	/^     a08:	60e6                	ld	ra,88(sp)$/;"	l
a0a	user/grep.asm	/^ a0a:	e118                	sd	a4,0(a0)$/;"	l
a0a	user/grind.asm	/^     a0a:	6446                	ld	s0,80(sp)$/;"	l
a0a	user/ls.asm	/^ a0a:	5ef73d23          	sd	a5,1530(a4) # 1000 <freep>$/;"	l
a0a	user/sh.asm	/^     a0a:	2505                	addiw	a0,a0,1$/;"	l
a0a	user/usertests.asm	/^     a0a:	06f51263          	bne	a0,a5,a6e <writebig+0xb0>$/;"	l
a0c	user/grep.asm	/^ a0c:	a8a9                	j	a66 <malloc+0xd6>$/;"	l
a0c	user/grind.asm	/^     a0c:	64a6                	ld	s1,72(sp)$/;"	l
a0c	user/sh.asm	/^     a0c:	6422                	ld	s0,8(sp)$/;"	l
a0e	user/grep.asm	/^ a0e:	01652423          	sw	s6,8(a0)$/;"	l
a0e	user/grind.asm	/^     a0e:	6906                	ld	s2,64(sp)$/;"	l
a0e	user/ls.asm	/^ a0e:	e39c                	sd	a5,0(a5)$/;"	l
a0e	user/sh.asm	/^     a0e:	0141                	addi	sp,sp,16$/;"	l
a0e	user/usertests.asm	/^     a0e:	2485                	addiw	s1,s1,1$/;"	l
a1	kernel/proc.h	/^  \/* 120 *\/ uint64 a1;$/;"	m	struct:trapframe	typeref:typename:uint64
a10	user/grind.asm	/^     a10:	79e2                	ld	s3,56(sp)$/;"	l
a10	user/ls.asm	/^ a10:	0007a423          	sw	zero,8(a5)$/;"	l
a10	user/sh.asm	/^     a10:	8082                	ret$/;"	l
a10	user/usertests.asm	/^     a10:	ff4493e3          	bne	s1,s4,9f6 <writebig+0x38>$/;"	l
a12	user/grep.asm	/^ a12:	0541                	addi	a0,a0,16$/;"	l
a12	user/grind.asm	/^     a12:	7a42                	ld	s4,48(sp)$/;"	l
a12	user/sh.asm	/^     a12:	4501                	li	a0,0$/;"	l
a14	user/grep.asm	/^ a14:	efbff0ef          	jal	90e <free>$/;"	l
a14	user/grind.asm	/^     a14:	7aa2                	ld	s5,40(sp)$/;"	l
a14	user/ls.asm	/^ a14:	b7c1                	j	9d4 <malloc+0x36>$/;"	l
a14	user/sh.asm	/^     a14:	bfe5                	j	a0c <strlen+0x20>$/;"	l
a14	user/usertests.asm	/^     a14:	854e                	mv	a0,s3$/;"	l
a16	user/grind.asm	/^     a16:	7b02                	ld	s6,32(sp)$/;"	l
a16	user/ls.asm	/^ a16:	6398                	ld	a4,0(a5)$/;"	l
a16	user/sh.asm	/^     a16:	1141                	addi	sp,sp,-16$/;"	l
a16	user/usertests.asm	/^     a16:	092040ef          	jal	4aa8 <close>$/;"	l
a18	user/grep.asm	/^ a18:	00093503          	ld	a0,0(s2)$/;"	l
a18	user/grind.asm	/^     a18:	6be2                	ld	s7,24(sp)$/;"	l
a18	user/ls.asm	/^ a18:	e118                	sd	a4,0(a0)$/;"	l
a18	user/sh.asm	/^     a18:	e422                	sd	s0,8(sp)$/;"	l
a1a	user/grind.asm	/^     a1a:	6125                	addi	sp,sp,96$/;"	l
a1a	user/ls.asm	/^ a1a:	a8a9                	j	a74 <malloc+0xd6>$/;"	l
a1a	user/sh.asm	/^     a1a:	0800                	addi	s0,sp,16$/;"	l
a1a	user/usertests.asm	/^     a1a:	4581                	li	a1,0$/;"	l
a1c	user/grep.asm	/^ a1c:	c12d                	beqz	a0,a7e <malloc+0xee>$/;"	l
a1c	user/grind.asm	/^     a1c:	8082                	ret$/;"	l
a1c	user/ls.asm	/^ a1c:	01652423          	sw	s6,8(a0)$/;"	l
a1c	user/sh.asm	/^     a1c:	ca19                	beqz	a2,a32 <memset+0x1c>$/;"	l
a1c	user/usertests.asm	/^     a1c:	00005517          	auipc	a0,0x5$/;"	l
a1e	user/grep.asm	/^ a1e:	611c                	ld	a5,0(a0)$/;"	l
a1e	user/grind.asm	/^     a1e:	1101                	addi	sp,sp,-32$/;"	l
a1e	user/sh.asm	/^     a1e:	87aa                	mv	a5,a0$/;"	l
a2	kernel/proc.h	/^  \/* 128 *\/ uint64 a2;$/;"	m	struct:trapframe	typeref:typename:uint64
a2	user/echo.asm	/^  a2:	6422                	ld	s0,8(sp)$/;"	l
a2	user/forktest.asm	/^  a2:	2a6000ef          	jal	348 <wait>$/;"	l
a2	user/grep.asm	/^  a2:	4501                	li	a0,0$/;"	l
a2	user/grind.asm	/^      a2:	cd19                	beqz	a0,c0 <go+0x4c>$/;"	l
a2	user/init.asm	/^  a2:	88a50513          	addi	a0,a0,-1910 # 928 <malloc+0x136>$/;"	l
a2	user/ln.asm	/^  a2:	6422                	ld	s0,8(sp)$/;"	l
a2	user/stressfs.asm	/^  a2:	6b8000ef          	jal	75a <printf>$/;"	l
a2	user/wc.asm	/^  a2:	91250513          	addi	a0,a0,-1774 # 9b0 <malloc+0x11e>$/;"	l
a2	user/zombie.asm	/^  a2:	1141                	addi	sp,sp,-16$/;"	l
a20	user/grep.asm	/^ a20:	4798                	lw	a4,8(a5)$/;"	l
a20	user/grind.asm	/^     a20:	ec06                	sd	ra,24(sp)$/;"	l
a20	user/ls.asm	/^ a20:	0541                	addi	a0,a0,16$/;"	l
a20	user/sh.asm	/^     a20:	1602                	slli	a2,a2,0x20$/;"	l
a20	user/usertests.asm	/^     a20:	a7450513          	addi	a0,a0,-1420 # 5490 <malloc+0x544>$/;"	l
a22	user/grep.asm	/^ a22:	02977263          	bgeu	a4,s1,a46 <malloc+0xb6>$/;"	l
a22	user/grind.asm	/^     a22:	e822                	sd	s0,16(sp)$/;"	l
a22	user/ls.asm	/^ a22:	efbff0ef          	jal	91c <free>$/;"	l
a22	user/sh.asm	/^     a22:	9201                	srli	a2,a2,0x20$/;"	l
a24	user/grind.asm	/^     a24:	e04a                	sd	s2,0(sp)$/;"	l
a24	user/sh.asm	/^     a24:	00a60733          	add	a4,a2,a0$/;"	l
a24	user/usertests.asm	/^     a24:	09c040ef          	jal	4ac0 <open>$/;"	l
a26	user/grep.asm	/^ a26:	00093703          	ld	a4,0(s2)$/;"	l
a26	user/grind.asm	/^     a26:	1000                	addi	s0,sp,32$/;"	l
a26	user/ls.asm	/^ a26:	00093503          	ld	a0,0(s2)$/;"	l
a28	user/grind.asm	/^     a28:	892e                	mv	s2,a1$/;"	l
a28	user/sh.asm	/^     a28:	00b78023          	sb	a1,0(a5)$/;"	l
a28	user/usertests.asm	/^     a28:	89aa                	mv	s3,a0$/;"	l
a2a	user/grep.asm	/^ a2a:	853e                	mv	a0,a5$/;"	l
a2a	user/grind.asm	/^     a2a:	4581                	li	a1,0$/;"	l
a2a	user/ls.asm	/^ a2a:	c12d                	beqz	a0,a8c <malloc+0xee>$/;"	l
a2a	user/usertests.asm	/^     a2a:	4481                	li	s1,0$/;"	l
a2c	user/grep.asm	/^ a2c:	fef719e3          	bne	a4,a5,a1e <malloc+0x8e>$/;"	l
a2c	user/grind.asm	/^     a2c:	162000ef          	jal	b8e <open>$/;"	l
a2c	user/ls.asm	/^ a2c:	611c                	ld	a5,0(a0)$/;"	l
a2c	user/sh.asm	/^     a2c:	0785                	addi	a5,a5,1$/;"	l
a2c	user/usertests.asm	/^     a2c:	0000c917          	auipc	s2,0xc$/;"	l
a2e	user/ls.asm	/^ a2e:	4798                	lw	a4,8(a5)$/;"	l
a2e	user/sh.asm	/^     a2e:	fee79de3          	bne	a5,a4,a28 <memset+0x12>$/;"	l
a3	kernel/proc.h	/^  \/* 136 *\/ uint64 a3;$/;"	m	struct:trapframe	typeref:typename:uint64
a30	user/grep.asm	/^ a30:	8552                	mv	a0,s4$/;"	l
a30	user/grind.asm	/^     a30:	02054263          	bltz	a0,a54 <stat+0x36>$/;"	l
a30	user/ls.asm	/^ a30:	02977263          	bgeu	a4,s1,a54 <malloc+0xb6>$/;"	l
a30	user/usertests.asm	/^     a30:	24c90913          	addi	s2,s2,588 # cc78 <buf>$/;"	l
a32	user/grep.asm	/^ a32:	b1bff0ef          	jal	54c <sbrk>$/;"	l
a32	user/sh.asm	/^     a32:	6422                	ld	s0,8(sp)$/;"	l
a34	user/grind.asm	/^     a34:	e426                	sd	s1,8(sp)$/;"	l
a34	user/ls.asm	/^ a34:	00093703          	ld	a4,0(s2)$/;"	l
a34	user/sh.asm	/^     a34:	0141                	addi	sp,sp,16$/;"	l
a34	user/usertests.asm	/^     a34:	04054863          	bltz	a0,a84 <writebig+0xc6>$/;"	l
a36	user/grep.asm	/^ a36:	fd551ce3          	bne	a0,s5,a0e <malloc+0x7e>$/;"	l
a36	user/grind.asm	/^     a36:	84aa                	mv	s1,a0$/;"	l
a36	user/sh.asm	/^     a36:	8082                	ret$/;"	l
a38	user/grind.asm	/^     a38:	85ca                	mv	a1,s2$/;"	l
a38	user/ls.asm	/^ a38:	853e                	mv	a0,a5$/;"	l
a38	user/sh.asm	/^     a38:	1141                	addi	sp,sp,-16$/;"	l
a38	user/usertests.asm	/^     a38:	40000613          	li	a2,1024$/;"	l
a3a	user/grep.asm	/^ a3a:	4501                	li	a0,0$/;"	l
a3a	user/grind.asm	/^     a3a:	16c000ef          	jal	ba6 <fstat>$/;"	l
a3a	user/ls.asm	/^ a3a:	fef719e3          	bne	a4,a5,a2c <malloc+0x8e>$/;"	l
a3a	user/sh.asm	/^     a3a:	e422                	sd	s0,8(sp)$/;"	l
a3c	user/grep.asm	/^ a3c:	7902                	ld	s2,32(sp)$/;"	l
a3c	user/sh.asm	/^     a3c:	0800                	addi	s0,sp,16$/;"	l
a3c	user/usertests.asm	/^     a3c:	85ca                	mv	a1,s2$/;"	l
a3e	user/grep.asm	/^ a3e:	6a42                	ld	s4,16(sp)$/;"	l
a3e	user/grind.asm	/^     a3e:	892a                	mv	s2,a0$/;"	l
a3e	user/ls.asm	/^ a3e:	8552                	mv	a0,s4$/;"	l
a3e	user/sh.asm	/^     a3e:	00054783          	lbu	a5,0(a0)$/;"	l
a3e	user/usertests.asm	/^     a3e:	854e                	mv	a0,s3$/;"	l
a4	kernel/proc.h	/^  \/* 144 *\/ uint64 a4;$/;"	m	struct:trapframe	typeref:typename:uint64
a4	user/cat.asm	/^  a4:	84aa                	mv	s1,a0$/;"	l
a4	user/echo.asm	/^  a4:	0141                	addi	sp,sp,16$/;"	l
a4	user/grep.asm	/^  a4:	b7c5                	j	84 <matchhere+0x3a>$/;"	l
a4	user/grind.asm	/^      a4:	f0ca                	sd	s2,96(sp)$/;"	l
a4	user/kill.asm	/^  a4:	40a7853b          	subw	a0,a5,a0$/;"	l
a4	user/ln.asm	/^  a4:	0141                	addi	sp,sp,16$/;"	l
a4	user/ls.asm	/^  a4:	25213823          	sd	s2,592(sp)$/;"	l
a4	user/mkdir.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	user/rm.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	user/sh.asm	/^      a4:	00056783          	lwu	a5,0(a0)$/;"	l
a4	user/usertests.asm	/^      a4:	fd050513          	addi	a0,a0,-48 # 5070 <malloc+0x124>$/;"	l
a4	user/zombie.asm	/^  a4:	e422                	sd	s0,8(sp)$/;"	l
a40	user/grep.asm	/^ a40:	6aa2                	ld	s5,8(sp)$/;"	l
a40	user/grind.asm	/^     a40:	8526                	mv	a0,s1$/;"	l
a40	user/ls.asm	/^ a40:	b1bff0ef          	jal	55a <sbrk>$/;"	l
a40	user/usertests.asm	/^     a40:	058040ef          	jal	4a98 <read>$/;"	l
a42	user/grep.asm	/^ a42:	6b02                	ld	s6,0(sp)$/;"	l
a42	user/grind.asm	/^     a42:	134000ef          	jal	b76 <close>$/;"	l
a42	user/sh.asm	/^     a42:	cb99                	beqz	a5,a58 <strchr+0x20>$/;"	l
a44	user/grep.asm	/^ a44:	a03d                	j	a72 <malloc+0xe2>$/;"	l
a44	user/ls.asm	/^ a44:	fd551ce3          	bne	a0,s5,a1c <malloc+0x7e>$/;"	l
a44	user/sh.asm	/^     a44:	00f58763          	beq	a1,a5,a52 <strchr+0x1a>$/;"	l
a44	user/usertests.asm	/^     a44:	c931                	beqz	a0,a98 <writebig+0xda>$/;"	l
a46	user/grep.asm	/^ a46:	7902                	ld	s2,32(sp)$/;"	l
a46	user/grind.asm	/^     a46:	64a2                	ld	s1,8(sp)$/;"	l
a46	user/usertests.asm	/^     a46:	40000793          	li	a5,1024$/;"	l
a48	user/grep.asm	/^ a48:	6a42                	ld	s4,16(sp)$/;"	l
a48	user/grind.asm	/^     a48:	854a                	mv	a0,s2$/;"	l
a48	user/ls.asm	/^ a48:	4501                	li	a0,0$/;"	l
a48	user/sh.asm	/^     a48:	0505                	addi	a0,a0,1$/;"	l
a4a	user/grep.asm	/^ a4a:	6aa2                	ld	s5,8(sp)$/;"	l
a4a	user/grind.asm	/^     a4a:	60e2                	ld	ra,24(sp)$/;"	l
a4a	user/ls.asm	/^ a4a:	7902                	ld	s2,32(sp)$/;"	l
a4a	user/sh.asm	/^     a4a:	00054783          	lbu	a5,0(a0)$/;"	l
a4a	user/usertests.asm	/^     a4a:	08f51a63          	bne	a0,a5,ade <writebig+0x120>$/;"	l
a4c	user/grep.asm	/^ a4c:	6b02                	ld	s6,0(sp)$/;"	l
a4c	user/grind.asm	/^     a4c:	6442                	ld	s0,16(sp)$/;"	l
a4c	user/ls.asm	/^ a4c:	6a42                	ld	s4,16(sp)$/;"	l
a4e	user/grep.asm	/^ a4e:	fae48de3          	beq	s1,a4,a08 <malloc+0x78>$/;"	l
a4e	user/grind.asm	/^     a4e:	6902                	ld	s2,0(sp)$/;"	l
a4e	user/ls.asm	/^ a4e:	6aa2                	ld	s5,8(sp)$/;"	l
a4e	user/sh.asm	/^     a4e:	fbfd                	bnez	a5,a44 <strchr+0xc>$/;"	l
a4e	user/usertests.asm	/^     a4e:	00092683          	lw	a3,0(s2)$/;"	l
a5	kernel/proc.h	/^  \/* 152 *\/ uint64 a5;$/;"	m	struct:trapframe	typeref:typename:uint64
a50	user/grind.asm	/^     a50:	6105                	addi	sp,sp,32$/;"	l
a50	user/ls.asm	/^ a50:	6b02                	ld	s6,0(sp)$/;"	l
a50	user/sh.asm	/^     a50:	4501                	li	a0,0$/;"	l
a52	user/grep.asm	/^ a52:	4137073b          	subw	a4,a4,s3$/;"	l
a52	user/grind.asm	/^     a52:	8082                	ret$/;"	l
a52	user/ls.asm	/^ a52:	a03d                	j	a80 <malloc+0xe2>$/;"	l
a52	user/sh.asm	/^     a52:	6422                	ld	s0,8(sp)$/;"	l
a52	user/usertests.asm	/^     a52:	0a969163          	bne	a3,s1,af4 <writebig+0x136>$/;"	l
a54	user/grind.asm	/^     a54:	597d                	li	s2,-1$/;"	l
a54	user/ls.asm	/^ a54:	7902                	ld	s2,32(sp)$/;"	l
a54	user/sh.asm	/^     a54:	0141                	addi	sp,sp,16$/;"	l
a56	user/grep.asm	/^ a56:	c798                	sw	a4,8(a5)$/;"	l
a56	user/grind.asm	/^     a56:	bfcd                	j	a48 <stat+0x2a>$/;"	l
a56	user/ls.asm	/^ a56:	6a42                	ld	s4,16(sp)$/;"	l
a56	user/sh.asm	/^     a56:	8082                	ret$/;"	l
a56	user/usertests.asm	/^     a56:	2485                	addiw	s1,s1,1$/;"	l
a58	user/grep.asm	/^ a58:	02071693          	slli	a3,a4,0x20$/;"	l
a58	user/grind.asm	/^     a58:	1141                	addi	sp,sp,-16$/;"	l
a58	user/ls.asm	/^ a58:	6aa2                	ld	s5,8(sp)$/;"	l
a58	user/sh.asm	/^     a58:	4501                	li	a0,0$/;"	l
a58	user/usertests.asm	/^     a58:	b7c5                	j	a38 <writebig+0x7a>$/;"	l
a5a	user/grind.asm	/^     a5a:	e422                	sd	s0,8(sp)$/;"	l
a5a	user/ls.asm	/^ a5a:	6b02                	ld	s6,0(sp)$/;"	l
a5a	user/sh.asm	/^     a5a:	bfe5                	j	a52 <strchr+0x1a>$/;"	l
a5a	user/usertests.asm	/^     a5a:	85d6                	mv	a1,s5$/;"	l
a5c	user/grep.asm	/^ a5c:	01c6d713          	srli	a4,a3,0x1c$/;"	l
a5c	user/grind.asm	/^     a5c:	0800                	addi	s0,sp,16$/;"	l
a5c	user/ls.asm	/^ a5c:	fae48de3          	beq	s1,a4,a16 <malloc+0x78>$/;"	l
a5c	user/sh.asm	/^     a5c:	711d                	addi	sp,sp,-96$/;"	l
a5c	user/usertests.asm	/^     a5c:	00005517          	auipc	a0,0x5$/;"	l
a5e	user/grind.asm	/^     a5e:	00054683          	lbu	a3,0(a0)$/;"	l
a5e	user/sh.asm	/^     a5e:	ec86                	sd	ra,88(sp)$/;"	l
a6	kernel/proc.h	/^  \/* 160 *\/ uint64 a6;$/;"	m	struct:trapframe	typeref:typename:uint64
a6	user/cat.asm	/^  a6:	02054663          	bltz	a0,d2 <main+0x60>$/;"	l
a6	user/echo.asm	/^  a6:	8082                	ret$/;"	l
a6	user/forktest.asm	/^  a6:	57fd                	li	a5,-1$/;"	l
a6	user/grep.asm	/^  a6:	0005c503          	lbu	a0,0(a1)$/;"	l
a6	user/grind.asm	/^      a6:	ecce                	sd	s3,88(sp)$/;"	l
a6	user/init.asm	/^  a6:	2b8000ef          	jal	35e <exec>$/;"	l
a6	user/ln.asm	/^  a6:	8082                	ret$/;"	l
a6	user/stressfs.asm	/^  a6:	4581                	li	a1,0$/;"	l
a6	user/wc.asm	/^  a6:	738000ef          	jal	7de <printf>$/;"	l
a6	user/zombie.asm	/^  a6:	0800                	addi	s0,sp,16$/;"	l
a60	user/grep.asm	/^ a60:	97ba                	add	a5,a5,a4$/;"	l
a60	user/ls.asm	/^ a60:	4137073b          	subw	a4,a4,s3$/;"	l
a60	user/sh.asm	/^     a60:	e8a2                	sd	s0,80(sp)$/;"	l
a60	user/usertests.asm	/^     a60:	a3c50513          	addi	a0,a0,-1476 # 5498 <malloc+0x54c>$/;"	l
a62	user/grep.asm	/^ a62:	0137a423          	sw	s3,8(a5)$/;"	l
a62	user/grind.asm	/^     a62:	fd06879b          	addiw	a5,a3,-48$/;"	l
a62	user/sh.asm	/^     a62:	e4a6                	sd	s1,72(sp)$/;"	l
a64	user/ls.asm	/^ a64:	c798                	sw	a4,8(a5)$/;"	l
a64	user/sh.asm	/^     a64:	e0ca                	sd	s2,64(sp)$/;"	l
a64	user/usertests.asm	/^     a64:	434040ef          	jal	4e98 <printf>$/;"	l
a66	user/grep.asm	/^ a66:	00000717          	auipc	a4,0x0$/;"	l
a66	user/grind.asm	/^     a66:	0ff7f793          	zext.b	a5,a5$/;"	l
a66	user/ls.asm	/^ a66:	02071693          	slli	a3,a4,0x20$/;"	l
a66	user/sh.asm	/^     a66:	fc4e                	sd	s3,56(sp)$/;"	l
a68	user/sh.asm	/^     a68:	f852                	sd	s4,48(sp)$/;"	l
a68	user/usertests.asm	/^     a68:	4505                	li	a0,1$/;"	l
a6a	user/grep.asm	/^ a6a:	58a73d23          	sd	a0,1434(a4) # 1000 <freep>$/;"	l
a6a	user/grind.asm	/^     a6a:	4625                	li	a2,9$/;"	l
a6a	user/ls.asm	/^ a6a:	01c6d713          	srli	a4,a3,0x1c$/;"	l
a6a	user/sh.asm	/^     a6a:	f456                	sd	s5,40(sp)$/;"	l
a6a	user/usertests.asm	/^     a6a:	016040ef          	jal	4a80 <exit>$/;"	l
a6c	user/grind.asm	/^     a6c:	02f66863          	bltu	a2,a5,a9c <atoi+0x44>$/;"	l
a6c	user/sh.asm	/^     a6c:	f05a                	sd	s6,32(sp)$/;"	l
a6e	user/grep.asm	/^ a6e:	01078513          	addi	a0,a5,16$/;"	l
a6e	user/ls.asm	/^ a6e:	97ba                	add	a5,a5,a4$/;"	l
a6e	user/sh.asm	/^     a6e:	ec5e                	sd	s7,24(sp)$/;"	l
a6e	user/usertests.asm	/^     a6e:	8626                	mv	a2,s1$/;"	l
a7	kernel/proc.h	/^  \/* 168 *\/ uint64 a7;$/;"	m	struct:trapframe	typeref:typename:uint64
a70	user/grind.asm	/^     a70:	872a                	mv	a4,a0$/;"	l
a70	user/ls.asm	/^ a70:	0137a423          	sw	s3,8(a5)$/;"	l
a70	user/sh.asm	/^     a70:	1080                	addi	s0,sp,96$/;"	l
a70	user/usertests.asm	/^     a70:	85d6                	mv	a1,s5$/;"	l
a72	user/grep.asm	/^ a72:	70e2                	ld	ra,56(sp)$/;"	l
a72	user/grind.asm	/^     a72:	4501                	li	a0,0$/;"	l
a72	user/sh.asm	/^     a72:	8baa                	mv	s7,a0$/;"	l
a72	user/usertests.asm	/^     a72:	00005517          	auipc	a0,0x5$/;"	l
a74	user/grep.asm	/^ a74:	7442                	ld	s0,48(sp)$/;"	l
a74	user/grind.asm	/^     a74:	0705                	addi	a4,a4,1$/;"	l
a74	user/ls.asm	/^ a74:	00000717          	auipc	a4,0x0$/;"	l
a74	user/sh.asm	/^     a74:	8a2e                	mv	s4,a1$/;"	l
a76	user/grep.asm	/^ a76:	74a2                	ld	s1,40(sp)$/;"	l
a76	user/grind.asm	/^     a76:	0025179b          	slliw	a5,a0,0x2$/;"	l
a76	user/sh.asm	/^     a76:	892a                	mv	s2,a0$/;"	l
a76	user/usertests.asm	/^     a76:	a4650513          	addi	a0,a0,-1466 # 54b8 <malloc+0x56c>$/;"	l
a78	user/grep.asm	/^ a78:	69e2                	ld	s3,24(sp)$/;"	l
a78	user/ls.asm	/^ a78:	58a73623          	sd	a0,1420(a4) # 1000 <freep>$/;"	l
a78	user/sh.asm	/^     a78:	4481                	li	s1,0$/;"	l
a7a	user/grep.asm	/^ a7a:	6121                	addi	sp,sp,64$/;"	l
a7a	user/grind.asm	/^     a7a:	9fa9                	addw	a5,a5,a0$/;"	l
a7a	user/sh.asm	/^     a7a:	4aa9                	li	s5,10$/;"	l
a7a	user/usertests.asm	/^     a7a:	41e040ef          	jal	4e98 <printf>$/;"	l
a7c	user/grep.asm	/^ a7c:	8082                	ret$/;"	l
a7c	user/grind.asm	/^     a7c:	0017979b          	slliw	a5,a5,0x1$/;"	l
a7c	user/ls.asm	/^ a7c:	01078513          	addi	a0,a5,16$/;"	l
a7c	user/sh.asm	/^     a7c:	4b35                	li	s6,13$/;"	l
a7e	user/grep.asm	/^ a7e:	7902                	ld	s2,32(sp)$/;"	l
a7e	user/sh.asm	/^     a7e:	89a6                	mv	s3,s1$/;"	l
a7e	user/usertests.asm	/^     a7e:	4505                	li	a0,1$/;"	l
a8	user/echo.asm	/^  a8:	1141                	addi	sp,sp,-16$/;"	l
a8	user/forktest.asm	/^  a8:	fcf51ae3          	bne	a0,a5,7c <forktest+0x56>$/;"	l
a8	user/grind.asm	/^      a8:	e8d2                	sd	s4,80(sp)$/;"	l
a8	user/kill.asm	/^  a8:	6422                	ld	s0,8(sp)$/;"	l
a8	user/ln.asm	/^  a8:	1141                	addi	sp,sp,-16$/;"	l
a8	user/ls.asm	/^  a8:	1c80                	addi	s0,sp,624$/;"	l
a8	user/mkdir.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	user/rm.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	user/sh.asm	/^      a8:	078a                	slli	a5,a5,0x2$/;"	l
a8	user/stressfs.asm	/^  a8:	fd040513          	addi	a0,s0,-48$/;"	l
a8	user/usertests.asm	/^      a8:	5f1040ef          	jal	4e98 <printf>$/;"	l
a8	user/zombie.asm	/^  a8:	ca19                	beqz	a2,be <memset+0x1c>$/;"	l
a80	user/grep.asm	/^ a80:	6a42                	ld	s4,16(sp)$/;"	l
a80	user/grind.asm	/^     a80:	9fb5                	addw	a5,a5,a3$/;"	l
a80	user/ls.asm	/^ a80:	70e2                	ld	ra,56(sp)$/;"	l
a80	user/sh.asm	/^     a80:	2485                	addiw	s1,s1,1$/;"	l
a80	user/usertests.asm	/^     a80:	000040ef          	jal	4a80 <exit>$/;"	l
a82	user/grep.asm	/^ a82:	6aa2                	ld	s5,8(sp)$/;"	l
a82	user/grind.asm	/^     a82:	fd07851b          	addiw	a0,a5,-48$/;"	l
a82	user/ls.asm	/^ a82:	7442                	ld	s0,48(sp)$/;"	l
a82	user/sh.asm	/^     a82:	0344d663          	bge	s1,s4,aae <gets+0x52>$/;"	l
a84	user/grep.asm	/^ a84:	6b02                	ld	s6,0(sp)$/;"	l
a84	user/ls.asm	/^ a84:	74a2                	ld	s1,40(sp)$/;"	l
a84	user/usertests.asm	/^     a84:	85d6                	mv	a1,s5$/;"	l
a86	user/grep.asm	/^ a86:	b7f5                	j	a72 <malloc+0xe2>$/;"	l
a86	user/grind.asm	/^     a86:	00074683          	lbu	a3,0(a4)$/;"	l
a86	user/ls.asm	/^ a86:	69e2                	ld	s3,24(sp)$/;"	l
a86	user/sh.asm	/^     a86:	4605                	li	a2,1$/;"	l
a86	user/usertests.asm	/^     a86:	00005517          	auipc	a0,0x5$/;"	l
a88	user/ls.asm	/^ a88:	6121                	addi	sp,sp,64$/;"	l
a88	user/sh.asm	/^     a88:	faf40593          	addi	a1,s0,-81$/;"	l
a8a	user/grind.asm	/^     a8a:	fd06879b          	addiw	a5,a3,-48$/;"	l
a8a	user/ls.asm	/^ a8a:	8082                	ret$/;"	l
a8a	user/usertests.asm	/^     a8a:	a5a50513          	addi	a0,a0,-1446 # 54e0 <malloc+0x594>$/;"	l
a8c	user/ls.asm	/^ a8c:	7902                	ld	s2,32(sp)$/;"	l
a8c	user/sh.asm	/^     a8c:	4501                	li	a0,0$/;"	l
a8e	user/grind.asm	/^     a8e:	0ff7f793          	zext.b	a5,a5$/;"	l
a8e	user/ls.asm	/^ a8e:	6a42                	ld	s4,16(sp)$/;"	l
a8e	user/sh.asm	/^     a8e:	186000ef          	jal	c14 <read>$/;"	l
a8e	user/usertests.asm	/^     a8e:	40a040ef          	jal	4e98 <printf>$/;"	l
a90	user/ls.asm	/^ a90:	6aa2                	ld	s5,8(sp)$/;"	l
a92	user/grind.asm	/^     a92:	fef671e3          	bgeu	a2,a5,a74 <atoi+0x1c>$/;"	l
a92	user/ls.asm	/^ a92:	6b02                	ld	s6,0(sp)$/;"	l
a92	user/sh.asm	/^     a92:	00a05e63          	blez	a0,aae <gets+0x52>$/;"	l
a92	user/usertests.asm	/^     a92:	4505                	li	a0,1$/;"	l
a94	user/ls.asm	/^ a94:	b7f5                	j	a80 <malloc+0xe2>$/;"	l
a94	user/usertests.asm	/^     a94:	7ed030ef          	jal	4a80 <exit>$/;"	l
a96	user/grind.asm	/^     a96:	6422                	ld	s0,8(sp)$/;"	l
a96	user/sh.asm	/^     a96:	faf44783          	lbu	a5,-81(s0)$/;"	l
a98	user/grind.asm	/^     a98:	0141                	addi	sp,sp,16$/;"	l
a98	user/usertests.asm	/^     a98:	10c00793          	li	a5,268$/;"	l
a9a	user/grind.asm	/^     a9a:	8082                	ret$/;"	l
a9a	user/sh.asm	/^     a9a:	00f90023          	sb	a5,0(s2)$/;"	l
a9c	user/grind.asm	/^     a9c:	4501                	li	a0,0$/;"	l
a9c	user/usertests.asm	/^     a9c:	02f49663          	bne	s1,a5,ac8 <writebig+0x10a>$/;"	l
a9e	user/grind.asm	/^     a9e:	bfe5                	j	a96 <atoi+0x3e>$/;"	l
a9e	user/sh.asm	/^     a9e:	01578763          	beq	a5,s5,aac <gets+0x50>$/;"	l
aa	user/cat.asm	/^  aa:	f57ff0ef          	jal	0 <cat>$/;"	l
aa	user/echo.asm	/^  aa:	e422                	sd	s0,8(sp)$/;"	l
aa	user/grep.asm	/^  aa:	00153513          	seqz	a0,a0$/;"	l
aa	user/grind.asm	/^      aa:	e0da                	sd	s6,64(sp)$/;"	l
aa	user/init.asm	/^  aa:	00001517          	auipc	a0,0x1$/;"	l
aa	user/kill.asm	/^  aa:	0141                	addi	sp,sp,16$/;"	l
aa	user/ln.asm	/^  aa:	e422                	sd	s0,8(sp)$/;"	l
aa	user/ls.asm	/^  aa:	892a                	mv	s2,a0$/;"	l
aa	user/mkdir.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	user/rm.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	user/sh.asm	/^      aa:	00001717          	auipc	a4,0x1$/;"	l
aa	user/wc.asm	/^  aa:	70e6                	ld	ra,120(sp)$/;"	l
aa	user/zombie.asm	/^  aa:	87aa                	mv	a5,a0$/;"	l
aa0	user/grind.asm	/^     aa0:	1141                	addi	sp,sp,-16$/;"	l
aa0	user/usertests.asm	/^     aa0:	854e                	mv	a0,s3$/;"	l
aa2	user/grind.asm	/^     aa2:	e422                	sd	s0,8(sp)$/;"	l
aa2	user/sh.asm	/^     aa2:	0905                	addi	s2,s2,1$/;"	l
aa2	user/usertests.asm	/^     aa2:	006040ef          	jal	4aa8 <close>$/;"	l
aa4	user/grind.asm	/^     aa4:	0800                	addi	s0,sp,16$/;"	l
aa4	user/sh.asm	/^     aa4:	fd679de3          	bne	a5,s6,a7e <gets+0x22>$/;"	l
aa6	user/grind.asm	/^     aa6:	02b57463          	bgeu	a0,a1,ace <memmove+0x2e>$/;"	l
aa6	user/usertests.asm	/^     aa6:	00005517          	auipc	a0,0x5$/;"	l
aa8	user/sh.asm	/^     aa8:	89a6                	mv	s3,s1$/;"	l
aaa	user/grind.asm	/^     aaa:	00c05f63          	blez	a2,ac8 <memmove+0x28>$/;"	l
aaa	user/sh.asm	/^     aaa:	a011                	j	aae <gets+0x52>$/;"	l
aaa	user/usertests.asm	/^     aaa:	9ea50513          	addi	a0,a0,-1558 # 5490 <malloc+0x544>$/;"	l
aac	user/sh.asm	/^     aac:	89a6                	mv	s3,s1$/;"	l
aae	user/grind.asm	/^     aae:	1602                	slli	a2,a2,0x20$/;"	l
aae	user/sh.asm	/^     aae:	99de                	add	s3,s3,s7$/;"	l
aae	user/usertests.asm	/^     aae:	022040ef          	jal	4ad0 <unlink>$/;"	l
ab0	user/grind.asm	/^     ab0:	9201                	srli	a2,a2,0x20$/;"	l
ab0	user/sh.asm	/^     ab0:	00098023          	sb	zero,0(s3)$/;"	l
ab2	user/grind.asm	/^     ab2:	00c507b3          	add	a5,a0,a2$/;"	l
ab2	user/usertests.asm	/^     ab2:	04054c63          	bltz	a0,b0a <writebig+0x14c>$/;"	l
ab4	user/sh.asm	/^     ab4:	855e                	mv	a0,s7$/;"	l
ab6	user/grind.asm	/^     ab6:	872a                	mv	a4,a0$/;"	l
ab6	user/sh.asm	/^     ab6:	60e6                	ld	ra,88(sp)$/;"	l
ab6	user/usertests.asm	/^     ab6:	70e2                	ld	ra,56(sp)$/;"	l
ab8	user/grind.asm	/^     ab8:	0585                	addi	a1,a1,1$/;"	l
ab8	user/sh.asm	/^     ab8:	6446                	ld	s0,80(sp)$/;"	l
ab8	user/usertests.asm	/^     ab8:	7442                	ld	s0,48(sp)$/;"	l
aba	user/grind.asm	/^     aba:	0705                	addi	a4,a4,1$/;"	l
aba	user/sh.asm	/^     aba:	64a6                	ld	s1,72(sp)$/;"	l
aba	user/usertests.asm	/^     aba:	74a2                	ld	s1,40(sp)$/;"	l
abc	user/grind.asm	/^     abc:	fff5c683          	lbu	a3,-1(a1)$/;"	l
abc	user/sh.asm	/^     abc:	6906                	ld	s2,64(sp)$/;"	l
abc	user/usertests.asm	/^     abc:	7902                	ld	s2,32(sp)$/;"	l
abe	user/sh.asm	/^     abe:	79e2                	ld	s3,56(sp)$/;"	l
abe	user/usertests.asm	/^     abe:	69e2                	ld	s3,24(sp)$/;"	l
ac	user/echo.asm	/^  ac:	0800                	addi	s0,sp,16$/;"	l
ac	user/forktest.asm	/^  ac:	00000517          	auipc	a0,0x0$/;"	l
ac	user/grind.asm	/^      ac:	fc5e                	sd	s7,56(sp)$/;"	l
ac	user/kill.asm	/^  ac:	8082                	ret$/;"	l
ac	user/ln.asm	/^  ac:	0800                	addi	s0,sp,16$/;"	l
ac	user/ls.asm	/^  ac:	4581                	li	a1,0$/;"	l
ac	user/mkdir.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	user/rm.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	user/stressfs.asm	/^  ac:	2d6000ef          	jal	382 <open>$/;"	l
ac	user/usertests.asm	/^      ac:	4505                	li	a0,1$/;"	l
ac	user/wc.asm	/^  ac:	7446                	ld	s0,112(sp)$/;"	l
ac	user/zombie.asm	/^  ac:	1602                	slli	a2,a2,0x20$/;"	l
ac0	user/grind.asm	/^     ac0:	fed70fa3          	sb	a3,-1(a4)$/;"	l
ac0	user/sh.asm	/^     ac0:	7a42                	ld	s4,48(sp)$/;"	l
ac0	user/usertests.asm	/^     ac0:	6a42                	ld	s4,16(sp)$/;"	l
ac2	user/sh.asm	/^     ac2:	7aa2                	ld	s5,40(sp)$/;"	l
ac2	user/usertests.asm	/^     ac2:	6aa2                	ld	s5,8(sp)$/;"	l
ac4	user/grind.asm	/^     ac4:	fef71ae3          	bne	a4,a5,ab8 <memmove+0x18>$/;"	l
ac4	user/sh.asm	/^     ac4:	7b02                	ld	s6,32(sp)$/;"	l
ac4	user/usertests.asm	/^     ac4:	6121                	addi	sp,sp,64$/;"	l
ac6	user/sh.asm	/^     ac6:	6be2                	ld	s7,24(sp)$/;"	l
ac6	user/usertests.asm	/^     ac6:	8082                	ret$/;"	l
ac8	user/grind.asm	/^     ac8:	6422                	ld	s0,8(sp)$/;"	l
ac8	user/sh.asm	/^     ac8:	6125                	addi	sp,sp,96$/;"	l
ac8	user/usertests.asm	/^     ac8:	8626                	mv	a2,s1$/;"	l
aca	user/grind.asm	/^     aca:	0141                	addi	sp,sp,16$/;"	l
aca	user/sh.asm	/^     aca:	8082                	ret$/;"	l
aca	user/usertests.asm	/^     aca:	85d6                	mv	a1,s5$/;"	l
acc	user/grind.asm	/^     acc:	8082                	ret$/;"	l
acc	user/sh.asm	/^     acc:	1101                	addi	sp,sp,-32$/;"	l
acc	user/usertests.asm	/^     acc:	00005517          	auipc	a0,0x5$/;"	l
ace	user/grind.asm	/^     ace:	00c50733          	add	a4,a0,a2$/;"	l
ace	user/sh.asm	/^     ace:	ec06                	sd	ra,24(sp)$/;"	l
acquire	kernel/spinlock.c	/^acquire(struct spinlock *lk)$/;"	f	typeref:typename:void
acquiresleep	kernel/sleeplock.c	/^acquiresleep(struct sleeplock *lk)$/;"	f	typeref:typename:void
ad0	user/sh.asm	/^     ad0:	e822                	sd	s0,16(sp)$/;"	l
ad0	user/usertests.asm	/^     ad0:	a3450513          	addi	a0,a0,-1484 # 5500 <malloc+0x5b4>$/;"	l
ad2	user/grind.asm	/^     ad2:	95b2                	add	a1,a1,a2$/;"	l
ad2	user/sh.asm	/^     ad2:	e04a                	sd	s2,0(sp)$/;"	l
ad4	user/grind.asm	/^     ad4:	fec05ae3          	blez	a2,ac8 <memmove+0x28>$/;"	l
ad4	user/sh.asm	/^     ad4:	1000                	addi	s0,sp,32$/;"	l
ad4	user/usertests.asm	/^     ad4:	3c4040ef          	jal	4e98 <printf>$/;"	l
ad6	user/sh.asm	/^     ad6:	892e                	mv	s2,a1$/;"	l
ad8	user/grind.asm	/^     ad8:	fff6079b          	addiw	a5,a2,-1$/;"	l
ad8	user/sh.asm	/^     ad8:	4581                	li	a1,0$/;"	l
ad8	user/usertests.asm	/^     ad8:	4505                	li	a0,1$/;"	l
ada	user/sh.asm	/^     ada:	162000ef          	jal	c3c <open>$/;"	l
ada	user/usertests.asm	/^     ada:	7a7030ef          	jal	4a80 <exit>$/;"	l
adc	user/grind.asm	/^     adc:	1782                	slli	a5,a5,0x20$/;"	l
addr	kernel/kernel.asm	/^      addr = balloc(ip->dev);$/;"	d
addr	kernel/kernel.asm	/^  addr = myproc()->sz;$/;"	d
addr	kernel/virtio.h	/^  uint64 addr;$/;"	m	struct:virtq_desc	typeref:typename:uint64
addrs	kernel/file.h	/^  uint addrs[NDIRECT+1];$/;"	m	struct:inode	typeref:typename:uint[]
addrs	kernel/fs.h	/^  uint addrs[NDIRECT+1];   \/\/ Data block addresses$/;"	m	struct:dinode	typeref:typename:uint[]
ade	user/grind.asm	/^     ade:	9381                	srli	a5,a5,0x20$/;"	l
ade	user/sh.asm	/^     ade:	02054263          	bltz	a0,b02 <stat+0x36>$/;"	l
ade	user/usertests.asm	/^     ade:	862a                	mv	a2,a0$/;"	l
ae	user/cat.asm	/^  ae:	8526                	mv	a0,s1$/;"	l
ae	user/echo.asm	/^  ae:	00054783          	lbu	a5,0(a0)$/;"	l
ae	user/grep.asm	/^  ae:	bfd9                	j	84 <matchhere+0x3a>$/;"	l
ae	user/grind.asm	/^      ae:	00001517          	auipc	a0,0x1$/;"	l
ae	user/init.asm	/^  ae:	88650513          	addi	a0,a0,-1914 # 930 <malloc+0x13e>$/;"	l
ae	user/kill.asm	/^  ae:	1141                	addi	sp,sp,-16$/;"	l
ae	user/ln.asm	/^  ae:	00054783          	lbu	a5,0(a0)$/;"	l
ae	user/ls.asm	/^  ae:	464000ef          	jal	512 <open>$/;"	l
ae	user/sh.asm	/^      ae:	22e70713          	addi	a4,a4,558 # 12d8 <malloc+0x210>$/;"	l
ae	user/usertests.asm	/^      ae:	1d3040ef          	jal	4a80 <exit>$/;"	l
ae	user/wc.asm	/^  ae:	74a6                	ld	s1,104(sp)$/;"	l
ae	user/zombie.asm	/^  ae:	9201                	srli	a2,a2,0x20$/;"	l
ae0	user/grind.asm	/^     ae0:	fff7c793          	not	a5,a5$/;"	l
ae0	user/usertests.asm	/^     ae0:	85d6                	mv	a1,s5$/;"	l
ae2	user/sh.asm	/^     ae2:	e426                	sd	s1,8(sp)$/;"	l
ae2	user/usertests.asm	/^     ae2:	00005517          	auipc	a0,0x5$/;"	l
ae4	user/grind.asm	/^     ae4:	97ba                	add	a5,a5,a4$/;"	l
ae4	user/sh.asm	/^     ae4:	84aa                	mv	s1,a0$/;"	l
ae6	user/grind.asm	/^     ae6:	15fd                	addi	a1,a1,-1$/;"	l
ae6	user/sh.asm	/^     ae6:	85ca                	mv	a1,s2$/;"	l
ae6	user/usertests.asm	/^     ae6:	a4650513          	addi	a0,a0,-1466 # 5528 <malloc+0x5dc>$/;"	l
ae8	user/grind.asm	/^     ae8:	177d                	addi	a4,a4,-1$/;"	l
ae8	user/sh.asm	/^     ae8:	16c000ef          	jal	c54 <fstat>$/;"	l
aea	user/grind.asm	/^     aea:	0005c683          	lbu	a3,0(a1)$/;"	l
aea	user/usertests.asm	/^     aea:	3ae040ef          	jal	4e98 <printf>$/;"	l
aec	user/sh.asm	/^     aec:	892a                	mv	s2,a0$/;"	l
aee	user/grind.asm	/^     aee:	00d70023          	sb	a3,0(a4)$/;"	l
aee	user/sh.asm	/^     aee:	8526                	mv	a0,s1$/;"	l
aee	user/usertests.asm	/^     aee:	4505                	li	a0,1$/;"	l
af0	user/sh.asm	/^     af0:	134000ef          	jal	c24 <close>$/;"	l
af0	user/usertests.asm	/^     af0:	791030ef          	jal	4a80 <exit>$/;"	l
af2	user/grind.asm	/^     af2:	fee79ae3          	bne	a5,a4,ae6 <memmove+0x46>$/;"	l
af4	user/sh.asm	/^     af4:	64a2                	ld	s1,8(sp)$/;"	l
af4	user/usertests.asm	/^     af4:	8626                	mv	a2,s1$/;"	l
af6	user/grind.asm	/^     af6:	bfc9                	j	ac8 <memmove+0x28>$/;"	l
af6	user/sh.asm	/^     af6:	854a                	mv	a0,s2$/;"	l
af6	user/usertests.asm	/^     af6:	85d6                	mv	a1,s5$/;"	l
af8	user/grind.asm	/^     af8:	1141                	addi	sp,sp,-16$/;"	l
af8	user/sh.asm	/^     af8:	60e2                	ld	ra,24(sp)$/;"	l
af8	user/usertests.asm	/^     af8:	00005517          	auipc	a0,0x5$/;"	l
afa	user/grind.asm	/^     afa:	e422                	sd	s0,8(sp)$/;"	l
afa	user/sh.asm	/^     afa:	6442                	ld	s0,16(sp)$/;"	l
afc	user/grind.asm	/^     afc:	0800                	addi	s0,sp,16$/;"	l
afc	user/sh.asm	/^     afc:	6902                	ld	s2,0(sp)$/;"	l
afc	user/usertests.asm	/^     afc:	a4850513          	addi	a0,a0,-1464 # 5540 <malloc+0x5f4>$/;"	l
afe	user/grind.asm	/^     afe:	ca05                	beqz	a2,b2e <memcmp+0x36>$/;"	l
afe	user/sh.asm	/^     afe:	6105                	addi	sp,sp,32$/;"	l
align	kernel/elf.h	/^  uint64 align;$/;"	m	struct:proghdr	typeref:typename:uint64
alloc3_desc	kernel/virtio_disk.c	/^alloc3_desc(int *idx)$/;"	f	typeref:typename:int	file:
alloc_desc	kernel/virtio_disk.c	/^alloc_desc()$/;"	f	typeref:typename:int	file:
allocpid	kernel/proc.c	/^allocpid()$/;"	f	typeref:typename:int
allocproc	kernel/proc.c	/^allocproc(void)$/;"	f	typeref:struct:proc *	file:
argaddr	kernel/syscall.c	/^argaddr(int n, uint64 *ip)$/;"	f	typeref:typename:void
argc	user/sh.asm	/^  argc = 0;$/;"	d
argfd	kernel/sysfile.c	/^argfd(int n, int *pfd, struct file **pf)$/;"	f	typeref:typename:int	file:
argint	kernel/syscall.c	/^argint(int n, int *ip)$/;"	f	typeref:typename:void
argptest	user/usertests.c	/^void argptest(char *s)$/;"	f	typeref:typename:void
argraw	kernel/syscall.c	/^argraw(int n)$/;"	f	typeref:typename:uint64	file:
argstr	kernel/syscall.c	/^argstr(int n, char *buf, int max)$/;"	f	typeref:typename:int
argv	user/init.c	/^char *argv[] = { "sh", 0 };$/;"	v	typeref:typename:char * []
argv	user/initcode.S	/^argv:$/;"	l
argv	user/sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	typeref:typename:char * []	file:
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	file:
atoi	user/ulib.c	/^atoi(const char *s)$/;"	f	typeref:typename:int
avail	kernel/virtio_disk.c	/^  struct virtq_avail *avail;$/;"	m	struct:disk	typeref:struct:virtq_avail *	file:
b	kernel/kernel.asm	/^  b = bget(dev, blockno);$/;"	d
b	kernel/virtio_disk.c	/^    struct buf *b;$/;"	m	struct:disk::__anon0ecc7a2d0108	typeref:struct:buf *	file:
b	user/usertests.asm	/^    b = sbrk(1);$/;"	d
b0	user/cat.asm	/^  b0:	2cc000ef          	jal	37c <close>$/;"	l
b0	user/forktest.asm	/^  b0:	37450513          	addi	a0,a0,884 # 420 <uptime+0x48>$/;"	l
b0	user/grep.asm	/^  b0:	0585                	addi	a1,a1,1$/;"	l
b0	user/kill.asm	/^  b0:	e422                	sd	s0,8(sp)$/;"	l
b0	user/mkdir.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	user/rm.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	user/stressfs.asm	/^  b0:	892a                	mv	s2,a0$/;"	l
b0	user/wc.asm	/^  b0:	7906                	ld	s2,96(sp)$/;"	l
b0	user/zombie.asm	/^  b0:	00a60733          	add	a4,a2,a0$/;"	l
b00	user/grind.asm	/^     b00:	fff6069b          	addiw	a3,a2,-1$/;"	l
b00	user/sh.asm	/^     b00:	8082                	ret$/;"	l
b00	user/usertests.asm	/^     b00:	398040ef          	jal	4e98 <printf>$/;"	l
b02	user/sh.asm	/^     b02:	597d                	li	s2,-1$/;"	l
b04	user/grind.asm	/^     b04:	1682                	slli	a3,a3,0x20$/;"	l
b04	user/sh.asm	/^     b04:	bfcd                	j	af6 <stat+0x2a>$/;"	l
b04	user/usertests.asm	/^     b04:	4505                	li	a0,1$/;"	l
b06	user/grind.asm	/^     b06:	9281                	srli	a3,a3,0x20$/;"	l
b06	user/sh.asm	/^     b06:	1141                	addi	sp,sp,-16$/;"	l
b06	user/usertests.asm	/^     b06:	77b030ef          	jal	4a80 <exit>$/;"	l
b08	user/grind.asm	/^     b08:	0685                	addi	a3,a3,1$/;"	l
b08	user/sh.asm	/^     b08:	e422                	sd	s0,8(sp)$/;"	l
b0a	user/grind.asm	/^     b0a:	96aa                	add	a3,a3,a0$/;"	l
b0a	user/sh.asm	/^     b0a:	0800                	addi	s0,sp,16$/;"	l
b0a	user/usertests.asm	/^     b0a:	85d6                	mv	a1,s5$/;"	l
b0c	user/grind.asm	/^     b0c:	00054783          	lbu	a5,0(a0)$/;"	l
b0c	user/sh.asm	/^     b0c:	00054683          	lbu	a3,0(a0)$/;"	l
b0c	user/usertests.asm	/^     b0c:	00005517          	auipc	a0,0x5$/;"	l
b10	user/grind.asm	/^     b10:	0005c703          	lbu	a4,0(a1)$/;"	l
b10	user/sh.asm	/^     b10:	fd06879b          	addiw	a5,a3,-48$/;"	l
b10	user/usertests.asm	/^     b10:	a5c50513          	addi	a0,a0,-1444 # 5568 <malloc+0x61c>$/;"	l
b14	user/grind.asm	/^     b14:	00e79863          	bne	a5,a4,b24 <memcmp+0x2c>$/;"	l
b14	user/sh.asm	/^     b14:	0ff7f793          	zext.b	a5,a5$/;"	l
b14	user/usertests.asm	/^     b14:	384040ef          	jal	4e98 <printf>$/;"	l
b18	user/grind.asm	/^     b18:	0505                	addi	a0,a0,1$/;"	l
b18	user/sh.asm	/^     b18:	4625                	li	a2,9$/;"	l
b18	user/usertests.asm	/^     b18:	4505                	li	a0,1$/;"	l
b1a	user/grind.asm	/^     b1a:	0585                	addi	a1,a1,1$/;"	l
b1a	user/sh.asm	/^     b1a:	02f66863          	bltu	a2,a5,b4a <atoi+0x44>$/;"	l
b1a	user/usertests.asm	/^     b1a:	767030ef          	jal	4a80 <exit>$/;"	l
b1c	user/grind.asm	/^     b1c:	fed518e3          	bne	a0,a3,b0c <memcmp+0x14>$/;"	l
b1e	user/sh.asm	/^     b1e:	872a                	mv	a4,a0$/;"	l
b1e	user/usertests.asm	/^     b1e:	7179                	addi	sp,sp,-48$/;"	l
b2	user/echo.asm	/^  b2:	cb91                	beqz	a5,c6 <strcmp+0x1e>$/;"	l
b2	user/grep.asm	/^  b2:	00178513          	addi	a0,a5,1$/;"	l
b2	user/grind.asm	/^      b2:	07a50513          	addi	a0,a0,122 # 1128 <malloc+0x10e>$/;"	l
b2	user/init.asm	/^  b2:	68c000ef          	jal	73e <printf>$/;"	l
b2	user/kill.asm	/^  b2:	0800                	addi	s0,sp,16$/;"	l
b2	user/ln.asm	/^  b2:	cf91                	beqz	a5,ce <strlen+0x26>$/;"	l
b2	user/ls.asm	/^  b2:	06054363          	bltz	a0,118 <ls+0x80>$/;"	l
b2	user/mkdir.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	user/rm.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	user/sh.asm	/^      b2:	97ba                	add	a5,a5,a4$/;"	l
b2	user/stressfs.asm	/^  b2:	44d1                	li	s1,20$/;"	l
b2	user/usertests.asm	/^      b2:	1101                	addi	sp,sp,-32$/;"	l
b2	user/wc.asm	/^  b2:	69e6                	ld	s3,88(sp)$/;"	l
b20	user/grind.asm	/^     b20:	4501                	li	a0,0$/;"	l
b20	user/sh.asm	/^     b20:	4501                	li	a0,0$/;"	l
b20	user/usertests.asm	/^     b20:	f406                	sd	ra,40(sp)$/;"	l
b22	user/grind.asm	/^     b22:	a019                	j	b28 <memcmp+0x30>$/;"	l
b22	user/sh.asm	/^     b22:	0705                	addi	a4,a4,1$/;"	l
b22	user/usertests.asm	/^     b22:	f022                	sd	s0,32(sp)$/;"	l
b24	user/grind.asm	/^     b24:	40e7853b          	subw	a0,a5,a4$/;"	l
b24	user/sh.asm	/^     b24:	0025179b          	slliw	a5,a0,0x2$/;"	l
b24	user/usertests.asm	/^     b24:	ec26                	sd	s1,24(sp)$/;"	l
b26	user/usertests.asm	/^     b26:	e84a                	sd	s2,16(sp)$/;"	l
b28	user/grind.asm	/^     b28:	6422                	ld	s0,8(sp)$/;"	l
b28	user/sh.asm	/^     b28:	9fa9                	addw	a5,a5,a0$/;"	l
b28	user/usertests.asm	/^     b28:	e44e                	sd	s3,8(sp)$/;"	l
b2a	user/grind.asm	/^     b2a:	0141                	addi	sp,sp,16$/;"	l
b2a	user/sh.asm	/^     b2a:	0017979b          	slliw	a5,a5,0x1$/;"	l
b2a	user/usertests.asm	/^     b2a:	1800                	addi	s0,sp,48$/;"	l
b2c	user/grind.asm	/^     b2c:	8082                	ret$/;"	l
b2c	user/usertests.asm	/^     b2c:	89aa                	mv	s3,a0$/;"	l
b2e	user/grind.asm	/^     b2e:	4501                	li	a0,0$/;"	l
b2e	user/sh.asm	/^     b2e:	9fb5                	addw	a5,a5,a3$/;"	l
b2e	user/usertests.asm	/^     b2e:	20200593          	li	a1,514$/;"	l
b30	user/grind.asm	/^     b30:	bfe5                	j	b28 <memcmp+0x30>$/;"	l
b30	user/sh.asm	/^     b30:	fd07851b          	addiw	a0,a5,-48$/;"	l
b32	user/grind.asm	/^     b32:	1141                	addi	sp,sp,-16$/;"	l
b32	user/usertests.asm	/^     b32:	00005517          	auipc	a0,0x5$/;"	l
b34	user/grind.asm	/^     b34:	e406                	sd	ra,8(sp)$/;"	l
b34	user/sh.asm	/^     b34:	00074683          	lbu	a3,0(a4)$/;"	l
b36	user/grind.asm	/^     b36:	e022                	sd	s0,0(sp)$/;"	l
b36	user/usertests.asm	/^     b36:	a4e50513          	addi	a0,a0,-1458 # 5580 <malloc+0x634>$/;"	l
b38	user/grind.asm	/^     b38:	0800                	addi	s0,sp,16$/;"	l
b38	user/sh.asm	/^     b38:	fd06879b          	addiw	a5,a3,-48$/;"	l
b3a	user/grind.asm	/^     b3a:	f67ff0ef          	jal	aa0 <memmove>$/;"	l
b3a	user/usertests.asm	/^     b3a:	787030ef          	jal	4ac0 <open>$/;"	l
b3c	user/sh.asm	/^     b3c:	0ff7f793          	zext.b	a5,a5$/;"	l
b3e	user/grind.asm	/^     b3e:	60a2                	ld	ra,8(sp)$/;"	l
b3e	user/usertests.asm	/^     b3e:	0a054f63          	bltz	a0,bfc <unlinkread+0xde>$/;"	l
b4	user/cat.asm	/^  b4:	0921                	addi	s2,s2,8$/;"	l
b4	user/echo.asm	/^  b4:	0005c703          	lbu	a4,0(a1)$/;"	l
b4	user/forktest.asm	/^  b4:	f4dff0ef          	jal	0 <print>$/;"	l
b4	user/kill.asm	/^  b4:	00054783          	lbu	a5,0(a0)$/;"	l
b4	user/ln.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	user/sh.asm	/^      b4:	439c                	lw	a5,0(a5)$/;"	l
b4	user/stressfs.asm	/^  b4:	20000613          	li	a2,512$/;"	l
b4	user/usertests.asm	/^      b4:	ec06                	sd	ra,24(sp)$/;"	l
b4	user/wc.asm	/^  b4:	6a46                	ld	s4,80(sp)$/;"	l
b4	user/zombie.asm	/^  b4:	00b78023          	sb	a1,0(a5)$/;"	l
b40	user/grind.asm	/^     b40:	6402                	ld	s0,0(sp)$/;"	l
b40	user/sh.asm	/^     b40:	fef671e3          	bgeu	a2,a5,b22 <atoi+0x1c>$/;"	l
b42	user/grind.asm	/^     b42:	0141                	addi	sp,sp,16$/;"	l
b42	user/usertests.asm	/^     b42:	84aa                	mv	s1,a0$/;"	l
b44	user/grind.asm	/^     b44:	8082                	ret$/;"	l
b44	user/sh.asm	/^     b44:	6422                	ld	s0,8(sp)$/;"	l
b44	user/usertests.asm	/^     b44:	4615                	li	a2,5$/;"	l
b46	user/grind.asm	/^     b46:	4885                	li	a7,1$/;"	l
b46	user/sh.asm	/^     b46:	0141                	addi	sp,sp,16$/;"	l
b46	user/usertests.asm	/^     b46:	00005597          	auipc	a1,0x5$/;"	l
b48	user/grind.asm	/^     b48:	00000073          	ecall$/;"	l
b48	user/sh.asm	/^     b48:	8082                	ret$/;"	l
b4a	user/sh.asm	/^     b4a:	4501                	li	a0,0$/;"	l
b4a	user/usertests.asm	/^     b4a:	a6a58593          	addi	a1,a1,-1430 # 55b0 <malloc+0x664>$/;"	l
b4c	user/grind.asm	/^     b4c:	8082                	ret$/;"	l
b4c	user/sh.asm	/^     b4c:	bfe5                	j	b44 <atoi+0x3e>$/;"	l
b4e	user/grind.asm	/^     b4e:	4889                	li	a7,2$/;"	l
b4e	user/sh.asm	/^     b4e:	1141                	addi	sp,sp,-16$/;"	l
b4e	user/usertests.asm	/^     b4e:	753030ef          	jal	4aa0 <write>$/;"	l
b50	user/grind.asm	/^     b50:	00000073          	ecall$/;"	l
b50	user/sh.asm	/^     b50:	e422                	sd	s0,8(sp)$/;"	l
b52	user/sh.asm	/^     b52:	0800                	addi	s0,sp,16$/;"	l
b52	user/usertests.asm	/^     b52:	8526                	mv	a0,s1$/;"	l
b54	user/grind.asm	/^     b54:	8082                	ret$/;"	l
b54	user/sh.asm	/^     b54:	02b57463          	bgeu	a0,a1,b7c <memmove+0x2e>$/;"	l
b54	user/usertests.asm	/^     b54:	755030ef          	jal	4aa8 <close>$/;"	l
b56	user/grind.asm	/^     b56:	488d                	li	a7,3$/;"	l
b58	user/grind.asm	/^     b58:	00000073          	ecall$/;"	l
b58	user/sh.asm	/^     b58:	00c05f63          	blez	a2,b76 <memmove+0x28>$/;"	l
b58	user/usertests.asm	/^     b58:	4589                	li	a1,2$/;"	l
b5a	user/usertests.asm	/^     b5a:	00005517          	auipc	a0,0x5$/;"	l
b5c	user/grind.asm	/^     b5c:	8082                	ret$/;"	l
b5c	user/sh.asm	/^     b5c:	1602                	slli	a2,a2,0x20$/;"	l
b5e	user/grind.asm	/^     b5e:	4891                	li	a7,4$/;"	l
b5e	user/sh.asm	/^     b5e:	9201                	srli	a2,a2,0x20$/;"	l
b5e	user/usertests.asm	/^     b5e:	a2650513          	addi	a0,a0,-1498 # 5580 <malloc+0x634>$/;"	l
b6	user/cat.asm	/^  b6:	ff3912e3          	bne	s2,s3,9a <main+0x28>$/;"	l
b6	user/grep.asm	/^  b6:	f95ff0ef          	jal	4a <matchhere>$/;"	l
b6	user/grind.asm	/^      b6:	6b1000ef          	jal	f66 <printf>$/;"	l
b6	user/init.asm	/^  b6:	4505                	li	a0,1$/;"	l
b6	user/ln.asm	/^  b6:	87aa                	mv	a5,a0$/;"	l
b6	user/ls.asm	/^  b6:	24913c23          	sd	s1,600(sp)$/;"	l
b6	user/mkdir.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	user/rm.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	user/sh.asm	/^      b6:	97ba                	add	a5,a5,a4$/;"	l
b6	user/usertests.asm	/^      b6:	e822                	sd	s0,16(sp)$/;"	l
b6	user/wc.asm	/^  b6:	6aa6                	ld	s5,72(sp)$/;"	l
b60	user/grind.asm	/^     b60:	00000073          	ecall$/;"	l
b60	user/sh.asm	/^     b60:	00c507b3          	add	a5,a0,a2$/;"	l
b62	user/usertests.asm	/^     b62:	75f030ef          	jal	4ac0 <open>$/;"	l
b64	user/grind.asm	/^     b64:	8082                	ret$/;"	l
b64	user/sh.asm	/^     b64:	872a                	mv	a4,a0$/;"	l
b66	user/grind.asm	/^     b66:	4895                	li	a7,5$/;"	l
b66	user/sh.asm	/^     b66:	0585                	addi	a1,a1,1$/;"	l
b66	user/usertests.asm	/^     b66:	84aa                	mv	s1,a0$/;"	l
b68	user/grind.asm	/^     b68:	00000073          	ecall$/;"	l
b68	user/sh.asm	/^     b68:	0705                	addi	a4,a4,1$/;"	l
b68	user/usertests.asm	/^     b68:	0a054463          	bltz	a0,c10 <unlinkread+0xf2>$/;"	l
b6a	user/sh.asm	/^     b6a:	fff5c683          	lbu	a3,-1(a1)$/;"	l
b6c	user/grind.asm	/^     b6c:	8082                	ret$/;"	l
b6c	user/usertests.asm	/^     b6c:	00005517          	auipc	a0,0x5$/;"	l
b6e	user/grind.asm	/^     b6e:	48c1                	li	a7,16$/;"	l
b6e	user/sh.asm	/^     b6e:	fed70fa3          	sb	a3,-1(a4)$/;"	l
b70	user/grind.asm	/^     b70:	00000073          	ecall$/;"	l
b70	user/usertests.asm	/^     b70:	a1450513          	addi	a0,a0,-1516 # 5580 <malloc+0x634>$/;"	l
b72	user/sh.asm	/^     b72:	fef71ae3          	bne	a4,a5,b66 <memmove+0x18>$/;"	l
b74	user/grind.asm	/^     b74:	8082                	ret$/;"	l
b74	user/usertests.asm	/^     b74:	75d030ef          	jal	4ad0 <unlink>$/;"	l
b76	user/grind.asm	/^     b76:	48d5                	li	a7,21$/;"	l
b76	user/sh.asm	/^     b76:	6422                	ld	s0,8(sp)$/;"	l
b78	user/grind.asm	/^     b78:	00000073          	ecall$/;"	l
b78	user/sh.asm	/^     b78:	0141                	addi	sp,sp,16$/;"	l
b78	user/usertests.asm	/^     b78:	e555                	bnez	a0,c24 <unlinkread+0x106>$/;"	l
b7a	user/sh.asm	/^     b7a:	8082                	ret$/;"	l
b7a	user/usertests.asm	/^     b7a:	20200593          	li	a1,514$/;"	l
b7c	user/grind.asm	/^     b7c:	8082                	ret$/;"	l
b7c	user/sh.asm	/^     b7c:	00c50733          	add	a4,a0,a2$/;"	l
b7e	user/grind.asm	/^     b7e:	4899                	li	a7,6$/;"	l
b7e	user/usertests.asm	/^     b7e:	00005517          	auipc	a0,0x5$/;"	l
b8	user/echo.asm	/^  b8:	00f71763          	bne	a4,a5,c6 <strcmp+0x1e>$/;"	l
b8	user/forktest.asm	/^  b8:	60e2                	ld	ra,24(sp)$/;"	l
b8	user/init.asm	/^  b8:	26e000ef          	jal	326 <exit>$/;"	l
b8	user/kill.asm	/^  b8:	cf91                	beqz	a5,d4 <strlen+0x26>$/;"	l
b8	user/ln.asm	/^  b8:	86be                	mv	a3,a5$/;"	l
b8	user/sh.asm	/^      b8:	8782                	jr	a5$/;"	l
b8	user/stressfs.asm	/^  b8:	dd040593          	addi	a1,s0,-560$/;"	l
b8	user/usertests.asm	/^      b8:	e426                	sd	s1,8(sp)$/;"	l
b8	user/wc.asm	/^  b8:	6b06                	ld	s6,64(sp)$/;"	l
b8	user/zombie.asm	/^  b8:	0785                	addi	a5,a5,1$/;"	l
b80	user/grind.asm	/^     b80:	00000073          	ecall$/;"	l
b80	user/sh.asm	/^     b80:	95b2                	add	a1,a1,a2$/;"	l
b82	user/sh.asm	/^     b82:	fec05ae3          	blez	a2,b76 <memmove+0x28>$/;"	l
b82	user/usertests.asm	/^     b82:	a0250513          	addi	a0,a0,-1534 # 5580 <malloc+0x634>$/;"	l
b84	user/grind.asm	/^     b84:	8082                	ret$/;"	l
b86	user/grind.asm	/^     b86:	489d                	li	a7,7$/;"	l
b86	user/sh.asm	/^     b86:	fff6079b          	addiw	a5,a2,-1$/;"	l
b86	user/usertests.asm	/^     b86:	73b030ef          	jal	4ac0 <open>$/;"	l
b88	user/grind.asm	/^     b88:	00000073          	ecall$/;"	l
b8a	user/sh.asm	/^     b8a:	1782                	slli	a5,a5,0x20$/;"	l
b8a	user/usertests.asm	/^     b8a:	892a                	mv	s2,a0$/;"	l
b8c	user/grind.asm	/^     b8c:	8082                	ret$/;"	l
b8c	user/sh.asm	/^     b8c:	9381                	srli	a5,a5,0x20$/;"	l
b8c	user/usertests.asm	/^     b8c:	460d                	li	a2,3$/;"	l
b8e	user/grind.asm	/^     b8e:	48bd                	li	a7,15$/;"	l
b8e	user/sh.asm	/^     b8e:	fff7c793          	not	a5,a5$/;"	l
b8e	user/usertests.asm	/^     b8e:	00005597          	auipc	a1,0x5$/;"	l
b90	user/grind.asm	/^     b90:	00000073          	ecall$/;"	l
b92	user/sh.asm	/^     b92:	97ba                	add	a5,a5,a4$/;"	l
b92	user/usertests.asm	/^     b92:	a6a58593          	addi	a1,a1,-1430 # 55f8 <malloc+0x6ac>$/;"	l
b94	user/grind.asm	/^     b94:	8082                	ret$/;"	l
b94	user/sh.asm	/^     b94:	15fd                	addi	a1,a1,-1$/;"	l
b96	user/grind.asm	/^     b96:	48c5                	li	a7,17$/;"	l
b96	user/sh.asm	/^     b96:	177d                	addi	a4,a4,-1$/;"	l
b96	user/usertests.asm	/^     b96:	70b030ef          	jal	4aa0 <write>$/;"	l
b98	user/grind.asm	/^     b98:	00000073          	ecall$/;"	l
b98	user/sh.asm	/^     b98:	0005c683          	lbu	a3,0(a1)$/;"	l
b9a	user/usertests.asm	/^     b9a:	854a                	mv	a0,s2$/;"	l
b9c	user/grind.asm	/^     b9c:	8082                	ret$/;"	l
b9c	user/sh.asm	/^     b9c:	00d70023          	sb	a3,0(a4)$/;"	l
b9c	user/usertests.asm	/^     b9c:	70d030ef          	jal	4aa8 <close>$/;"	l
b9e	user/grind.asm	/^     b9e:	48c9                	li	a7,18$/;"	l
ba	user/cat.asm	/^  ba:	4501                	li	a0,0$/;"	l
ba	user/forktest.asm	/^  ba:	6442                	ld	s0,16(sp)$/;"	l
ba	user/grep.asm	/^  ba:	b7e9                	j	84 <matchhere+0x3a>$/;"	l
ba	user/grind.asm	/^      ba:	4505                	li	a0,1$/;"	l
ba	user/kill.asm	/^  ba:	0505                	addi	a0,a0,1$/;"	l
ba	user/ln.asm	/^  ba:	0785                	addi	a5,a5,1$/;"	l
ba	user/ls.asm	/^  ba:	84aa                	mv	s1,a0$/;"	l
ba	user/mkdir.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	user/rm.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	user/sh.asm	/^      ba:	ec26                	sd	s1,24(sp)$/;"	l
ba	user/usertests.asm	/^      ba:	1000                	addi	s0,sp,32$/;"	l
ba	user/wc.asm	/^  ba:	7be2                	ld	s7,56(sp)$/;"	l
ba	user/zombie.asm	/^  ba:	fee79de3          	bne	a5,a4,b4 <memset+0x12>$/;"	l
ba0	user/grind.asm	/^     ba0:	00000073          	ecall$/;"	l
ba0	user/sh.asm	/^     ba0:	fee79ae3          	bne	a5,a4,b94 <memmove+0x46>$/;"	l
ba0	user/usertests.asm	/^     ba0:	660d                	lui	a2,0x3$/;"	l
ba2	user/usertests.asm	/^     ba2:	0000c597          	auipc	a1,0xc$/;"	l
ba4	user/grind.asm	/^     ba4:	8082                	ret$/;"	l
ba4	user/sh.asm	/^     ba4:	bfc9                	j	b76 <memmove+0x28>$/;"	l
ba6	user/grind.asm	/^     ba6:	48a1                	li	a7,8$/;"	l
ba6	user/sh.asm	/^     ba6:	1141                	addi	sp,sp,-16$/;"	l
ba6	user/usertests.asm	/^     ba6:	0d658593          	addi	a1,a1,214 # cc78 <buf>$/;"	l
ba8	user/grind.asm	/^     ba8:	00000073          	ecall$/;"	l
ba8	user/sh.asm	/^     ba8:	e422                	sd	s0,8(sp)$/;"	l
baa	user/sh.asm	/^     baa:	0800                	addi	s0,sp,16$/;"	l
baa	user/usertests.asm	/^     baa:	8526                	mv	a0,s1$/;"	l
bac	user/grind.asm	/^     bac:	8082                	ret$/;"	l
bac	user/sh.asm	/^     bac:	ca05                	beqz	a2,bdc <memcmp+0x36>$/;"	l
bac	user/usertests.asm	/^     bac:	6ed030ef          	jal	4a98 <read>$/;"	l
backcmd	user/sh.c	/^backcmd(struct cmd *subcmd)$/;"	f	typeref:struct:cmd *
backcmd	user/sh.c	/^struct backcmd {$/;"	s	file:
bad	kernel/kernel.asm	/^ bad:$/;"	l
badarg	user/usertests.c	/^badarg(char *s)$/;"	f	typeref:typename:void
badwrite	user/usertests.c	/^badwrite(char *s)$/;"	f	typeref:typename:void
bae	user/grind.asm	/^     bae:	48cd                	li	a7,19$/;"	l
bae	user/sh.asm	/^     bae:	fff6069b          	addiw	a3,a2,-1$/;"	l
balloc	kernel/fs.c	/^balloc(uint dev)$/;"	f	typeref:typename:uint	file:
balloc	mkfs/mkfs.c	/^balloc(int used)$/;"	f	typeref:typename:void
barrier	Makefile	/^barrier: notxv6\/barrier.c$/;"	t
base	user/umalloc.c	/^static Header base;$/;"	v	typeref:typename:Header	file:
bb0	user/grind.asm	/^     bb0:	00000073          	ecall$/;"	l
bb0	user/usertests.asm	/^     bb0:	4795                	li	a5,5$/;"	l
bb2	user/sh.asm	/^     bb2:	1682                	slli	a3,a3,0x20$/;"	l
bb2	user/usertests.asm	/^     bb2:	08f51363          	bne	a0,a5,c38 <unlinkread+0x11a>$/;"	l
bb4	user/grind.asm	/^     bb4:	8082                	ret$/;"	l
bb4	user/sh.asm	/^     bb4:	9281                	srli	a3,a3,0x20$/;"	l
bb6	user/grind.asm	/^     bb6:	48d1                	li	a7,20$/;"	l
bb6	user/sh.asm	/^     bb6:	0685                	addi	a3,a3,1$/;"	l
bb6	user/usertests.asm	/^     bb6:	0000c717          	auipc	a4,0xc$/;"	l
bb8	user/grind.asm	/^     bb8:	00000073          	ecall$/;"	l
bb8	user/sh.asm	/^     bb8:	96aa                	add	a3,a3,a0$/;"	l
bba	user/sh.asm	/^     bba:	00054783          	lbu	a5,0(a0)$/;"	l
bba	user/usertests.asm	/^     bba:	0c274703          	lbu	a4,194(a4) # cc78 <buf>$/;"	l
bbc	user/grind.asm	/^     bbc:	8082                	ret$/;"	l
bbe	user/grind.asm	/^     bbe:	48a5                	li	a7,9$/;"	l
bbe	user/sh.asm	/^     bbe:	0005c703          	lbu	a4,0(a1)$/;"	l
bbe	user/usertests.asm	/^     bbe:	06800793          	li	a5,104$/;"	l
bc	user/cat.asm	/^  bc:	298000ef          	jal	354 <exit>$/;"	l
bc	user/echo.asm	/^  bc:	0505                	addi	a0,a0,1$/;"	l
bc	user/forktest.asm	/^  bc:	64a2                	ld	s1,8(sp)$/;"	l
bc	user/grep.asm	/^  bc:	4505                	li	a0,1$/;"	l
bc	user/grind.asm	/^      bc:	293000ef          	jal	b4e <exit>$/;"	l
bc	user/init.asm	/^  bc:	1141                	addi	sp,sp,-16$/;"	l
bc	user/kill.asm	/^  bc:	87aa                	mv	a5,a0$/;"	l
bc	user/ln.asm	/^  bc:	fff7c703          	lbu	a4,-1(a5)$/;"	l
bc	user/ls.asm	/^  bc:	d9840593          	addi	a1,s0,-616$/;"	l
bc	user/mkdir.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	user/rm.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	user/sh.asm	/^      bc:	4505                	li	a0,1$/;"	l
bc	user/stressfs.asm	/^  bc:	854a                	mv	a0,s2$/;"	l
bc	user/usertests.asm	/^      bc:	84aa                	mv	s1,a0$/;"	l
bc	user/wc.asm	/^  bc:	7c42                	ld	s8,48(sp)$/;"	l
bc0	user/grind.asm	/^     bc0:	00000073          	ecall$/;"	l
bc2	user/sh.asm	/^     bc2:	00e79863          	bne	a5,a4,bd2 <memcmp+0x2c>$/;"	l
bc2	user/usertests.asm	/^     bc2:	08f71563          	bne	a4,a5,c4c <unlinkread+0x12e>$/;"	l
bc4	user/grind.asm	/^     bc4:	8082                	ret$/;"	l
bc6	user/grind.asm	/^     bc6:	48a9                	li	a7,10$/;"	l
bc6	user/sh.asm	/^     bc6:	0505                	addi	a0,a0,1$/;"	l
bc6	user/usertests.asm	/^     bc6:	4629                	li	a2,10$/;"	l
bc8	user/grind.asm	/^     bc8:	00000073          	ecall$/;"	l
bc8	user/sh.asm	/^     bc8:	0585                	addi	a1,a1,1$/;"	l
bc8	user/usertests.asm	/^     bc8:	0000c597          	auipc	a1,0xc$/;"	l
bca	user/sh.asm	/^     bca:	fed518e3          	bne	a0,a3,bba <memcmp+0x14>$/;"	l
bcache	kernel/bio.c	/^} bcache;$/;"	v	typeref:struct:__anon6a7165400108
bcc	user/grind.asm	/^     bcc:	8082                	ret$/;"	l
bcc	user/usertests.asm	/^     bcc:	0b058593          	addi	a1,a1,176 # cc78 <buf>$/;"	l
bce	user/grind.asm	/^     bce:	48ad                	li	a7,11$/;"	l
bce	user/sh.asm	/^     bce:	4501                	li	a0,0$/;"	l
bcmd	user/sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd0	user/grind.asm	/^     bd0:	00000073          	ecall$/;"	l
bd0	user/sh.asm	/^     bd0:	a019                	j	bd6 <memcmp+0x30>$/;"	l
bd0	user/usertests.asm	/^     bd0:	8526                	mv	a0,s1$/;"	l
bd2	user/sh.asm	/^     bd2:	40e7853b          	subw	a0,a5,a4$/;"	l
bd2	user/usertests.asm	/^     bd2:	6cf030ef          	jal	4aa0 <write>$/;"	l
bd4	user/grind.asm	/^     bd4:	8082                	ret$/;"	l
bd6	user/grind.asm	/^     bd6:	48b1                	li	a7,12$/;"	l
bd6	user/sh.asm	/^     bd6:	6422                	ld	s0,8(sp)$/;"	l
bd6	user/usertests.asm	/^     bd6:	47a9                	li	a5,10$/;"	l
bd8	user/grind.asm	/^     bd8:	00000073          	ecall$/;"	l
bd8	user/sh.asm	/^     bd8:	0141                	addi	sp,sp,16$/;"	l
bd8	user/usertests.asm	/^     bd8:	08f51463          	bne	a0,a5,c60 <unlinkread+0x142>$/;"	l
bda	user/sh.asm	/^     bda:	8082                	ret$/;"	l
bdc	user/grind.asm	/^     bdc:	8082                	ret$/;"	l
bdc	user/sh.asm	/^     bdc:	4501                	li	a0,0$/;"	l
bdc	user/usertests.asm	/^     bdc:	8526                	mv	a0,s1$/;"	l
bde	user/grind.asm	/^     bde:	48b5                	li	a7,13$/;"	l
bde	user/sh.asm	/^     bde:	bfe5                	j	bd6 <memcmp+0x30>$/;"	l
bde	user/usertests.asm	/^     bde:	6cb030ef          	jal	4aa8 <close>$/;"	l
be	user/echo.asm	/^  be:	0585                	addi	a1,a1,1$/;"	l
be	user/forktest.asm	/^  be:	6902                	ld	s2,0(sp)$/;"	l
be	user/grep.asm	/^  be:	8082                	ret$/;"	l
be	user/init.asm	/^  be:	e406                	sd	ra,8(sp)$/;"	l
be	user/kill.asm	/^  be:	86be                	mv	a3,a5$/;"	l
be	user/mkdir.asm	/^  be:	8082                	ret$/;"	l
be	user/rm.asm	/^  be:	8082                	ret$/;"	l
be	user/sh.asm	/^      be:	33f000ef          	jal	bfc <exit>$/;"	l
be	user/stressfs.asm	/^  be:	29c000ef          	jal	35a <read>$/;"	l
be	user/usertests.asm	/^      be:	4581                	li	a1,0$/;"	l
be	user/wc.asm	/^  be:	7ca2                	ld	s9,40(sp)$/;"	l
be	user/zombie.asm	/^  be:	6422                	ld	s0,8(sp)$/;"	l
be0	user/grind.asm	/^     be0:	00000073          	ecall$/;"	l
be0	user/sh.asm	/^     be0:	1141                	addi	sp,sp,-16$/;"	l
be2	user/sh.asm	/^     be2:	e406                	sd	ra,8(sp)$/;"	l
be2	user/usertests.asm	/^     be2:	00005517          	auipc	a0,0x5$/;"	l
be4	user/grind.asm	/^     be4:	8082                	ret$/;"	l
be4	user/sh.asm	/^     be4:	e022                	sd	s0,0(sp)$/;"	l
be6	user/grind.asm	/^     be6:	48b9                	li	a7,14$/;"	l
be6	user/sh.asm	/^     be6:	0800                	addi	s0,sp,16$/;"	l
be6	user/usertests.asm	/^     be6:	99e50513          	addi	a0,a0,-1634 # 5580 <malloc+0x634>$/;"	l
be8	user/grind.asm	/^     be8:	00000073          	ecall$/;"	l
be8	user/sh.asm	/^     be8:	f67ff0ef          	jal	b4e <memmove>$/;"	l
bea	user/usertests.asm	/^     bea:	6e7030ef          	jal	4ad0 <unlink>$/;"	l
bec	user/grind.asm	/^     bec:	8082                	ret$/;"	l
bec	user/sh.asm	/^     bec:	60a2                	ld	ra,8(sp)$/;"	l
bee	user/grind.asm	/^     bee:	1101                	addi	sp,sp,-32$/;"	l
bee	user/sh.asm	/^     bee:	6402                	ld	s0,0(sp)$/;"	l
bee	user/usertests.asm	/^     bee:	70a2                	ld	ra,40(sp)$/;"	l
begin_op	kernel/log.c	/^begin_op(void)$/;"	f	typeref:typename:void
bf0	user/grind.asm	/^     bf0:	ec06                	sd	ra,24(sp)$/;"	l
bf0	user/sh.asm	/^     bf0:	0141                	addi	sp,sp,16$/;"	l
bf0	user/usertests.asm	/^     bf0:	7402                	ld	s0,32(sp)$/;"	l
bf2	user/grind.asm	/^     bf2:	e822                	sd	s0,16(sp)$/;"	l
bf2	user/sh.asm	/^     bf2:	8082                	ret$/;"	l
bf2	user/usertests.asm	/^     bf2:	64e2                	ld	s1,24(sp)$/;"	l
bf4	user/grind.asm	/^     bf4:	1000                	addi	s0,sp,32$/;"	l
bf4	user/sh.asm	/^     bf4:	4885                	li	a7,1$/;"	l
bf4	user/usertests.asm	/^     bf4:	6942                	ld	s2,16(sp)$/;"	l
bf6	user/grind.asm	/^     bf6:	feb407a3          	sb	a1,-17(s0)$/;"	l
bf6	user/sh.asm	/^     bf6:	00000073          	ecall$/;"	l
bf6	user/usertests.asm	/^     bf6:	69a2                	ld	s3,8(sp)$/;"	l
bf8	user/usertests.asm	/^     bf8:	6145                	addi	sp,sp,48$/;"	l
bfa	user/grind.asm	/^     bfa:	4605                	li	a2,1$/;"	l
bfa	user/sh.asm	/^     bfa:	8082                	ret$/;"	l
bfa	user/usertests.asm	/^     bfa:	8082                	ret$/;"	l
bfc	user/grind.asm	/^     bfc:	fef40593          	addi	a1,s0,-17$/;"	l
bfc	user/sh.asm	/^     bfc:	4889                	li	a7,2$/;"	l
bfc	user/usertests.asm	/^     bfc:	85ce                	mv	a1,s3$/;"	l
bfe	user/sh.asm	/^     bfe:	00000073          	ecall$/;"	l
bfe	user/usertests.asm	/^     bfe:	00005517          	auipc	a0,0x5$/;"	l
bfree	kernel/fs.c	/^bfree(int dev, uint b)$/;"	f	typeref:typename:void	file:
bget	kernel/bio.c	/^bget(uint dev, uint blockno)$/;"	f	typeref:struct:buf *	file:
bi	kernel/kernel.asm	/^  bi = b % BPB;$/;"	d
big	user/usertests.c	/^void *big = (void*) 0xeaeb0b5b00002f5e;$/;"	v	typeref:typename:void *
bigargtest	user/usertests.c	/^bigargtest(char *s)$/;"	f	typeref:typename:void
bigdir	user/usertests.c	/^bigdir(char *s)$/;"	f	typeref:typename:void
bigfile	user/usertests.c	/^bigfile(char *s)$/;"	f	typeref:typename:void
bigwrite	user/usertests.c	/^bigwrite(char *s)$/;"	f	typeref:typename:void
binit	kernel/bio.c	/^binit(void)$/;"	f	typeref:typename:void
block	kernel/log.c	/^  int block[LOGSIZE];$/;"	m	struct:logheader	typeref:typename:int[]	file:
blockno	kernel/buf.h	/^  uint blockno;$/;"	m	struct:buf	typeref:typename:uint
bmap	kernel/fs.c	/^bmap(struct inode *ip, uint bn)$/;"	f	typeref:typename:uint	file:
bmapstart	kernel/fs.h	/^  uint bmapstart;    \/\/ Block number of first free map block$/;"	m	struct:superblock	typeref:typename:uint
bp	kernel/kernel.asm	/^    bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(dev, IBLOCK(inum, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, addr);$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT]);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, 1);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, bno);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	user/cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/grind.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bpin	kernel/bio.c	/^bpin(struct buf *b) {$/;"	f	typeref:typename:void
bread	kernel/bio.c	/^bread(uint dev, uint blockno)$/;"	f	typeref:struct:buf *
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
brelse	kernel/bio.c	/^brelse(struct buf *b)$/;"	f	typeref:typename:void
bsstest	user/usertests.c	/^bsstest(char *s)$/;"	f	typeref:typename:void
buf	gradelib.py	/^            buf = bytearray()$/;"	v	class:shell_script.setup_call_on_line.context
buf	kernel/bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon6a7165400108	typeref:struct:buf[]	file:
buf	kernel/buf.h	/^struct buf {$/;"	s
buf	kernel/console.c	/^  char buf[INPUT_BUF_SIZE];$/;"	m	struct:__anonb6393d190108	typeref:typename:char[]	file:
buf	user/cat.c	/^char buf[512];$/;"	v	typeref:typename:char[512]
buf	user/grep.c	/^char buf[1024];$/;"	v	typeref:typename:char[1024]
buf	user/usertests.c	/^char buf[BUFSZ];$/;"	v	typeref:typename:char[]
buf	user/wc.c	/^char buf[512];$/;"	v	typeref:typename:char[512]
bunpin	kernel/bio.c	/^bunpin(struct buf *b) {$/;"	f	typeref:typename:void
bwrite	kernel/bio.c	/^bwrite(struct buf *b)$/;"	f	typeref:typename:void
bzero	kernel/fs.c	/^bzero(int dev, int bno)$/;"	f	typeref:typename:void	file:
c	kernel/kernel.asm	/^      c = (c == '\\r') ? '\\n' : c;$/;"	d
c	kernel/kernel.asm	/^    c = cons.buf[cons.r++ % INPUT_BUF_SIZE];$/;"	d
c	user/cat.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/echo.asm	/^   c:	e852                	sd	s4,16(sp)$/;"	l
c	user/forktest.asm	/^   c:	124000ef          	jal	130 <strlen>$/;"	l
c	user/grep.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	user/grind.asm	/^       c:	ffe74713          	xori	a4,a4,-2$/;"	l
c	user/init.asm	/^   c:	4589                	li	a1,2$/;"	l
c	user/initcode.asm	/^   c:	00058593          	mv	a1,a1$/;"	l
c	user/ls.asm	/^   c:	2b6000ef          	jal	2c2 <strlen>$/;"	l
c	user/sh.asm	/^       c:	84aa                	mv	s1,a0$/;"	l
c	user/stressfs.asm	/^   c:	20913c23          	sd	s1,536(sp)$/;"	l
c	user/usertests.asm	/^       c:	1080                	addi	s0,sp,96$/;"	l
c	user/usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	user/usertests.asm	/^  c = sbrk(-PGSIZE);$/;"	d
c	user/usertests.asm	/^  c = sbrk(0);$/;"	d
c	user/usertests.asm	/^  c = sbrk(1);$/;"	d
c	user/usertests.asm	/^  c = sbrk(PGSIZE);$/;"	d
c	user/wc.asm	/^   c:	e8d2                	sd	s4,80(sp)$/;"	l
c	user/zombie.asm	/^   c:	00a04563          	bgtz	a0,16 <main+0x16>$/;"	l
c0	kernel/kernel.asm	/^    c0 = fmt[i+0] & 0xff;$/;"	d
c0	user/cat.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/cat.asm	/^  c0:	ec26                	sd	s1,24(sp)$/;"	l
c0	user/echo.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/echo.asm	/^  c0:	00054783          	lbu	a5,0(a0)$/;"	l
c0	user/forktest.asm	/^  c0:	6105                	addi	sp,sp,32$/;"	l
c0	user/grep.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/grep.asm	/^  c0:	1101                	addi	sp,sp,-32$/;"	l
c0	user/grind.asm	/^      c0:	f0ca                	sd	s2,96(sp)$/;"	l
c0	user/grind.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/init.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/init.asm	/^  c0:	e022                	sd	s0,0(sp)$/;"	l
c0	user/kill.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/kill.asm	/^  c0:	0785                	addi	a5,a5,1$/;"	l
c0	user/ln.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/ln.asm	/^  c0:	ff65                	bnez	a4,b8 <strlen+0x10>$/;"	l
c0	user/ls.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/ls.asm	/^  c0:	46a000ef          	jal	52a <fstat>$/;"	l
c0	user/mkdir.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/mkdir.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	user/rm.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/rm.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	user/sh.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/stressfs.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/usertests.asm	/^      c0:	00005517          	auipc	a0,0x5$/;"	l
c0	user/usertests.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/wc.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/wc.asm	/^  c0:	7d02                	ld	s10,32(sp)$/;"	l
c0	user/zombie.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/zombie.asm	/^  c0:	0141                	addi	sp,sp,16$/;"	l
c00	user/grind.asm	/^     c00:	f6fff0ef          	jal	b6e <write>$/;"	l
c02	user/sh.asm	/^     c02:	8082                	ret$/;"	l
c02	user/usertests.asm	/^     c02:	99250513          	addi	a0,a0,-1646 # 5590 <malloc+0x644>$/;"	l
c04	user/grind.asm	/^     c04:	60e2                	ld	ra,24(sp)$/;"	l
c04	user/sh.asm	/^     c04:	488d                	li	a7,3$/;"	l
c06	user/grind.asm	/^     c06:	6442                	ld	s0,16(sp)$/;"	l
c06	user/sh.asm	/^     c06:	00000073          	ecall$/;"	l
c06	user/usertests.asm	/^     c06:	292040ef          	jal	4e98 <printf>$/;"	l
c08	user/grind.asm	/^     c08:	6105                	addi	sp,sp,32$/;"	l
c0a	user/grind.asm	/^     c0a:	8082                	ret$/;"	l
c0a	user/sh.asm	/^     c0a:	8082                	ret$/;"	l
c0a	user/usertests.asm	/^     c0a:	4505                	li	a0,1$/;"	l
c0c	user/grind.asm	/^     c0c:	7139                	addi	sp,sp,-64$/;"	l
c0c	user/sh.asm	/^     c0c:	4891                	li	a7,4$/;"	l
c0c	user/usertests.asm	/^     c0c:	675030ef          	jal	4a80 <exit>$/;"	l
c0e	user/grind.asm	/^     c0e:	fc06                	sd	ra,56(sp)$/;"	l
c0e	user/sh.asm	/^     c0e:	00000073          	ecall$/;"	l
c1	kernel/kernel.asm	/^    c1 = c2 = 0;$/;"	d
c1	user/cat.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/echo.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/grep.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/grind.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/init.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/kill.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/ln.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/ls.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/mkdir.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/rm.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/sh.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/stressfs.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/usertests.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/wc.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/zombie.asm	/^      c1 = c2 = 0;$/;"	d
c10	user/grind.asm	/^     c10:	f822                	sd	s0,48(sp)$/;"	l
c10	user/usertests.asm	/^     c10:	85ce                	mv	a1,s3$/;"	l
c12	user/grind.asm	/^     c12:	f426                	sd	s1,40(sp)$/;"	l
c12	user/sh.asm	/^     c12:	8082                	ret$/;"	l
c12	user/usertests.asm	/^     c12:	00005517          	auipc	a0,0x5$/;"	l
c14	user/grind.asm	/^     c14:	0080                	addi	s0,sp,64$/;"	l
c14	user/sh.asm	/^     c14:	4895                	li	a7,5$/;"	l
c16	user/grind.asm	/^     c16:	84aa                	mv	s1,a0$/;"	l
c16	user/sh.asm	/^     c16:	00000073          	ecall$/;"	l
c16	user/usertests.asm	/^     c16:	9a650513          	addi	a0,a0,-1626 # 55b8 <malloc+0x66c>$/;"	l
c18	user/grind.asm	/^     c18:	c299                	beqz	a3,c1e <printint+0x12>$/;"	l
c1a	user/grind.asm	/^     c1a:	0805c963          	bltz	a1,cac <printint+0xa0>$/;"	l
c1a	user/sh.asm	/^     c1a:	8082                	ret$/;"	l
c1a	user/usertests.asm	/^     c1a:	27e040ef          	jal	4e98 <printf>$/;"	l
c1c	user/sh.asm	/^     c1c:	48c1                	li	a7,16$/;"	l
c1e	user/grind.asm	/^     c1e:	2581                	sext.w	a1,a1$/;"	l
c1e	user/sh.asm	/^     c1e:	00000073          	ecall$/;"	l
c1e	user/usertests.asm	/^     c1e:	4505                	li	a0,1$/;"	l
c2	user/cat.asm	/^  c2:	e84a                	sd	s2,16(sp)$/;"	l
c2	user/forktest.asm	/^  c2:	8082                	ret$/;"	l
c2	user/grep.asm	/^  c2:	ec06                	sd	ra,24(sp)$/;"	l
c2	user/grind.asm	/^      c2:	ecce                	sd	s3,88(sp)$/;"	l
c2	user/init.asm	/^  c2:	0800                	addi	s0,sp,16$/;"	l
c2	user/kill.asm	/^  c2:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c2	user/ln.asm	/^  c2:	40a6853b          	subw	a0,a3,a0$/;"	l
c2	user/mkdir.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	user/rm.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	user/sh.asm	/^      c2:	00001517          	auipc	a0,0x1$/;"	l
c2	user/stressfs.asm	/^  c2:	34fd                	addiw	s1,s1,-1$/;"	l
c2	user/wc.asm	/^  c2:	6de2                	ld	s11,24(sp)$/;"	l
c2	user/zombie.asm	/^  c2:	8082                	ret$/;"	l
c20	user/grind.asm	/^     c20:	4881                	li	a7,0$/;"	l
c20	user/usertests.asm	/^     c20:	661030ef          	jal	4a80 <exit>$/;"	l
c22	user/grind.asm	/^     c22:	fc040693          	addi	a3,s0,-64$/;"	l
c22	user/sh.asm	/^     c22:	8082                	ret$/;"	l
c24	user/sh.asm	/^     c24:	48d5                	li	a7,21$/;"	l
c24	user/usertests.asm	/^     c24:	85ce                	mv	a1,s3$/;"	l
c26	user/grind.asm	/^     c26:	4701                	li	a4,0$/;"	l
c26	user/sh.asm	/^     c26:	00000073          	ecall$/;"	l
c26	user/usertests.asm	/^     c26:	00005517          	auipc	a0,0x5$/;"	l
c28	user/grind.asm	/^     c28:	2601                	sext.w	a2,a2$/;"	l
c2a	user/grind.asm	/^     c2a:	00001517          	auipc	a0,0x1$/;"	l
c2a	user/sh.asm	/^     c2a:	8082                	ret$/;"	l
c2a	user/usertests.asm	/^     c2a:	9b250513          	addi	a0,a0,-1614 # 55d8 <malloc+0x68c>$/;"	l
c2c	user/sh.asm	/^     c2c:	4899                	li	a7,6$/;"	l
c2e	user/grind.asm	/^     c2e:	86650513          	addi	a0,a0,-1946 # 1490 <digits>$/;"	l
c2e	user/sh.asm	/^     c2e:	00000073          	ecall$/;"	l
c2e	user/usertests.asm	/^     c2e:	26a040ef          	jal	4e98 <printf>$/;"	l
c32	user/grind.asm	/^     c32:	883a                	mv	a6,a4$/;"	l
c32	user/sh.asm	/^     c32:	8082                	ret$/;"	l
c32	user/usertests.asm	/^     c32:	4505                	li	a0,1$/;"	l
c34	user/grind.asm	/^     c34:	2705                	addiw	a4,a4,1$/;"	l
c34	user/sh.asm	/^     c34:	489d                	li	a7,7$/;"	l
c34	user/usertests.asm	/^     c34:	64d030ef          	jal	4a80 <exit>$/;"	l
c36	user/grind.asm	/^     c36:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
c36	user/sh.asm	/^     c36:	00000073          	ecall$/;"	l
c38	user/usertests.asm	/^     c38:	85ce                	mv	a1,s3$/;"	l
c3a	user/grind.asm	/^     c3a:	1782                	slli	a5,a5,0x20$/;"	l
c3a	user/sh.asm	/^     c3a:	8082                	ret$/;"	l
c3a	user/usertests.asm	/^     c3a:	00005517          	auipc	a0,0x5$/;"	l
c3c	user/grind.asm	/^     c3c:	9381                	srli	a5,a5,0x20$/;"	l
c3c	user/sh.asm	/^     c3c:	48bd                	li	a7,15$/;"	l
c3e	user/grind.asm	/^     c3e:	97aa                	add	a5,a5,a0$/;"	l
c3e	user/sh.asm	/^     c3e:	00000073          	ecall$/;"	l
c3e	user/usertests.asm	/^     c3e:	9c650513          	addi	a0,a0,-1594 # 5600 <malloc+0x6b4>$/;"	l
c4	user/cat.asm	/^  c4:	e44e                	sd	s3,8(sp)$/;"	l
c4	user/echo.asm	/^  c4:	fbe5                	bnez	a5,b4 <strcmp+0xc>$/;"	l
c4	user/forktest.asm	/^  c4:	1141                	addi	sp,sp,-16$/;"	l
c4	user/grep.asm	/^  c4:	e822                	sd	s0,16(sp)$/;"	l
c4	user/grind.asm	/^      c4:	e8d2                	sd	s4,80(sp)$/;"	l
c4	user/init.asm	/^  c4:	f3dff0ef          	jal	0 <main>$/;"	l
c4	user/ls.asm	/^  c4:	06054363          	bltz	a0,12a <ls+0x92>$/;"	l
c4	user/mkdir.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	user/rm.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	user/stressfs.asm	/^  c4:	f8e5                	bnez	s1,b4 <main+0xb4>$/;"	l
c4	user/usertests.asm	/^      c4:	fc850513          	addi	a0,a0,-56 # 5088 <malloc+0x13c>$/;"	l
c4	user/wc.asm	/^  c4:	6109                	addi	sp,sp,128$/;"	l
c4	user/zombie.asm	/^  c4:	1141                	addi	sp,sp,-16$/;"	l
c40	user/grind.asm	/^     c40:	0007c783          	lbu	a5,0(a5)$/;"	l
c42	user/sh.asm	/^     c42:	8082                	ret$/;"	l
c42	user/usertests.asm	/^     c42:	256040ef          	jal	4e98 <printf>$/;"	l
c44	user/grind.asm	/^     c44:	00f68023          	sb	a5,0(a3)$/;"	l
c44	user/sh.asm	/^     c44:	48c5                	li	a7,17$/;"	l
c46	user/sh.asm	/^     c46:	00000073          	ecall$/;"	l
c46	user/usertests.asm	/^     c46:	4505                	li	a0,1$/;"	l
c48	user/grind.asm	/^     c48:	0005879b          	sext.w	a5,a1$/;"	l
c48	user/usertests.asm	/^     c48:	639030ef          	jal	4a80 <exit>$/;"	l
c4a	user/sh.asm	/^     c4a:	8082                	ret$/;"	l
c4c	user/grind.asm	/^     c4c:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
c4c	user/sh.asm	/^     c4c:	48c9                	li	a7,18$/;"	l
c4c	user/usertests.asm	/^     c4c:	85ce                	mv	a1,s3$/;"	l
c4e	user/sh.asm	/^     c4e:	00000073          	ecall$/;"	l
c4e	user/usertests.asm	/^     c4e:	00005517          	auipc	a0,0x5$/;"	l
c50	user/grind.asm	/^     c50:	0685                	addi	a3,a3,1$/;"	l
c52	user/grind.asm	/^     c52:	fec7f0e3          	bgeu	a5,a2,c32 <printint+0x26>$/;"	l
c52	user/sh.asm	/^     c52:	8082                	ret$/;"	l
c52	user/usertests.asm	/^     c52:	9d250513          	addi	a0,a0,-1582 # 5620 <malloc+0x6d4>$/;"	l
c54	user/sh.asm	/^     c54:	48a1                	li	a7,8$/;"	l
c56	user/grind.asm	/^     c56:	00088c63          	beqz	a7,c6e <printint+0x62>$/;"	l
c56	user/sh.asm	/^     c56:	00000073          	ecall$/;"	l
c56	user/usertests.asm	/^     c56:	242040ef          	jal	4e98 <printf>$/;"	l
c5a	user/grind.asm	/^     c5a:	fd070793          	addi	a5,a4,-48$/;"	l
c5a	user/sh.asm	/^     c5a:	8082                	ret$/;"	l
c5a	user/usertests.asm	/^     c5a:	4505                	li	a0,1$/;"	l
c5c	user/sh.asm	/^     c5c:	48cd                	li	a7,19$/;"	l
c5c	user/usertests.asm	/^     c5c:	625030ef          	jal	4a80 <exit>$/;"	l
c5e	user/grind.asm	/^     c5e:	00878733          	add	a4,a5,s0$/;"	l
c5e	user/sh.asm	/^     c5e:	00000073          	ecall$/;"	l
c6	user/cat.asm	/^  c6:	4501                	li	a0,0$/;"	l
c6	user/echo.asm	/^  c6:	0005c503          	lbu	a0,0(a1)$/;"	l
c6	user/forktest.asm	/^  c6:	e406                	sd	ra,8(sp)$/;"	l
c6	user/grep.asm	/^  c6:	e426                	sd	s1,8(sp)$/;"	l
c6	user/grind.asm	/^      c6:	e0da                	sd	s6,64(sp)$/;"	l
c6	user/kill.asm	/^  c6:	ff65                	bnez	a4,be <strlen+0x10>$/;"	l
c6	user/ln.asm	/^  c6:	2505                	addiw	a0,a0,1$/;"	l
c6	user/mkdir.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	user/rm.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	user/sh.asm	/^      c6:	11e50513          	addi	a0,a0,286 # 11e0 <malloc+0x118>$/;"	l
c6	user/stressfs.asm	/^  c6:	854a                	mv	a0,s2$/;"	l
c6	user/wc.asm	/^  c6:	8082                	ret$/;"	l
c6	user/zombie.asm	/^  c6:	e422                	sd	s0,8(sp)$/;"	l
c60	user/usertests.asm	/^     c60:	85ce                	mv	a1,s3$/;"	l
c62	user/grind.asm	/^     c62:	02d00793          	li	a5,45$/;"	l
c62	user/sh.asm	/^     c62:	8082                	ret$/;"	l
c62	user/usertests.asm	/^     c62:	00005517          	auipc	a0,0x5$/;"	l
c64	user/sh.asm	/^     c64:	48d1                	li	a7,20$/;"	l
c66	user/grind.asm	/^     c66:	fef70823          	sb	a5,-16(a4)$/;"	l
c66	user/sh.asm	/^     c66:	00000073          	ecall$/;"	l
c66	user/usertests.asm	/^     c66:	9de50513          	addi	a0,a0,-1570 # 5640 <malloc+0x6f4>$/;"	l
c6a	user/grind.asm	/^     c6a:	0028071b          	addiw	a4,a6,2$/;"	l
c6a	user/sh.asm	/^     c6a:	8082                	ret$/;"	l
c6a	user/usertests.asm	/^     c6a:	22e040ef          	jal	4e98 <printf>$/;"	l
c6c	user/sh.asm	/^     c6c:	48a5                	li	a7,9$/;"	l
c6e	user/grind.asm	/^     c6e:	02e05a63          	blez	a4,ca2 <printint+0x96>$/;"	l
c6e	user/sh.asm	/^     c6e:	00000073          	ecall$/;"	l
c6e	user/usertests.asm	/^     c6e:	4505                	li	a0,1$/;"	l
c70	user/usertests.asm	/^     c70:	611030ef          	jal	4a80 <exit>$/;"	l
c72	user/grind.asm	/^     c72:	f04a                	sd	s2,32(sp)$/;"	l
c72	user/sh.asm	/^     c72:	8082                	ret$/;"	l
c74	user/grind.asm	/^     c74:	ec4e                	sd	s3,24(sp)$/;"	l
c74	user/sh.asm	/^     c74:	48a9                	li	a7,10$/;"	l
c74	user/usertests.asm	/^     c74:	1101                	addi	sp,sp,-32$/;"	l
c76	user/grind.asm	/^     c76:	fc040793          	addi	a5,s0,-64$/;"	l
c76	user/sh.asm	/^     c76:	00000073          	ecall$/;"	l
c76	user/usertests.asm	/^     c76:	ec06                	sd	ra,24(sp)$/;"	l
c78	user/usertests.asm	/^     c78:	e822                	sd	s0,16(sp)$/;"	l
c7a	user/grind.asm	/^     c7a:	00e78933          	add	s2,a5,a4$/;"	l
c7a	user/sh.asm	/^     c7a:	8082                	ret$/;"	l
c7a	user/usertests.asm	/^     c7a:	e426                	sd	s1,8(sp)$/;"	l
c7c	user/sh.asm	/^     c7c:	48ad                	li	a7,11$/;"	l
c7c	user/usertests.asm	/^     c7c:	e04a                	sd	s2,0(sp)$/;"	l
c7e	user/grind.asm	/^     c7e:	fff78993          	addi	s3,a5,-1$/;"	l
c7e	user/sh.asm	/^     c7e:	00000073          	ecall$/;"	l
c7e	user/usertests.asm	/^     c7e:	1000                	addi	s0,sp,32$/;"	l
c8	user/cat.asm	/^  c8:	f39ff0ef          	jal	0 <cat>$/;"	l
c8	user/forktest.asm	/^  c8:	e022                	sd	s0,0(sp)$/;"	l
c8	user/grep.asm	/^  c8:	e04a                	sd	s2,0(sp)$/;"	l
c8	user/grind.asm	/^      c8:	fc5e                	sd	s7,56(sp)$/;"	l
c8	user/init.asm	/^  c8:	4501                	li	a0,0$/;"	l
c8	user/kill.asm	/^  c8:	40a6853b          	subw	a0,a3,a0$/;"	l
c8	user/ln.asm	/^  c8:	6422                	ld	s0,8(sp)$/;"	l
c8	user/ls.asm	/^  c8:	da041783          	lh	a5,-608(s0)$/;"	l
c8	user/stressfs.asm	/^  c8:	2a2000ef          	jal	36a <close>$/;"	l
c8	user/usertests.asm	/^      c8:	1f9040ef          	jal	4ac0 <open>$/;"	l
c8	user/wc.asm	/^  c8:	00001517          	auipc	a0,0x1$/;"	l
c8	user/zombie.asm	/^  c8:	0800                	addi	s0,sp,16$/;"	l
c80	user/usertests.asm	/^     c80:	892a                	mv	s2,a0$/;"	l
c82	user/grind.asm	/^     c82:	99ba                	add	s3,s3,a4$/;"	l
c82	user/sh.asm	/^     c82:	8082                	ret$/;"	l
c82	user/usertests.asm	/^     c82:	00005517          	auipc	a0,0x5$/;"	l
c84	user/grind.asm	/^     c84:	377d                	addiw	a4,a4,-1$/;"	l
c84	user/sh.asm	/^     c84:	48b1                	li	a7,12$/;"	l
c86	user/grind.asm	/^     c86:	1702                	slli	a4,a4,0x20$/;"	l
c86	user/sh.asm	/^     c86:	00000073          	ecall$/;"	l
c86	user/usertests.asm	/^     c86:	9de50513          	addi	a0,a0,-1570 # 5660 <malloc+0x714>$/;"	l
c88	user/grind.asm	/^     c88:	9301                	srli	a4,a4,0x20$/;"	l
c8a	user/grind.asm	/^     c8a:	40e989b3          	sub	s3,s3,a4$/;"	l
c8a	user/sh.asm	/^     c8a:	8082                	ret$/;"	l
c8a	user/usertests.asm	/^     c8a:	647030ef          	jal	4ad0 <unlink>$/;"	l
c8c	user/sh.asm	/^     c8c:	48b5                	li	a7,13$/;"	l
c8e	user/grind.asm	/^     c8e:	fff94583          	lbu	a1,-1(s2)$/;"	l
c8e	user/sh.asm	/^     c8e:	00000073          	ecall$/;"	l
c8e	user/usertests.asm	/^     c8e:	00005517          	auipc	a0,0x5$/;"	l
c92	user/grind.asm	/^     c92:	8526                	mv	a0,s1$/;"	l
c92	user/sh.asm	/^     c92:	8082                	ret$/;"	l
c92	user/usertests.asm	/^     c92:	9da50513          	addi	a0,a0,-1574 # 5668 <malloc+0x71c>$/;"	l
c94	user/grind.asm	/^     c94:	f5bff0ef          	jal	bee <putc>$/;"	l
c94	user/sh.asm	/^     c94:	48b9                	li	a7,14$/;"	l
c96	user/sh.asm	/^     c96:	00000073          	ecall$/;"	l
c96	user/usertests.asm	/^     c96:	63b030ef          	jal	4ad0 <unlink>$/;"	l
c98	user/grind.asm	/^     c98:	197d                	addi	s2,s2,-1$/;"	l
c9a	user/grind.asm	/^     c9a:	ff391ae3          	bne	s2,s3,c8e <printint+0x82>$/;"	l
c9a	user/sh.asm	/^     c9a:	8082                	ret$/;"	l
c9a	user/usertests.asm	/^     c9a:	20200593          	li	a1,514$/;"	l
c9c	user/sh.asm	/^     c9c:	1101                	addi	sp,sp,-32$/;"	l
c9e	user/grind.asm	/^     c9e:	7902                	ld	s2,32(sp)$/;"	l
c9e	user/sh.asm	/^     c9e:	ec06                	sd	ra,24(sp)$/;"	l
c9e	user/usertests.asm	/^     c9e:	00005517          	auipc	a0,0x5$/;"	l
ca	user/echo.asm	/^  ca:	40a7853b          	subw	a0,a5,a0$/;"	l
ca	user/forktest.asm	/^  ca:	0800                	addi	s0,sp,16$/;"	l
ca	user/grep.asm	/^  ca:	1000                	addi	s0,sp,32$/;"	l
ca	user/grind.asm	/^      ca:	00001517          	auipc	a0,0x1$/;"	l
ca	user/init.asm	/^  ca:	25c000ef          	jal	326 <exit>$/;"	l
ca	user/ln.asm	/^  ca:	0141                	addi	sp,sp,16$/;"	l
ca	user/mkdir.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	user/rm.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	user/sh.asm	/^      ca:	f81ff0ef          	jal	4a <panic>$/;"	l
ca	user/zombie.asm	/^  ca:	00054783          	lbu	a5,0(a0)$/;"	l
ca0	user/grind.asm	/^     ca0:	69e2                	ld	s3,24(sp)$/;"	l
ca0	user/sh.asm	/^     ca0:	e822                	sd	s0,16(sp)$/;"	l
ca2	user/grind.asm	/^     ca2:	70e2                	ld	ra,56(sp)$/;"	l
ca2	user/sh.asm	/^     ca2:	1000                	addi	s0,sp,32$/;"	l
ca2	user/usertests.asm	/^     ca2:	9c250513          	addi	a0,a0,-1598 # 5660 <malloc+0x714>$/;"	l
ca4	user/grind.asm	/^     ca4:	7442                	ld	s0,48(sp)$/;"	l
ca4	user/sh.asm	/^     ca4:	feb407a3          	sb	a1,-17(s0)$/;"	l
ca6	user/grind.asm	/^     ca6:	74a2                	ld	s1,40(sp)$/;"	l
ca6	user/usertests.asm	/^     ca6:	61b030ef          	jal	4ac0 <open>$/;"	l
ca8	user/grind.asm	/^     ca8:	6121                	addi	sp,sp,64$/;"	l
ca8	user/sh.asm	/^     ca8:	4605                	li	a2,1$/;"	l
caa	user/grind.asm	/^     caa:	8082                	ret$/;"	l
caa	user/sh.asm	/^     caa:	fef40593          	addi	a1,s0,-17$/;"	l
caa	user/usertests.asm	/^     caa:	0c054f63          	bltz	a0,d88 <linktest+0x114>$/;"	l
cac	user/grind.asm	/^     cac:	40b005bb          	negw	a1,a1$/;"	l
cae	user/sh.asm	/^     cae:	f6fff0ef          	jal	c1c <write>$/;"	l
cae	user/usertests.asm	/^     cae:	84aa                	mv	s1,a0$/;"	l
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int fd)$/;"	f	typeref:typename:void
cb0	user/grind.asm	/^     cb0:	4885                	li	a7,1$/;"	l
cb0	user/usertests.asm	/^     cb0:	4615                	li	a2,5$/;"	l
cb2	user/grind.asm	/^     cb2:	bf85                	j	c22 <printint+0x16>$/;"	l
cb2	user/sh.asm	/^     cb2:	60e2                	ld	ra,24(sp)$/;"	l
cb2	user/usertests.asm	/^     cb2:	00005597          	auipc	a1,0x5$/;"	l
cb4	user/grind.asm	/^     cb4:	711d                	addi	sp,sp,-96$/;"	l
cb4	user/sh.asm	/^     cb4:	6442                	ld	s0,16(sp)$/;"	l
cb6	user/grind.asm	/^     cb6:	ec86                	sd	ra,88(sp)$/;"	l
cb6	user/sh.asm	/^     cb6:	6105                	addi	sp,sp,32$/;"	l
cb6	user/usertests.asm	/^     cb6:	8fe58593          	addi	a1,a1,-1794 # 55b0 <malloc+0x664>$/;"	l
cb8	user/grind.asm	/^     cb8:	e8a2                	sd	s0,80(sp)$/;"	l
cb8	user/sh.asm	/^     cb8:	8082                	ret$/;"	l
cba	user/grind.asm	/^     cba:	e0ca                	sd	s2,64(sp)$/;"	l
cba	user/sh.asm	/^     cba:	7139                	addi	sp,sp,-64$/;"	l
cba	user/usertests.asm	/^     cba:	5e7030ef          	jal	4aa0 <write>$/;"	l
cbc	user/grind.asm	/^     cbc:	1080                	addi	s0,sp,96$/;"	l
cbc	user/sh.asm	/^     cbc:	fc06                	sd	ra,56(sp)$/;"	l
cbe	user/grind.asm	/^     cbe:	0005c903          	lbu	s2,0(a1)$/;"	l
cbe	user/sh.asm	/^     cbe:	f822                	sd	s0,48(sp)$/;"	l
cbe	user/usertests.asm	/^     cbe:	4795                	li	a5,5$/;"	l
cbuf	kernel/kernel.asm	/^    cbuf = c;$/;"	d
cc	user/cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/cat.asm	/^  cc:	4501                	li	a0,0$/;"	l
cc	user/echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/forktest.asm	/^  cc:	f5bff0ef          	jal	26 <forktest>$/;"	l
cc	user/grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/grep.asm	/^  cc:	892a                	mv	s2,a0$/;"	l
cc	user/grind.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/kill.asm	/^  cc:	2505                	addiw	a0,a0,1$/;"	l
cc	user/ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/ln.asm	/^  cc:	8082                	ret$/;"	l
cc	user/ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/ls.asm	/^  cc:	4705                	li	a4,1$/;"	l
cc	user/mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/mkdir.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	user/rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/rm.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	user/sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/stressfs.asm	/^  cc:	4501                	li	a0,0$/;"	l
cc	user/usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	user/usertests.asm	/^      cc = cc * 2;$/;"	d
cc	user/usertests.asm	/^      cc:	02054263          	bltz	a0,f0 <opentest+0x3e>$/;"	l
cc	user/usertests.asm	/^    cc = 1;$/;"	d
cc	user/usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/usertests.asm	/^    cc = read(fd, buf, SZ\/2);$/;"	d
cc	user/usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	user/wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/wc.asm	/^  cc:	8d850513          	addi	a0,a0,-1832 # 9a0 <malloc+0x10e>$/;"	l
cc	user/zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc0	user/sh.asm	/^     cc0:	f426                	sd	s1,40(sp)$/;"	l
cc0	user/usertests.asm	/^     cc0:	0cf51e63          	bne	a0,a5,d9c <linktest+0x128>$/;"	l
cc2	user/grind.asm	/^     cc2:	26090863          	beqz	s2,f32 <vprintf+0x27e>$/;"	l
cc2	user/sh.asm	/^     cc2:	0080                	addi	s0,sp,64$/;"	l
cc4	user/sh.asm	/^     cc4:	84aa                	mv	s1,a0$/;"	l
cc4	user/usertests.asm	/^     cc4:	8526                	mv	a0,s1$/;"	l
cc6	user/grind.asm	/^     cc6:	e4a6                	sd	s1,72(sp)$/;"	l
cc6	user/sh.asm	/^     cc6:	c299                	beqz	a3,ccc <printint+0x12>$/;"	l
cc6	user/usertests.asm	/^     cc6:	5e3030ef          	jal	4aa8 <close>$/;"	l
cc8	user/grind.asm	/^     cc8:	fc4e                	sd	s3,56(sp)$/;"	l
cc8	user/sh.asm	/^     cc8:	0805c963          	bltz	a1,d5a <printint+0xa0>$/;"	l
cca	user/grind.asm	/^     cca:	f852                	sd	s4,48(sp)$/;"	l
cca	user/usertests.asm	/^     cca:	00005597          	auipc	a1,0x5$/;"	l
ccc	user/grind.asm	/^     ccc:	f456                	sd	s5,40(sp)$/;"	l
ccc	user/sh.asm	/^     ccc:	2581                	sext.w	a1,a1$/;"	l
cce	user/grind.asm	/^     cce:	f05a                	sd	s6,32(sp)$/;"	l
cce	user/sh.asm	/^     cce:	4881                	li	a7,0$/;"	l
cce	user/usertests.asm	/^     cce:	99e58593          	addi	a1,a1,-1634 # 5668 <malloc+0x71c>$/;"	l
cd0	user/grind.asm	/^     cd0:	ec5e                	sd	s7,24(sp)$/;"	l
cd0	user/sh.asm	/^     cd0:	fc040693          	addi	a3,s0,-64$/;"	l
cd2	user/grind.asm	/^     cd2:	e862                	sd	s8,16(sp)$/;"	l
cd2	user/usertests.asm	/^     cd2:	00005517          	auipc	a0,0x5$/;"	l
cd4	user/grind.asm	/^     cd4:	e466                	sd	s9,8(sp)$/;"	l
cd4	user/sh.asm	/^     cd4:	4701                	li	a4,0$/;"	l
cd6	user/grind.asm	/^     cd6:	8b2a                	mv	s6,a0$/;"	l
cd6	user/sh.asm	/^     cd6:	2601                	sext.w	a2,a2$/;"	l
cd6	user/usertests.asm	/^     cd6:	98e50513          	addi	a0,a0,-1650 # 5660 <malloc+0x714>$/;"	l
cd8	user/grind.asm	/^     cd8:	8a2e                	mv	s4,a1$/;"	l
cd8	user/sh.asm	/^     cd8:	00000517          	auipc	a0,0x0$/;"	l
cda	user/grind.asm	/^     cda:	8bb2                	mv	s7,a2$/;"	l
cda	user/usertests.asm	/^     cda:	607030ef          	jal	4ae0 <link>$/;"	l
cdc	user/grind.asm	/^     cdc:	4981                	li	s3,0$/;"	l
cdc	user/sh.asm	/^     cdc:	63050513          	addi	a0,a0,1584 # 1308 <digits>$/;"	l
cde	user/grind.asm	/^     cde:	4481                	li	s1,0$/;"	l
cde	user/usertests.asm	/^     cde:	0c054963          	bltz	a0,db0 <linktest+0x13c>$/;"	l
ce	user/cat.asm	/^  ce:	286000ef          	jal	354 <exit>$/;"	l
ce	user/echo.asm	/^  ce:	6422                	ld	s0,8(sp)$/;"	l
ce	user/grep.asm	/^  ce:	84ae                	mv	s1,a1$/;"	l
ce	user/grind.asm	/^      ce:	08650513          	addi	a0,a0,134 # 1150 <malloc+0x136>$/;"	l
ce	user/init.asm	/^  ce:	1141                	addi	sp,sp,-16$/;"	l
ce	user/kill.asm	/^  ce:	6422                	ld	s0,8(sp)$/;"	l
ce	user/ln.asm	/^  ce:	4501                	li	a0,0$/;"	l
ce	user/ls.asm	/^  ce:	06e78c63          	beq	a5,a4,146 <ls+0xae>$/;"	l
ce	user/mkdir.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	user/rm.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	user/sh.asm	/^      ce:	6508                	ld	a0,8(a0)$/;"	l
ce	user/stressfs.asm	/^  ce:	27c000ef          	jal	34a <wait>$/;"	l
ce	user/zombie.asm	/^  ce:	cb99                	beqz	a5,e4 <strchr+0x20>$/;"	l
ce0	user/grind.asm	/^     ce0:	4701                	li	a4,0$/;"	l
ce0	user/sh.asm	/^     ce0:	883a                	mv	a6,a4$/;"	l
ce2	user/grind.asm	/^     ce2:	02500a93          	li	s5,37$/;"	l
ce2	user/sh.asm	/^     ce2:	2705                	addiw	a4,a4,1$/;"	l
ce2	user/usertests.asm	/^     ce2:	00005517          	auipc	a0,0x5$/;"	l
ce4	user/sh.asm	/^     ce4:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
ce6	user/grind.asm	/^     ce6:	06400c13          	li	s8,100$/;"	l
ce6	user/usertests.asm	/^     ce6:	97e50513          	addi	a0,a0,-1666 # 5660 <malloc+0x714>$/;"	l
ce8	user/sh.asm	/^     ce8:	1782                	slli	a5,a5,0x20$/;"	l
cea	user/grind.asm	/^     cea:	06c00c93          	li	s9,108$/;"	l
cea	user/sh.asm	/^     cea:	9381                	srli	a5,a5,0x20$/;"	l
cea	user/usertests.asm	/^     cea:	5e7030ef          	jal	4ad0 <unlink>$/;"	l
cec	user/sh.asm	/^     cec:	97aa                	add	a5,a5,a0$/;"	l
cee	user/grind.asm	/^     cee:	a005                	j	d0e <vprintf+0x5a>$/;"	l
cee	user/sh.asm	/^     cee:	0007c783          	lbu	a5,0(a5)$/;"	l
cee	user/usertests.asm	/^     cee:	4581                	li	a1,0$/;"	l
cf0	user/grind.asm	/^     cf0:	85ca                	mv	a1,s2$/;"	l
cf0	user/usertests.asm	/^     cf0:	00005517          	auipc	a0,0x5$/;"	l
cf2	user/grind.asm	/^     cf2:	855a                	mv	a0,s6$/;"	l
cf2	user/sh.asm	/^     cf2:	00f68023          	sb	a5,0(a3)$/;"	l
cf4	user/grind.asm	/^     cf4:	efbff0ef          	jal	bee <putc>$/;"	l
cf4	user/usertests.asm	/^     cf4:	97050513          	addi	a0,a0,-1680 # 5660 <malloc+0x714>$/;"	l
cf6	user/sh.asm	/^     cf6:	0005879b          	sext.w	a5,a1$/;"	l
cf8	user/grind.asm	/^     cf8:	a019                	j	cfe <vprintf+0x4a>$/;"	l
cf8	user/usertests.asm	/^     cf8:	5c9030ef          	jal	4ac0 <open>$/;"	l
cfa	user/grind.asm	/^     cfa:	03598263          	beq	s3,s5,d1e <vprintf+0x6a>$/;"	l
cfa	user/sh.asm	/^     cfa:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
cfc	user/usertests.asm	/^     cfc:	0c055463          	bgez	a0,dc4 <linktest+0x150>$/;"	l
cfe	user/grind.asm	/^     cfe:	2485                	addiw	s1,s1,1$/;"	l
cfe	user/sh.asm	/^     cfe:	0685                	addi	a3,a3,1$/;"	l
ch	kernel/kernel.asm	/^    ch = pi->data[pi->nread++ % PIPESIZE];$/;"	d
chan	kernel/proc.h	/^  void *chan;                  \/\/ If non-zero, sleeping on chan$/;"	m	struct:proc	typeref:typename:void *
char	user/cat.asm	/^char buf[512];$/;"	l
char	user/init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	user/sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	user/sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	user/wc.asm	/^char buf[512];$/;"	l
chdir	user/cat.asm	/^chdir:$/;"	l
chdir	user/echo.asm	/^chdir:$/;"	l
chdir	user/forktest.asm	/^chdir:$/;"	l
chdir	user/grep.asm	/^chdir:$/;"	l
chdir	user/grind.asm	/^chdir:$/;"	l
chdir	user/init.asm	/^chdir:$/;"	l
chdir	user/kill.asm	/^chdir:$/;"	l
chdir	user/ln.asm	/^chdir:$/;"	l
chdir	user/ls.asm	/^chdir:$/;"	l
chdir	user/mkdir.asm	/^chdir:$/;"	l
chdir	user/rm.asm	/^chdir:$/;"	l
chdir	user/sh.asm	/^chdir:$/;"	l
chdir	user/stressfs.asm	/^chdir:$/;"	l
chdir	user/usertests.asm	/^chdir:$/;"	l
chdir	user/usys.S	/^chdir:$/;"	l
chdir	user/wc.asm	/^chdir:$/;"	l
chdir	user/zombie.asm	/^chdir:$/;"	l
check_answers	gradelib.py	/^def check_answers(file, n=10):$/;"	f
check_time	gradelib.py	/^def check_time():$/;"	f
clean	Makefile	/^clean:$/;"	t
clockintr	kernel/trap.c	/^clockintr()$/;"	f	typeref:typename:void
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	user/cat.asm	/^close:$/;"	l
close	user/echo.asm	/^close:$/;"	l
close	user/forktest.asm	/^close:$/;"	l
close	user/grep.asm	/^close:$/;"	l
close	user/grind.asm	/^close:$/;"	l
close	user/init.asm	/^close:$/;"	l
close	user/kill.asm	/^close:$/;"	l
close	user/ln.asm	/^close:$/;"	l
close	user/ls.asm	/^close:$/;"	l
close	user/mkdir.asm	/^close:$/;"	l
close	user/rm.asm	/^close:$/;"	l
close	user/sh.asm	/^close:$/;"	l
close	user/stressfs.asm	/^close:$/;"	l
close	user/usertests.asm	/^close:$/;"	l
close	user/usys.S	/^close:$/;"	l
close	user/wc.asm	/^close:$/;"	l
close	user/zombie.asm	/^close:$/;"	l
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE|O_TRUNC, 1);$/;"	d
cmd	user/sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	user/sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	user/sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	user/sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	user/sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	user/sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:cmd *	file:
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:cmd *	file:
cmd	user/sh.c	/^struct cmd {$/;"	s	file:
color	gradelib.py	/^def color(name, text):$/;"	f
commit	kernel/log.c	/^commit()$/;"	f	typeref:typename:void	file:
committing	kernel/log.c	/^  int committing;  \/\/ in commit(), please wait.$/;"	m	struct:log	typeref:typename:int	file:
concreate	user/usertests.c	/^concreate(char *s)$/;"	f	typeref:typename:void
cons	kernel/console.c	/^} cons;$/;"	v	typeref:struct:__anonb6393d190108
consoleinit	kernel/console.c	/^consoleinit(void)$/;"	f	typeref:typename:void
consoleintr	kernel/console.c	/^consoleintr(int c)$/;"	f	typeref:typename:void
consoleread	kernel/console.c	/^consoleread(int user_dst, uint64 dst, int n)$/;"	f	typeref:typename:int
consolewrite	kernel/console.c	/^consolewrite(int user_src, uint64 src, int n)$/;"	f	typeref:typename:int
consputc	kernel/console.c	/^consputc(int c)$/;"	f	typeref:typename:void
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
context	gradelib.py	/^        class context:$/;"	c	function:shell_script.setup_call_on_line	file:
context	kernel/proc.h	/^  struct context context;      \/\/ swtch() here to run process$/;"	m	struct:proc	typeref:struct:context
context	kernel/proc.h	/^  struct context context;     \/\/ swtch() here to enter scheduler().$/;"	m	struct:cpu	typeref:struct:context
context	kernel/proc.h	/^struct context {$/;"	s
continuous	user/usertests.asm	/^    continuous = 1;$/;"	d
continuous	user/usertests.asm	/^    continuous = 2;$/;"	d
copyin	kernel/vm.c	/^copyin(pagetable_t pagetable, char *dst, uint64 srcva, uint64 len)$/;"	f	typeref:typename:int
copyin	user/usertests.c	/^copyin(char *s)$/;"	f	typeref:typename:void
copyinstr	kernel/vm.c	/^copyinstr(pagetable_t pagetable, char *dst, uint64 srcva, uint64 max)$/;"	f	typeref:typename:int
copyinstr1	user/usertests.c	/^copyinstr1(char *s)$/;"	f	typeref:typename:void
copyinstr2	user/usertests.c	/^copyinstr2(char *s)$/;"	f	typeref:typename:void
copyinstr3	user/usertests.c	/^copyinstr3(char *s)$/;"	f	typeref:typename:void
copyout	kernel/vm.c	/^copyout(pagetable_t pagetable, uint64 dstva, char *src, uint64 len)$/;"	f	typeref:typename:int
copyout	user/usertests.c	/^copyout(char *s)$/;"	f	typeref:typename:void
countfree	user/usertests.c	/^countfree()$/;"	f	typeref:typename:int
cpu	kernel/proc.h	/^struct cpu {$/;"	s
cpu	kernel/spinlock.h	/^  struct cpu *cpu;   \/\/ The cpu holding the lock.$/;"	m	struct:spinlock	typeref:struct:cpu *
cpuid	kernel/proc.c	/^cpuid()$/;"	f	typeref:typename:int
cpus	kernel/proc.c	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu[]
create	kernel/sysfile.c	/^create(char *path, short type, short major, short minor)$/;"	f	typeref:struct:inode *	file:
createdelete	user/usertests.c	/^createdelete(char *s)$/;"	f	typeref:typename:void
createtest	user/usertests.c	/^createtest(char *s)$/;"	f	typeref:typename:void
cwd	kernel/proc.h	/^  struct inode *cwd;           \/\/ Current directory$/;"	m	struct:proc	typeref:struct:inode *
d	kernel/kernel.asm	/^  d = dst;$/;"	d
d0	user/echo.asm	/^  d0:	0141                	addi	sp,sp,16$/;"	l
d0	user/forktest.asm	/^  d0:	4501                	li	a0,0$/;"	l
d0	user/grep.asm	/^  d0:	00054703          	lbu	a4,0(a0)$/;"	l
d0	user/init.asm	/^  d0:	e422                	sd	s0,8(sp)$/;"	l
d0	user/kill.asm	/^  d0:	0141                	addi	sp,sp,16$/;"	l
d0	user/ln.asm	/^  d0:	bfe5                	j	c8 <strlen+0x20>$/;"	l
d0	user/mkdir.asm	/^  d0:	86be                	mv	a3,a5$/;"	l
d0	user/rm.asm	/^  d0:	86be                	mv	a3,a5$/;"	l
d0	user/sh.asm	/^      d0:	c105                	beqz	a0,f0 <runcmd+0x62>$/;"	l
d0	user/usertests.asm	/^      d0:	1d9040ef          	jal	4aa8 <close>$/;"	l
d0	user/wc.asm	/^  d0:	70e000ef          	jal	7de <printf>$/;"	l
d0	user/zombie.asm	/^  d0:	00f58763          	beq	a1,a5,de <strchr+0x1a>$/;"	l
d00	user/grind.asm	/^     d00:	8726                	mv	a4,s1$/;"	l
d00	user/sh.asm	/^     d00:	fec7f0e3          	bgeu	a5,a2,ce0 <printint+0x26>$/;"	l
d00	user/usertests.asm	/^     d00:	4581                	li	a1,0$/;"	l
d02	user/grind.asm	/^     d02:	009a07b3          	add	a5,s4,s1$/;"	l
d02	user/usertests.asm	/^     d02:	00005517          	auipc	a0,0x5$/;"	l
d04	user/sh.asm	/^     d04:	00088c63          	beqz	a7,d1c <printint+0x62>$/;"	l
d06	user/grind.asm	/^     d06:	0007c903          	lbu	s2,0(a5)$/;"	l
d06	user/usertests.asm	/^     d06:	96650513          	addi	a0,a0,-1690 # 5668 <malloc+0x71c>$/;"	l
d08	user/sh.asm	/^     d08:	fd070793          	addi	a5,a4,-48$/;"	l
d0a	user/grind.asm	/^     d0a:	20090c63          	beqz	s2,f22 <vprintf+0x26e>$/;"	l
d0a	user/usertests.asm	/^     d0a:	5b7030ef          	jal	4ac0 <open>$/;"	l
d0c	user/sh.asm	/^     d0c:	00878733          	add	a4,a5,s0$/;"	l
d0e	user/grind.asm	/^     d0e:	0009079b          	sext.w	a5,s2$/;"	l
d0e	user/usertests.asm	/^     d0e:	84aa                	mv	s1,a0$/;"	l
d10	user/sh.asm	/^     d10:	02d00793          	li	a5,45$/;"	l
d10	user/usertests.asm	/^     d10:	0c054463          	bltz	a0,dd8 <linktest+0x164>$/;"	l
d12	user/grind.asm	/^     d12:	fe0994e3          	bnez	s3,cfa <vprintf+0x46>$/;"	l
d14	user/sh.asm	/^     d14:	fef70823          	sb	a5,-16(a4)$/;"	l
d14	user/usertests.asm	/^     d14:	660d                	lui	a2,0x3$/;"	l
d16	user/grind.asm	/^     d16:	fd579de3          	bne	a5,s5,cf0 <vprintf+0x3c>$/;"	l
d16	user/usertests.asm	/^     d16:	0000c597          	auipc	a1,0xc$/;"	l
d18	user/sh.asm	/^     d18:	0028071b          	addiw	a4,a6,2$/;"	l
d1a	user/grind.asm	/^     d1a:	89be                	mv	s3,a5$/;"	l
d1a	user/usertests.asm	/^     d1a:	f6258593          	addi	a1,a1,-158 # cc78 <buf>$/;"	l
d1c	user/grind.asm	/^     d1c:	b7cd                	j	cfe <vprintf+0x4a>$/;"	l
d1c	user/sh.asm	/^     d1c:	02e05a63          	blez	a4,d50 <printint+0x96>$/;"	l
d1e	user/grind.asm	/^     d1e:	00ea06b3          	add	a3,s4,a4$/;"	l
d1e	user/usertests.asm	/^     d1e:	57b030ef          	jal	4a98 <read>$/;"	l
d2	user/cat.asm	/^  d2:	00093603          	ld	a2,0(s2)$/;"	l
d2	user/echo.asm	/^  d2:	8082                	ret$/;"	l
d2	user/forktest.asm	/^  d2:	26e000ef          	jal	340 <exit>$/;"	l
d2	user/grind.asm	/^      d2:	2ed000ef          	jal	bbe <chdir>$/;"	l
d2	user/init.asm	/^  d2:	0800                	addi	s0,sp,16$/;"	l
d2	user/kill.asm	/^  d2:	8082                	ret$/;"	l
d2	user/ln.asm	/^  d2:	1141                	addi	sp,sp,-16$/;"	l
d2	user/ls.asm	/^  d2:	37f9                	addiw	a5,a5,-2$/;"	l
d2	user/mkdir.asm	/^  d2:	0785                	addi	a5,a5,1$/;"	l
d2	user/rm.asm	/^  d2:	0785                	addi	a5,a5,1$/;"	l
d2	user/sh.asm	/^      d2:	00848593          	addi	a1,s1,8$/;"	l
d2	user/stressfs.asm	/^  d2:	4501                	li	a0,0$/;"	l
d20	user/sh.asm	/^     d20:	f04a                	sd	s2,32(sp)$/;"	l
d22	user/grind.asm	/^     d22:	0016c683          	lbu	a3,1(a3)$/;"	l
d22	user/sh.asm	/^     d22:	ec4e                	sd	s3,24(sp)$/;"	l
d22	user/usertests.asm	/^     d22:	4795                	li	a5,5$/;"	l
d24	user/sh.asm	/^     d24:	fc040793          	addi	a5,s0,-64$/;"	l
d24	user/usertests.asm	/^     d24:	0cf51463          	bne	a0,a5,dec <linktest+0x178>$/;"	l
d26	user/grind.asm	/^     d26:	8636                	mv	a2,a3$/;"	l
d28	user/grind.asm	/^     d28:	c681                	beqz	a3,d30 <vprintf+0x7c>$/;"	l
d28	user/sh.asm	/^     d28:	00e78933          	add	s2,a5,a4$/;"	l
d28	user/usertests.asm	/^     d28:	8526                	mv	a0,s1$/;"	l
d2a	user/grind.asm	/^     d2a:	9752                	add	a4,a4,s4$/;"	l
d2a	user/usertests.asm	/^     d2a:	57f030ef          	jal	4aa8 <close>$/;"	l
d2c	user/grind.asm	/^     d2c:	00274603          	lbu	a2,2(a4)$/;"	l
d2c	user/sh.asm	/^     d2c:	fff78993          	addi	s3,a5,-1$/;"	l
d2e	user/usertests.asm	/^     d2e:	00005597          	auipc	a1,0x5$/;"	l
d30	user/grind.asm	/^     d30:	03878f63          	beq	a5,s8,d6e <vprintf+0xba>$/;"	l
d30	user/sh.asm	/^     d30:	99ba                	add	s3,s3,a4$/;"	l
d32	user/sh.asm	/^     d32:	377d                	addiw	a4,a4,-1$/;"	l
d32	user/usertests.asm	/^     d32:	93a58593          	addi	a1,a1,-1734 # 5668 <malloc+0x71c>$/;"	l
d34	user/grind.asm	/^     d34:	05978963          	beq	a5,s9,d86 <vprintf+0xd2>$/;"	l
d34	user/sh.asm	/^     d34:	1702                	slli	a4,a4,0x20$/;"	l
d36	user/sh.asm	/^     d36:	9301                	srli	a4,a4,0x20$/;"	l
d36	user/usertests.asm	/^     d36:	852e                	mv	a0,a1$/;"	l
d38	user/grind.asm	/^     d38:	07500713          	li	a4,117$/;"	l
d38	user/sh.asm	/^     d38:	40e989b3          	sub	s3,s3,a4$/;"	l
d38	user/usertests.asm	/^     d38:	5a9030ef          	jal	4ae0 <link>$/;"	l
d3c	user/grind.asm	/^     d3c:	0ee78363          	beq	a5,a4,e22 <vprintf+0x16e>$/;"	l
d3c	user/sh.asm	/^     d3c:	fff94583          	lbu	a1,-1(s2)$/;"	l
d3c	user/usertests.asm	/^     d3c:	0c055263          	bgez	a0,e00 <linktest+0x18c>$/;"	l
d4	user/echo.asm	/^  d4:	1141                	addi	sp,sp,-16$/;"	l
d4	user/grep.asm	/^  d4:	05e00793          	li	a5,94$/;"	l
d4	user/init.asm	/^  d4:	87aa                	mv	a5,a0$/;"	l
d4	user/kill.asm	/^  d4:	4501                	li	a0,0$/;"	l
d4	user/ln.asm	/^  d4:	e422                	sd	s0,8(sp)$/;"	l
d4	user/ls.asm	/^  d4:	17c2                	slli	a5,a5,0x30$/;"	l
d4	user/mkdir.asm	/^  d4:	fff7c703          	lbu	a4,-1(a5)$/;"	l
d4	user/rm.asm	/^  d4:	fff7c703          	lbu	a4,-1(a5)$/;"	l
d4	user/stressfs.asm	/^  d4:	26e000ef          	jal	342 <exit>$/;"	l
d4	user/usertests.asm	/^      d4:	4581                	li	a1,0$/;"	l
d4	user/wc.asm	/^  d4:	4505                	li	a0,1$/;"	l
d4	user/zombie.asm	/^  d4:	0505                	addi	a0,a0,1$/;"	l
d40	user/grind.asm	/^     d40:	07800713          	li	a4,120$/;"	l
d40	user/sh.asm	/^     d40:	8526                	mv	a0,s1$/;"	l
d40	user/usertests.asm	/^     d40:	00005517          	auipc	a0,0x5$/;"	l
d42	user/sh.asm	/^     d42:	f5bff0ef          	jal	c9c <putc>$/;"	l
d44	user/grind.asm	/^     d44:	12e78563          	beq	a5,a4,e6e <vprintf+0x1ba>$/;"	l
d44	user/usertests.asm	/^     d44:	92850513          	addi	a0,a0,-1752 # 5668 <malloc+0x71c>$/;"	l
d46	user/sh.asm	/^     d46:	197d                	addi	s2,s2,-1$/;"	l
d48	user/grind.asm	/^     d48:	07000713          	li	a4,112$/;"	l
d48	user/sh.asm	/^     d48:	ff391ae3          	bne	s2,s3,d3c <printint+0x82>$/;"	l
d48	user/usertests.asm	/^     d48:	589030ef          	jal	4ad0 <unlink>$/;"	l
d4c	user/grind.asm	/^     d4c:	14e78a63          	beq	a5,a4,ea0 <vprintf+0x1ec>$/;"	l
d4c	user/sh.asm	/^     d4c:	7902                	ld	s2,32(sp)$/;"	l
d4c	user/usertests.asm	/^     d4c:	00005597          	auipc	a1,0x5$/;"	l
d4e	user/sh.asm	/^     d4e:	69e2                	ld	s3,24(sp)$/;"	l
d50	user/grind.asm	/^     d50:	07300713          	li	a4,115$/;"	l
d50	user/sh.asm	/^     d50:	70e2                	ld	ra,56(sp)$/;"	l
d50	user/usertests.asm	/^     d50:	91458593          	addi	a1,a1,-1772 # 5660 <malloc+0x714>$/;"	l
d52	user/sh.asm	/^     d52:	7442                	ld	s0,48(sp)$/;"	l
d54	user/grind.asm	/^     d54:	18e78a63          	beq	a5,a4,ee8 <vprintf+0x234>$/;"	l
d54	user/sh.asm	/^     d54:	74a2                	ld	s1,40(sp)$/;"	l
d54	user/usertests.asm	/^     d54:	00005517          	auipc	a0,0x5$/;"	l
d56	user/sh.asm	/^     d56:	6121                	addi	sp,sp,64$/;"	l
d58	user/grind.asm	/^     d58:	02500713          	li	a4,37$/;"	l
d58	user/sh.asm	/^     d58:	8082                	ret$/;"	l
d58	user/usertests.asm	/^     d58:	91450513          	addi	a0,a0,-1772 # 5668 <malloc+0x71c>$/;"	l
d5a	user/sh.asm	/^     d5a:	40b005bb          	negw	a1,a1$/;"	l
d5c	user/grind.asm	/^     d5c:	04e79563          	bne	a5,a4,da6 <vprintf+0xf2>$/;"	l
d5c	user/usertests.asm	/^     d5c:	585030ef          	jal	4ae0 <link>$/;"	l
d5e	user/sh.asm	/^     d5e:	4885                	li	a7,1$/;"	l
d6	user/cat.asm	/^  d6:	00001597          	auipc	a1,0x1$/;"	l
d6	user/echo.asm	/^  d6:	e422                	sd	s0,8(sp)$/;"	l
d6	user/forktest.asm	/^  d6:	1141                	addi	sp,sp,-16$/;"	l
d6	user/grind.asm	/^      d6:	00001997          	auipc	s3,0x1$/;"	l
d6	user/init.asm	/^  d6:	0585                	addi	a1,a1,1$/;"	l
d6	user/kill.asm	/^  d6:	bfe5                	j	ce <strlen+0x20>$/;"	l
d6	user/ln.asm	/^  d6:	0800                	addi	s0,sp,16$/;"	l
d6	user/ls.asm	/^  d6:	93c1                	srli	a5,a5,0x30$/;"	l
d6	user/sh.asm	/^      d6:	35f000ef          	jal	c34 <exec>$/;"	l
d6	user/usertests.asm	/^      d6:	00005517          	auipc	a0,0x5$/;"	l
d6	user/wc.asm	/^  d6:	2f0000ef          	jal	3c6 <exit>$/;"	l
d6	user/zombie.asm	/^  d6:	00054783          	lbu	a5,0(a0)$/;"	l
d60	user/grind.asm	/^     d60:	02500593          	li	a1,37$/;"	l
d60	user/sh.asm	/^     d60:	bf85                	j	cd0 <printint+0x16>$/;"	l
d60	user/usertests.asm	/^     d60:	0a055a63          	bgez	a0,e14 <linktest+0x1a0>$/;"	l
d62	user/sh.asm	/^     d62:	711d                	addi	sp,sp,-96$/;"	l
d64	user/grind.asm	/^     d64:	855a                	mv	a0,s6$/;"	l
d64	user/sh.asm	/^     d64:	ec86                	sd	ra,88(sp)$/;"	l
d64	user/usertests.asm	/^     d64:	00005597          	auipc	a1,0x5$/;"	l
d66	user/grind.asm	/^     d66:	e89ff0ef          	jal	bee <putc>$/;"	l
d66	user/sh.asm	/^     d66:	e8a2                	sd	s0,80(sp)$/;"	l
d68	user/sh.asm	/^     d68:	e0ca                	sd	s2,64(sp)$/;"	l
d68	user/usertests.asm	/^     d68:	8fc58593          	addi	a1,a1,-1796 # 5660 <malloc+0x714>$/;"	l
d6a	user/grind.asm	/^     d6a:	4981                	li	s3,0$/;"	l
d6a	user/sh.asm	/^     d6a:	1080                	addi	s0,sp,96$/;"	l
d6c	user/grind.asm	/^     d6c:	bf49                	j	cfe <vprintf+0x4a>$/;"	l
d6c	user/sh.asm	/^     d6c:	0005c903          	lbu	s2,0(a1)$/;"	l
d6c	user/usertests.asm	/^     d6c:	00005517          	auipc	a0,0x5$/;"	l
d6e	user/grind.asm	/^     d6e:	008b8913          	addi	s2,s7,8$/;"	l
d70	user/sh.asm	/^     d70:	26090863          	beqz	s2,fe0 <vprintf+0x27e>$/;"	l
d70	user/usertests.asm	/^     d70:	a0450513          	addi	a0,a0,-1532 # 5770 <malloc+0x824>$/;"	l
d72	user/grind.asm	/^     d72:	4685                	li	a3,1$/;"	l
d74	user/grind.asm	/^     d74:	4629                	li	a2,10$/;"	l
d74	user/sh.asm	/^     d74:	e4a6                	sd	s1,72(sp)$/;"	l
d74	user/usertests.asm	/^     d74:	56d030ef          	jal	4ae0 <link>$/;"	l
d76	user/grind.asm	/^     d76:	000ba583          	lw	a1,0(s7)$/;"	l
d76	user/sh.asm	/^     d76:	fc4e                	sd	s3,56(sp)$/;"	l
d78	user/sh.asm	/^     d78:	f852                	sd	s4,48(sp)$/;"	l
d78	user/usertests.asm	/^     d78:	0a055863          	bgez	a0,e28 <linktest+0x1b4>$/;"	l
d7a	user/grind.asm	/^     d7a:	855a                	mv	a0,s6$/;"	l
d7a	user/sh.asm	/^     d7a:	f456                	sd	s5,40(sp)$/;"	l
d7c	user/grind.asm	/^     d7c:	e91ff0ef          	jal	c0c <printint>$/;"	l
d7c	user/sh.asm	/^     d7c:	f05a                	sd	s6,32(sp)$/;"	l
d7c	user/usertests.asm	/^     d7c:	60e2                	ld	ra,24(sp)$/;"	l
d7e	user/sh.asm	/^     d7e:	ec5e                	sd	s7,24(sp)$/;"	l
d7e	user/usertests.asm	/^     d7e:	6442                	ld	s0,16(sp)$/;"	l
d8	user/echo.asm	/^  d8:	0800                	addi	s0,sp,16$/;"	l
d8	user/forktest.asm	/^  d8:	e406                	sd	ra,8(sp)$/;"	l
d8	user/grep.asm	/^  d8:	00f70c63          	beq	a4,a5,f0 <match+0x30>$/;"	l
d8	user/init.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	user/kill.asm	/^  d8:	1141                	addi	sp,sp,-16$/;"	l
d8	user/ln.asm	/^  d8:	ca19                	beqz	a2,ee <memset+0x1c>$/;"	l
d8	user/ls.asm	/^  d8:	02f76263          	bltu	a4,a5,fc <ls+0x64>$/;"	l
d8	user/mkdir.asm	/^  d8:	ff65                	bnez	a4,d0 <strlen+0x10>$/;"	l
d8	user/rm.asm	/^  d8:	ff65                	bnez	a4,d0 <strlen+0x10>$/;"	l
d8	user/stressfs.asm	/^  d8:	1141                	addi	sp,sp,-16$/;"	l
d80	user/grind.asm	/^     d80:	8bca                	mv	s7,s2$/;"	l
d80	user/sh.asm	/^     d80:	e862                	sd	s8,16(sp)$/;"	l
d80	user/usertests.asm	/^     d80:	64a2                	ld	s1,8(sp)$/;"	l
d82	user/grind.asm	/^     d82:	4981                	li	s3,0$/;"	l
d82	user/sh.asm	/^     d82:	e466                	sd	s9,8(sp)$/;"	l
d82	user/usertests.asm	/^     d82:	6902                	ld	s2,0(sp)$/;"	l
d84	user/grind.asm	/^     d84:	bfad                	j	cfe <vprintf+0x4a>$/;"	l
d84	user/sh.asm	/^     d84:	8b2a                	mv	s6,a0$/;"	l
d84	user/usertests.asm	/^     d84:	6105                	addi	sp,sp,32$/;"	l
d86	user/grind.asm	/^     d86:	06400793          	li	a5,100$/;"	l
d86	user/sh.asm	/^     d86:	8a2e                	mv	s4,a1$/;"	l
d86	user/usertests.asm	/^     d86:	8082                	ret$/;"	l
d88	user/sh.asm	/^     d88:	8bb2                	mv	s7,a2$/;"	l
d88	user/usertests.asm	/^     d88:	85ca                	mv	a1,s2$/;"	l
d8a	user/grind.asm	/^     d8a:	02f68963          	beq	a3,a5,dbc <vprintf+0x108>$/;"	l
d8a	user/sh.asm	/^     d8a:	4981                	li	s3,0$/;"	l
d8a	user/usertests.asm	/^     d8a:	00005517          	auipc	a0,0x5$/;"	l
d8c	user/sh.asm	/^     d8c:	4481                	li	s1,0$/;"	l
d8e	user/grind.asm	/^     d8e:	06c00793          	li	a5,108$/;"	l
d8e	user/sh.asm	/^     d8e:	4701                	li	a4,0$/;"	l
d8e	user/usertests.asm	/^     d8e:	8e650513          	addi	a0,a0,-1818 # 5670 <malloc+0x724>$/;"	l
d90	user/sh.asm	/^     d90:	02500a93          	li	s5,37$/;"	l
d92	user/grind.asm	/^     d92:	04f68263          	beq	a3,a5,dd6 <vprintf+0x122>$/;"	l
d92	user/usertests.asm	/^     d92:	106040ef          	jal	4e98 <printf>$/;"	l
d94	user/sh.asm	/^     d94:	06400c13          	li	s8,100$/;"	l
d96	user/grind.asm	/^     d96:	07500793          	li	a5,117$/;"	l
d96	user/usertests.asm	/^     d96:	4505                	li	a0,1$/;"	l
d98	user/sh.asm	/^     d98:	06c00c93          	li	s9,108$/;"	l
d98	user/usertests.asm	/^     d98:	4e9030ef          	jal	4a80 <exit>$/;"	l
d9a	user/grind.asm	/^     d9a:	0af68063          	beq	a3,a5,e3a <vprintf+0x186>$/;"	l
d9c	user/sh.asm	/^     d9c:	a005                	j	dbc <vprintf+0x5a>$/;"	l
d9c	user/usertests.asm	/^     d9c:	85ca                	mv	a1,s2$/;"	l
d9e	user/grind.asm	/^     d9e:	07800793          	li	a5,120$/;"	l
d9e	user/sh.asm	/^     d9e:	85ca                	mv	a1,s2$/;"	l
d9e	user/usertests.asm	/^     d9e:	00005517          	auipc	a0,0x5$/;"	l
da	user/cat.asm	/^  da:	87a58593          	addi	a1,a1,-1926 # 950 <malloc+0x130>$/;"	l
da	user/echo.asm	/^  da:	00054783          	lbu	a5,0(a0)$/;"	l
da	user/forktest.asm	/^  da:	e022                	sd	s0,0(sp)$/;"	l
da	user/grind.asm	/^      da:	08a98993          	addi	s3,s3,138 # 1160 <malloc+0x146>$/;"	l
da	user/init.asm	/^  da:	fff5c703          	lbu	a4,-1(a1)$/;"	l
da	user/kill.asm	/^  da:	e422                	sd	s0,8(sp)$/;"	l
da	user/ln.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	user/mkdir.asm	/^  da:	40a6853b          	subw	a0,a3,a0$/;"	l
da	user/rm.asm	/^  da:	40a6853b          	subw	a0,a3,a0$/;"	l
da	user/sh.asm	/^      da:	6490                	ld	a2,8(s1)$/;"	l
da	user/stressfs.asm	/^  da:	e406                	sd	ra,8(sp)$/;"	l
da	user/usertests.asm	/^      da:	fd250513          	addi	a0,a0,-46 # 50a8 <malloc+0x15c>$/;"	l
da	user/wc.asm	/^  da:	7179                	addi	sp,sp,-48$/;"	l
da	user/zombie.asm	/^  da:	fbfd                	bnez	a5,d0 <strchr+0xc>$/;"	l
da0	user/sh.asm	/^     da0:	855a                	mv	a0,s6$/;"	l
da2	user/grind.asm	/^     da2:	0ef68263          	beq	a3,a5,e86 <vprintf+0x1d2>$/;"	l
da2	user/sh.asm	/^     da2:	efbff0ef          	jal	c9c <putc>$/;"	l
da2	user/usertests.asm	/^     da2:	8ea50513          	addi	a0,a0,-1814 # 5688 <malloc+0x73c>$/;"	l
da6	user/grind.asm	/^     da6:	02500593          	li	a1,37$/;"	l
da6	user/sh.asm	/^     da6:	a019                	j	dac <vprintf+0x4a>$/;"	l
da6	user/usertests.asm	/^     da6:	0f2040ef          	jal	4e98 <printf>$/;"	l
da8	user/sh.asm	/^     da8:	03598263          	beq	s3,s5,dcc <vprintf+0x6a>$/;"	l
daa	user/grind.asm	/^     daa:	855a                	mv	a0,s6$/;"	l
daa	user/usertests.asm	/^     daa:	4505                	li	a0,1$/;"	l
dac	user/grind.asm	/^     dac:	e43ff0ef          	jal	bee <putc>$/;"	l
dac	user/sh.asm	/^     dac:	2485                	addiw	s1,s1,1$/;"	l
dac	user/usertests.asm	/^     dac:	4d5030ef          	jal	4a80 <exit>$/;"	l
dae	user/sh.asm	/^     dae:	8726                	mv	a4,s1$/;"	l
data	kernel/buf.h	/^  uchar data[BSIZE];$/;"	m	struct:buf	typeref:typename:uchar[]
data	kernel/pipe.c	/^  char data[PIPESIZE];$/;"	m	struct:pipe	typeref:typename:char[]	file:
db0	user/grind.asm	/^     db0:	85ca                	mv	a1,s2$/;"	l
db0	user/sh.asm	/^     db0:	009a07b3          	add	a5,s4,s1$/;"	l
db0	user/usertests.asm	/^     db0:	85ca                	mv	a1,s2$/;"	l
db2	user/grind.asm	/^     db2:	855a                	mv	a0,s6$/;"	l
db2	user/usertests.asm	/^     db2:	00005517          	auipc	a0,0x5$/;"	l
db4	user/grind.asm	/^     db4:	e3bff0ef          	jal	bee <putc>$/;"	l
db4	user/sh.asm	/^     db4:	0007c903          	lbu	s2,0(a5)$/;"	l
db6	user/usertests.asm	/^     db6:	8ee50513          	addi	a0,a0,-1810 # 56a0 <malloc+0x754>$/;"	l
db8	user/grind.asm	/^     db8:	4981                	li	s3,0$/;"	l
db8	user/sh.asm	/^     db8:	20090c63          	beqz	s2,fd0 <vprintf+0x26e>$/;"	l
dba	user/grind.asm	/^     dba:	b791                	j	cfe <vprintf+0x4a>$/;"	l
dba	user/usertests.asm	/^     dba:	0de040ef          	jal	4e98 <printf>$/;"	l
dbc	user/grind.asm	/^     dbc:	008b8913          	addi	s2,s7,8$/;"	l
dbc	user/sh.asm	/^     dbc:	0009079b          	sext.w	a5,s2$/;"	l
dbe	user/usertests.asm	/^     dbe:	4505                	li	a0,1$/;"	l
dc	user/forktest.asm	/^  dc:	0800                	addi	s0,sp,16$/;"	l
dc	user/grep.asm	/^  dc:	85a6                	mv	a1,s1$/;"	l
dc	user/kill.asm	/^  dc:	0800                	addi	s0,sp,16$/;"	l
dc	user/ln.asm	/^  dc:	1602                	slli	a2,a2,0x20$/;"	l
dc	user/ls.asm	/^  dc:	854a                	mv	a0,s2$/;"	l
dc	user/sh.asm	/^      dc:	00001597          	auipc	a1,0x1$/;"	l
dc	user/stressfs.asm	/^  dc:	e022                	sd	s0,0(sp)$/;"	l
dc	user/wc.asm	/^  dc:	f406                	sd	ra,40(sp)$/;"	l
dc	user/zombie.asm	/^  dc:	4501                	li	a0,0$/;"	l
dc0	user/grind.asm	/^     dc0:	4685                	li	a3,1$/;"	l
dc0	user/sh.asm	/^     dc0:	fe0994e3          	bnez	s3,da8 <vprintf+0x46>$/;"	l
dc0	user/usertests.asm	/^     dc0:	4c1030ef          	jal	4a80 <exit>$/;"	l
dc2	user/grind.asm	/^     dc2:	4629                	li	a2,10$/;"	l
dc4	user/grind.asm	/^     dc4:	000ba583          	lw	a1,0(s7)$/;"	l
dc4	user/sh.asm	/^     dc4:	fd579de3          	bne	a5,s5,d9e <vprintf+0x3c>$/;"	l
dc4	user/usertests.asm	/^     dc4:	85ca                	mv	a1,s2$/;"	l
dc6	user/usertests.asm	/^     dc6:	00005517          	auipc	a0,0x5$/;"	l
dc8	user/grind.asm	/^     dc8:	855a                	mv	a0,s6$/;"	l
dc8	user/sh.asm	/^     dc8:	89be                	mv	s3,a5$/;"	l
dca	user/grind.asm	/^     dca:	e43ff0ef          	jal	c0c <printint>$/;"	l
dca	user/sh.asm	/^     dca:	b7cd                	j	dac <vprintf+0x4a>$/;"	l
dca	user/usertests.asm	/^     dca:	8fa50513          	addi	a0,a0,-1798 # 56c0 <malloc+0x774>$/;"	l
dcc	user/sh.asm	/^     dcc:	00ea06b3          	add	a3,s4,a4$/;"	l
dce	user/grind.asm	/^     dce:	2485                	addiw	s1,s1,1$/;"	l
dce	user/usertests.asm	/^     dce:	0ca040ef          	jal	4e98 <printf>$/;"	l
dd0	user/grind.asm	/^     dd0:	8bca                	mv	s7,s2$/;"	l
dd0	user/sh.asm	/^     dd0:	0016c683          	lbu	a3,1(a3)$/;"	l
dd2	user/grind.asm	/^     dd2:	4981                	li	s3,0$/;"	l
dd2	user/usertests.asm	/^     dd2:	4505                	li	a0,1$/;"	l
dd4	user/grind.asm	/^     dd4:	b72d                	j	cfe <vprintf+0x4a>$/;"	l
dd4	user/sh.asm	/^     dd4:	8636                	mv	a2,a3$/;"	l
dd4	user/usertests.asm	/^     dd4:	4ad030ef          	jal	4a80 <exit>$/;"	l
dd6	user/grind.asm	/^     dd6:	06400793          	li	a5,100$/;"	l
dd6	user/sh.asm	/^     dd6:	c681                	beqz	a3,dde <vprintf+0x7c>$/;"	l
dd8	user/sh.asm	/^     dd8:	9752                	add	a4,a4,s4$/;"	l
dd8	user/usertests.asm	/^     dd8:	85ca                	mv	a1,s2$/;"	l
dda	user/grind.asm	/^     dda:	02f60763          	beq	a2,a5,e08 <vprintf+0x154>$/;"	l
dda	user/sh.asm	/^     dda:	00274603          	lbu	a2,2(a4)$/;"	l
dda	user/usertests.asm	/^     dda:	00005517          	auipc	a0,0x5$/;"	l
dde	user/grind.asm	/^     dde:	07500793          	li	a5,117$/;"	l
dde	user/sh.asm	/^     dde:	03878f63          	beq	a5,s8,e1c <vprintf+0xba>$/;"	l
dde	user/usertests.asm	/^     dde:	91650513          	addi	a0,a0,-1770 # 56f0 <malloc+0x7a4>$/;"	l
de	user/cat.asm	/^  de:	4509                	li	a0,2$/;"	l
de	user/echo.asm	/^  de:	cf91                	beqz	a5,fa <strlen+0x26>$/;"	l
de	user/forktest.asm	/^  de:	fe7ff0ef          	jal	c4 <main>$/;"	l
de	user/grep.asm	/^  de:	854a                	mv	a0,s2$/;"	l
de	user/grind.asm	/^      de:	c489                	beqz	s1,e8 <go+0x74>$/;"	l
de	user/init.asm	/^  de:	fee78fa3          	sb	a4,-1(a5)$/;"	l
de	user/kill.asm	/^  de:	ca19                	beqz	a2,f4 <memset+0x1c>$/;"	l
de	user/ln.asm	/^  de:	9201                	srli	a2,a2,0x20$/;"	l
de	user/ls.asm	/^  de:	f23ff0ef          	jal	0 <fmtname>$/;"	l
de	user/mkdir.asm	/^  de:	2505                	addiw	a0,a0,1$/;"	l
de	user/rm.asm	/^  de:	2505                	addiw	a0,a0,1$/;"	l
de	user/stressfs.asm	/^  de:	0800                	addi	s0,sp,16$/;"	l
de	user/usertests.asm	/^      de:	1e3040ef          	jal	4ac0 <open>$/;"	l
de	user/wc.asm	/^  de:	f022                	sd	s0,32(sp)$/;"	l
de	user/zombie.asm	/^  de:	6422                	ld	s0,8(sp)$/;"	l
de2	user/grind.asm	/^     de2:	06f60963          	beq	a2,a5,e54 <vprintf+0x1a0>$/;"	l
de2	user/sh.asm	/^     de2:	05978963          	beq	a5,s9,e34 <vprintf+0xd2>$/;"	l
de2	user/usertests.asm	/^     de2:	0b6040ef          	jal	4e98 <printf>$/;"	l
de6	user/grind.asm	/^     de6:	07800793          	li	a5,120$/;"	l
de6	user/sh.asm	/^     de6:	07500713          	li	a4,117$/;"	l
de6	user/usertests.asm	/^     de6:	4505                	li	a0,1$/;"	l
de8	user/usertests.asm	/^     de8:	499030ef          	jal	4a80 <exit>$/;"	l
dea	user/grind.asm	/^     dea:	faf61ee3          	bne	a2,a5,da6 <vprintf+0xf2>$/;"	l
dea	user/sh.asm	/^     dea:	0ee78363          	beq	a5,a4,ed0 <vprintf+0x16e>$/;"	l
dec	user/usertests.asm	/^     dec:	85ca                	mv	a1,s2$/;"	l
dee	user/grind.asm	/^     dee:	008b8913          	addi	s2,s7,8$/;"	l
dee	user/sh.asm	/^     dee:	07800713          	li	a4,120$/;"	l
dee	user/usertests.asm	/^     dee:	00005517          	auipc	a0,0x5$/;"	l
desc	kernel/virtio_disk.c	/^  struct virtq_desc *desc;$/;"	m	struct:disk	typeref:struct:virtq_desc *	file:
dev	kernel/buf.h	/^  uint dev;$/;"	m	struct:buf	typeref:typename:uint
dev	kernel/file.h	/^  uint dev;           \/\/ Device number$/;"	m	struct:inode	typeref:typename:uint
dev	kernel/log.c	/^  int dev;$/;"	m	struct:log	typeref:typename:int	file:
dev	kernel/stat.h	/^  int dev;     \/\/ File system's disk device$/;"	m	struct:stat	typeref:typename:int
devintr	kernel/trap.c	/^devintr()$/;"	f	typeref:typename:int
devsw	kernel/file.c	/^struct devsw devsw[NDEV];$/;"	v	typeref:struct:devsw[]
devsw	kernel/file.h	/^struct devsw {$/;"	s
df2	user/grind.asm	/^     df2:	4681                	li	a3,0$/;"	l
df2	user/sh.asm	/^     df2:	12e78563          	beq	a5,a4,f1c <vprintf+0x1ba>$/;"	l
df2	user/usertests.asm	/^     df2:	91a50513          	addi	a0,a0,-1766 # 5708 <malloc+0x7bc>$/;"	l
df4	user/grind.asm	/^     df4:	4641                	li	a2,16$/;"	l
df6	user/grind.asm	/^     df6:	000ba583          	lw	a1,0(s7)$/;"	l
df6	user/sh.asm	/^     df6:	07000713          	li	a4,112$/;"	l
df6	user/usertests.asm	/^     df6:	0a2040ef          	jal	4e98 <printf>$/;"	l
dfa	user/grind.asm	/^     dfa:	855a                	mv	a0,s6$/;"	l
dfa	user/sh.asm	/^     dfa:	14e78a63          	beq	a5,a4,f4e <vprintf+0x1ec>$/;"	l
dfa	user/usertests.asm	/^     dfa:	4505                	li	a0,1$/;"	l
dfc	user/grind.asm	/^     dfc:	e11ff0ef          	jal	c0c <printint>$/;"	l
dfc	user/usertests.asm	/^     dfc:	485030ef          	jal	4a80 <exit>$/;"	l
dfe	user/sh.asm	/^     dfe:	07300713          	li	a4,115$/;"	l
die	mkfs/mkfs.c	/^die(const char *s)$/;"	f	typeref:typename:void
digits	kernel/printf.c	/^static char digits[] = "0123456789abcdef";$/;"	v	typeref:typename:char[]	file:
digits	user/printf.c	/^static char digits[] = "0123456789ABCDEF";$/;"	v	typeref:typename:char[]	file:
dinode	kernel/fs.h	/^struct dinode {$/;"	s
dip	kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + inum%IPB;$/;"	d
dip	kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dip	kernel/kernel.asm	/^  dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dirent	kernel/fs.h	/^struct dirent {$/;"	s
dirfile	user/usertests.c	/^dirfile(char *s)$/;"	f	typeref:typename:void
dirlink	kernel/fs.c	/^dirlink(struct inode *dp, char *name, uint inum)$/;"	f	typeref:typename:int
dirlookup	kernel/fs.c	/^dirlookup(struct inode *dp, char *name, uint *poff)$/;"	f	typeref:struct:inode *
dirtest	user/usertests.c	/^void dirtest(char *s)$/;"	f	typeref:typename:void
disk	kernel/buf.h	/^  int disk;    \/\/ does disk "own" buf?$/;"	m	struct:buf	typeref:typename:int
disk	kernel/virtio_disk.c	/^static struct disk {$/;"	s	file:
disk	kernel/virtio_disk.c	/^} disk;$/;"	v	typeref:struct:disk
diskfull	user/usertests.c	/^diskfull(char *s)$/;"	f	typeref:typename:void
do_commit	kernel/kernel.asm	/^    do_commit = 1;$/;"	d
do_rand	user/grind.c	/^do_rand(unsigned long *ctx)$/;"	f	typeref:typename:int
drivetests	user/usertests.c	/^drivetests(int quick, int continuous, char *justone) {$/;"	f	typeref:typename:int
dst	user/cat.asm	/^  dst = vdst;$/;"	d
dst	user/echo.asm	/^  dst = vdst;$/;"	d
dst	user/forktest.asm	/^  dst = vdst;$/;"	d
dst	user/grep.asm	/^  dst = vdst;$/;"	d
dst	user/grind.asm	/^  dst = vdst;$/;"	d
dst	user/init.asm	/^  dst = vdst;$/;"	d
dst	user/kill.asm	/^  dst = vdst;$/;"	d
dst	user/ln.asm	/^  dst = vdst;$/;"	d
dst	user/ls.asm	/^  dst = vdst;$/;"	d
dst	user/mkdir.asm	/^  dst = vdst;$/;"	d
dst	user/rm.asm	/^  dst = vdst;$/;"	d
dst	user/sh.asm	/^  dst = vdst;$/;"	d
dst	user/stressfs.asm	/^  dst = vdst;$/;"	d
dst	user/usertests.asm	/^  dst = vdst;$/;"	d
dst	user/wc.asm	/^  dst = vdst;$/;"	d
dst	user/zombie.asm	/^  dst = vdst;$/;"	d
dstva	kernel/kernel.asm	/^    dstva = va0 + PGSIZE;$/;"	d
dup	user/cat.asm	/^dup:$/;"	l
dup	user/echo.asm	/^dup:$/;"	l
dup	user/forktest.asm	/^dup:$/;"	l
dup	user/grep.asm	/^dup:$/;"	l
dup	user/grind.asm	/^dup:$/;"	l
dup	user/init.asm	/^dup:$/;"	l
dup	user/kill.asm	/^dup:$/;"	l
dup	user/ln.asm	/^dup:$/;"	l
dup	user/ls.asm	/^dup:$/;"	l
dup	user/mkdir.asm	/^dup:$/;"	l
dup	user/rm.asm	/^dup:$/;"	l
dup	user/sh.asm	/^dup:$/;"	l
dup	user/stressfs.asm	/^dup:$/;"	l
dup	user/usertests.asm	/^dup:$/;"	l
dup	user/usys.S	/^dup:$/;"	l
dup	user/wc.asm	/^dup:$/;"	l
dup	user/zombie.asm	/^dup:$/;"	l
e	kernel/console.c	/^  uint e;  \/\/ Edit index$/;"	m	struct:__anonb6393d190108	typeref:typename:uint	file:
e	user/cat.asm	/^   e:	89aa                	mv	s3,a0$/;"	l
e	user/echo.asm	/^   e:	e456                	sd	s5,8(sp)$/;"	l
e	user/grep.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	user/init.asm	/^   e:	00001517          	auipc	a0,0x1$/;"	l
e	user/kill.asm	/^   e:	e426                	sd	s1,8(sp)$/;"	l
e	user/ln.asm	/^   e:	e426                	sd	s1,8(sp)$/;"	l
e	user/mkdir.asm	/^   e:	e426                	sd	s1,8(sp)$/;"	l
e	user/rm.asm	/^   e:	e426                	sd	s1,8(sp)$/;"	l
e	user/sh.asm	/^       e:	892e                	mv	s2,a1$/;"	l
e	user/usertests.asm	/^       e:	00007797          	auipc	a5,0x7$/;"	l
e	user/wc.asm	/^   e:	e4d6                	sd	s5,72(sp)$/;"	l
e0	user/cat.asm	/^  e0:	662000ef          	jal	742 <fprintf>$/;"	l
e0	user/echo.asm	/^  e0:	0505                	addi	a0,a0,1$/;"	l
e0	user/grep.asm	/^  e0:	f6bff0ef          	jal	4a <matchhere>$/;"	l
e0	user/grind.asm	/^      e0:	00001997          	auipc	s3,0x1$/;"	l
e0	user/kill.asm	/^  e0:	87aa                	mv	a5,a0$/;"	l
e0	user/ln.asm	/^  e0:	00a60733          	add	a4,a2,a0$/;"	l
e0	user/mkdir.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	user/rm.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	user/sh.asm	/^      e0:	10c58593          	addi	a1,a1,268 # 11e8 <malloc+0x120>$/;"	l
e0	user/stressfs.asm	/^  e0:	f21ff0ef          	jal	0 <main>$/;"	l
e0	user/wc.asm	/^  e0:	1800                	addi	s0,sp,48$/;"	l
e0	user/zombie.asm	/^  e0:	0141                	addi	sp,sp,16$/;"	l
e00	user/grind.asm	/^     e00:	2489                	addiw	s1,s1,2$/;"	l
e00	user/usertests.asm	/^     e00:	85ca                	mv	a1,s2$/;"	l
e02	user/grind.asm	/^     e02:	8bca                	mv	s7,s2$/;"	l
e02	user/sh.asm	/^     e02:	18e78a63          	beq	a5,a4,f96 <vprintf+0x234>$/;"	l
e02	user/usertests.asm	/^     e02:	00005517          	auipc	a0,0x5$/;"	l
e04	user/grind.asm	/^     e04:	4981                	li	s3,0$/;"	l
e06	user/grind.asm	/^     e06:	bde5                	j	cfe <vprintf+0x4a>$/;"	l
e06	user/sh.asm	/^     e06:	02500713          	li	a4,37$/;"	l
e06	user/usertests.asm	/^     e06:	91e50513          	addi	a0,a0,-1762 # 5720 <malloc+0x7d4>$/;"	l
e08	user/grind.asm	/^     e08:	008b8913          	addi	s2,s7,8$/;"	l
e0a	user/sh.asm	/^     e0a:	04e79563          	bne	a5,a4,e54 <vprintf+0xf2>$/;"	l
e0a	user/usertests.asm	/^     e0a:	08e040ef          	jal	4e98 <printf>$/;"	l
e0c	user/grind.asm	/^     e0c:	4685                	li	a3,1$/;"	l
e0e	user/grind.asm	/^     e0e:	4629                	li	a2,10$/;"	l
e0e	user/sh.asm	/^     e0e:	02500593          	li	a1,37$/;"	l
e0e	user/usertests.asm	/^     e0e:	4505                	li	a0,1$/;"	l
e10	user/grind.asm	/^     e10:	000ba583          	lw	a1,0(s7)$/;"	l
e10	user/usertests.asm	/^     e10:	471030ef          	jal	4a80 <exit>$/;"	l
e12	user/sh.asm	/^     e12:	855a                	mv	a0,s6$/;"	l
e14	user/grind.asm	/^     e14:	855a                	mv	a0,s6$/;"	l
e14	user/sh.asm	/^     e14:	e89ff0ef          	jal	c9c <putc>$/;"	l
e14	user/usertests.asm	/^     e14:	85ca                	mv	a1,s2$/;"	l
e16	user/grind.asm	/^     e16:	df7ff0ef          	jal	c0c <printint>$/;"	l
e16	user/usertests.asm	/^     e16:	00005517          	auipc	a0,0x5$/;"	l
e18	user/sh.asm	/^     e18:	4981                	li	s3,0$/;"	l
e1a	user/grind.asm	/^     e1a:	2489                	addiw	s1,s1,2$/;"	l
e1a	user/sh.asm	/^     e1a:	bf49                	j	dac <vprintf+0x4a>$/;"	l
e1a	user/usertests.asm	/^     e1a:	93250513          	addi	a0,a0,-1742 # 5748 <malloc+0x7fc>$/;"	l
e1c	user/grind.asm	/^     e1c:	8bca                	mv	s7,s2$/;"	l
e1c	user/sh.asm	/^     e1c:	008b8913          	addi	s2,s7,8$/;"	l
e1e	user/grind.asm	/^     e1e:	4981                	li	s3,0$/;"	l
e1e	user/usertests.asm	/^     e1e:	07a040ef          	jal	4e98 <printf>$/;"	l
e2	user/echo.asm	/^  e2:	87aa                	mv	a5,a0$/;"	l
e2	user/forktest.asm	/^  e2:	4501                	li	a0,0$/;"	l
e2	user/init.asm	/^  e2:	fb75                	bnez	a4,d6 <strcpy+0x8>$/;"	l
e2	user/kill.asm	/^  e2:	1602                	slli	a2,a2,0x20$/;"	l
e2	user/ls.asm	/^  e2:	85aa                	mv	a1,a0$/;"	l
e2	user/mkdir.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	user/rm.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	user/usertests.asm	/^      e2:	02055163          	bgez	a0,104 <opentest+0x52>$/;"	l
e2	user/wc.asm	/^  e2:	4785                	li	a5,1$/;"	l
e2	user/zombie.asm	/^  e2:	8082                	ret$/;"	l
e20	user/grind.asm	/^     e20:	bdf9                	j	cfe <vprintf+0x4a>$/;"	l
e20	user/sh.asm	/^     e20:	4685                	li	a3,1$/;"	l
e22	user/grind.asm	/^     e22:	008b8913          	addi	s2,s7,8$/;"	l
e22	user/sh.asm	/^     e22:	4629                	li	a2,10$/;"	l
e22	user/usertests.asm	/^     e22:	4505                	li	a0,1$/;"	l
e24	user/sh.asm	/^     e24:	000ba583          	lw	a1,0(s7)$/;"	l
e24	user/usertests.asm	/^     e24:	45d030ef          	jal	4a80 <exit>$/;"	l
e26	user/grind.asm	/^     e26:	4681                	li	a3,0$/;"	l
e28	user/grind.asm	/^     e28:	4629                	li	a2,10$/;"	l
e28	user/sh.asm	/^     e28:	855a                	mv	a0,s6$/;"	l
e28	user/usertests.asm	/^     e28:	85ca                	mv	a1,s2$/;"	l
e2a	user/grind.asm	/^     e2a:	000ba583          	lw	a1,0(s7)$/;"	l
e2a	user/sh.asm	/^     e2a:	e91ff0ef          	jal	cba <printint>$/;"	l
e2a	user/usertests.asm	/^     e2a:	00005517          	auipc	a0,0x5$/;"	l
e2e	user/grind.asm	/^     e2e:	855a                	mv	a0,s6$/;"	l
e2e	user/sh.asm	/^     e2e:	8bca                	mv	s7,s2$/;"	l
e2e	user/usertests.asm	/^     e2e:	94e50513          	addi	a0,a0,-1714 # 5778 <malloc+0x82c>$/;"	l
e30	user/grind.asm	/^     e30:	dddff0ef          	jal	c0c <printint>$/;"	l
e30	user/sh.asm	/^     e30:	4981                	li	s3,0$/;"	l
e32	user/sh.asm	/^     e32:	bfad                	j	dac <vprintf+0x4a>$/;"	l
e32	user/usertests.asm	/^     e32:	066040ef          	jal	4e98 <printf>$/;"	l
e34	user/grind.asm	/^     e34:	8bca                	mv	s7,s2$/;"	l
e34	user/sh.asm	/^     e34:	06400793          	li	a5,100$/;"	l
e36	user/grind.asm	/^     e36:	4981                	li	s3,0$/;"	l
e36	user/usertests.asm	/^     e36:	4505                	li	a0,1$/;"	l
e38	user/grind.asm	/^     e38:	b5d9                	j	cfe <vprintf+0x4a>$/;"	l
e38	user/sh.asm	/^     e38:	02f68963          	beq	a3,a5,e6a <vprintf+0x108>$/;"	l
e38	user/usertests.asm	/^     e38:	449030ef          	jal	4a80 <exit>$/;"	l
e3a	user/grind.asm	/^     e3a:	008b8913          	addi	s2,s7,8$/;"	l
e3c	user/sh.asm	/^     e3c:	06c00793          	li	a5,108$/;"	l
e3c	user/usertests.asm	/^     e3c:	7139                	addi	sp,sp,-64$/;"	l
e3e	user/grind.asm	/^     e3e:	4681                	li	a3,0$/;"	l
e3e	user/usertests.asm	/^     e3e:	fc06                	sd	ra,56(sp)$/;"	l
e4	user/cat.asm	/^  e4:	4505                	li	a0,1$/;"	l
e4	user/echo.asm	/^  e4:	86be                	mv	a3,a5$/;"	l
e4	user/forktest.asm	/^  e4:	25c000ef          	jal	340 <exit>$/;"	l
e4	user/grep.asm	/^  e4:	e911                	bnez	a0,f8 <match+0x38>$/;"	l
e4	user/grind.asm	/^      e4:	07898993          	addi	s3,s3,120 # 1158 <malloc+0x13e>$/;"	l
e4	user/init.asm	/^  e4:	6422                	ld	s0,8(sp)$/;"	l
e4	user/kill.asm	/^  e4:	9201                	srli	a2,a2,0x20$/;"	l
e4	user/ln.asm	/^  e4:	00b78023          	sb	a1,0(a5)$/;"	l
e4	user/ls.asm	/^  e4:	da842703          	lw	a4,-600(s0)$/;"	l
e4	user/mkdir.asm	/^  e4:	8082                	ret$/;"	l
e4	user/rm.asm	/^  e4:	8082                	ret$/;"	l
e4	user/sh.asm	/^      e4:	4509                	li	a0,2$/;"	l
e4	user/stressfs.asm	/^  e4:	4501                	li	a0,0$/;"	l
e4	user/wc.asm	/^  e4:	04a7d463          	bge	a5,a0,12c <main+0x52>$/;"	l
e4	user/zombie.asm	/^  e4:	4501                	li	a0,0$/;"	l
e40	user/grind.asm	/^     e40:	4629                	li	a2,10$/;"	l
e40	user/sh.asm	/^     e40:	04f68263          	beq	a3,a5,e84 <vprintf+0x122>$/;"	l
e40	user/usertests.asm	/^     e40:	f822                	sd	s0,48(sp)$/;"	l
e42	user/grind.asm	/^     e42:	000ba583          	lw	a1,0(s7)$/;"	l
e42	user/usertests.asm	/^     e42:	f426                	sd	s1,40(sp)$/;"	l
e44	user/sh.asm	/^     e44:	07500793          	li	a5,117$/;"	l
e44	user/usertests.asm	/^     e44:	f04a                	sd	s2,32(sp)$/;"	l
e46	user/grind.asm	/^     e46:	855a                	mv	a0,s6$/;"	l
e46	user/usertests.asm	/^     e46:	ec4e                	sd	s3,24(sp)$/;"	l
e48	user/grind.asm	/^     e48:	dc5ff0ef          	jal	c0c <printint>$/;"	l
e48	user/sh.asm	/^     e48:	0af68063          	beq	a3,a5,ee8 <vprintf+0x186>$/;"	l
e48	user/usertests.asm	/^     e48:	e852                	sd	s4,16(sp)$/;"	l
e4a	user/usertests.asm	/^     e4a:	e456                	sd	s5,8(sp)$/;"	l
e4c	user/grind.asm	/^     e4c:	2485                	addiw	s1,s1,1$/;"	l
e4c	user/sh.asm	/^     e4c:	07800793          	li	a5,120$/;"	l
e4c	user/usertests.asm	/^     e4c:	e05a                	sd	s6,0(sp)$/;"	l
e4e	user/grind.asm	/^     e4e:	8bca                	mv	s7,s2$/;"	l
e4e	user/usertests.asm	/^     e4e:	0080                	addi	s0,sp,64$/;"	l
e50	user/grind.asm	/^     e50:	4981                	li	s3,0$/;"	l
e50	user/sh.asm	/^     e50:	0ef68263          	beq	a3,a5,f34 <vprintf+0x1d2>$/;"	l
e50	user/usertests.asm	/^     e50:	8b2a                	mv	s6,a0$/;"	l
e52	user/grind.asm	/^     e52:	b575                	j	cfe <vprintf+0x4a>$/;"	l
e52	user/usertests.asm	/^     e52:	4481                	li	s1,0$/;"	l
e54	user/grind.asm	/^     e54:	008b8913          	addi	s2,s7,8$/;"	l
e54	user/sh.asm	/^     e54:	02500593          	li	a1,37$/;"	l
e54	user/usertests.asm	/^     e54:	00005997          	auipc	s3,0x5$/;"	l
e58	user/grind.asm	/^     e58:	4681                	li	a3,0$/;"	l
e58	user/sh.asm	/^     e58:	855a                	mv	a0,s6$/;"	l
e58	user/usertests.asm	/^     e58:	94498993          	addi	s3,s3,-1724 # 5798 <malloc+0x84c>$/;"	l
e5a	user/grind.asm	/^     e5a:	4629                	li	a2,10$/;"	l
e5a	user/sh.asm	/^     e5a:	e43ff0ef          	jal	c9c <putc>$/;"	l
e5c	user/grind.asm	/^     e5c:	000ba583          	lw	a1,0(s7)$/;"	l
e5c	user/usertests.asm	/^     e5c:	597d                	li	s2,-1$/;"	l
e5e	user/sh.asm	/^     e5e:	85ca                	mv	a1,s2$/;"	l
e5e	user/usertests.asm	/^     e5e:	6a85                	lui	s5,0x1$/;"	l
e6	user/cat.asm	/^  e6:	26e000ef          	jal	354 <exit>$/;"	l
e6	user/echo.asm	/^  e6:	0785                	addi	a5,a5,1$/;"	l
e6	user/grep.asm	/^  e6:	0485                	addi	s1,s1,1$/;"	l
e6	user/init.asm	/^  e6:	0141                	addi	sp,sp,16$/;"	l
e6	user/kill.asm	/^  e6:	00a60733          	add	a4,a2,a0$/;"	l
e6	user/mkdir.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	user/rm.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	user/sh.asm	/^      e6:	705000ef          	jal	fea <fprintf>$/;"	l
e6	user/stressfs.asm	/^  e6:	25c000ef          	jal	342 <exit>$/;"	l
e6	user/usertests.asm	/^      e6:	60e2                	ld	ra,24(sp)$/;"	l
e6	user/zombie.asm	/^  e6:	bfe5                	j	de <strchr+0x1a>$/;"	l
e60	user/grind.asm	/^     e60:	855a                	mv	a0,s6$/;"	l
e60	user/sh.asm	/^     e60:	855a                	mv	a0,s6$/;"	l
e60	user/usertests.asm	/^     e60:	00114a37          	lui	s4,0x114$/;"	l
e62	user/grind.asm	/^     e62:	dabff0ef          	jal	c0c <printint>$/;"	l
e62	user/sh.asm	/^     e62:	e3bff0ef          	jal	c9c <putc>$/;"	l
e64	user/usertests.asm	/^     e64:	85a6                	mv	a1,s1$/;"	l
e66	user/grind.asm	/^     e66:	2489                	addiw	s1,s1,2$/;"	l
e66	user/sh.asm	/^     e66:	4981                	li	s3,0$/;"	l
e66	user/usertests.asm	/^     e66:	854e                	mv	a0,s3$/;"	l
e68	user/grind.asm	/^     e68:	8bca                	mv	s7,s2$/;"	l
e68	user/sh.asm	/^     e68:	b791                	j	dac <vprintf+0x4a>$/;"	l
e68	user/usertests.asm	/^     e68:	479030ef          	jal	4ae0 <link>$/;"	l
e6a	user/grind.asm	/^     e6a:	4981                	li	s3,0$/;"	l
e6a	user/sh.asm	/^     e6a:	008b8913          	addi	s2,s7,8$/;"	l
e6c	user/grind.asm	/^     e6c:	bd49                	j	cfe <vprintf+0x4a>$/;"	l
e6c	user/usertests.asm	/^     e6c:	01251f63          	bne	a0,s2,e8a <validatetest+0x4e>$/;"	l
e6e	user/grind.asm	/^     e6e:	008b8913          	addi	s2,s7,8$/;"	l
e6e	user/sh.asm	/^     e6e:	4685                	li	a3,1$/;"	l
e70	user/sh.asm	/^     e70:	4629                	li	a2,10$/;"	l
e70	user/usertests.asm	/^     e70:	94d6                	add	s1,s1,s5$/;"	l
e72	user/grind.asm	/^     e72:	4681                	li	a3,0$/;"	l
e72	user/sh.asm	/^     e72:	000ba583          	lw	a1,0(s7)$/;"	l
e72	user/usertests.asm	/^     e72:	ff4499e3          	bne	s1,s4,e64 <validatetest+0x28>$/;"	l
e74	user/grind.asm	/^     e74:	4641                	li	a2,16$/;"	l
e76	user/grind.asm	/^     e76:	000ba583          	lw	a1,0(s7)$/;"	l
e76	user/sh.asm	/^     e76:	855a                	mv	a0,s6$/;"	l
e76	user/usertests.asm	/^     e76:	70e2                	ld	ra,56(sp)$/;"	l
e78	user/sh.asm	/^     e78:	e43ff0ef          	jal	cba <printint>$/;"	l
e78	user/usertests.asm	/^     e78:	7442                	ld	s0,48(sp)$/;"	l
e7a	user/grind.asm	/^     e7a:	855a                	mv	a0,s6$/;"	l
e7a	user/usertests.asm	/^     e7a:	74a2                	ld	s1,40(sp)$/;"	l
e7c	user/grind.asm	/^     e7c:	d91ff0ef          	jal	c0c <printint>$/;"	l
e7c	user/sh.asm	/^     e7c:	2485                	addiw	s1,s1,1$/;"	l
e7c	user/usertests.asm	/^     e7c:	7902                	ld	s2,32(sp)$/;"	l
e7e	user/sh.asm	/^     e7e:	8bca                	mv	s7,s2$/;"	l
e7e	user/usertests.asm	/^     e7e:	69e2                	ld	s3,24(sp)$/;"	l
e8	user/echo.asm	/^  e8:	fff7c703          	lbu	a4,-1(a5)$/;"	l
e8	user/forktest.asm	/^  e8:	1141                	addi	sp,sp,-16$/;"	l
e8	user/grep.asm	/^  e8:	fff4c783          	lbu	a5,-1(s1)$/;"	l
e8	user/grind.asm	/^      e8:	4481                	li	s1,0$/;"	l
e8	user/init.asm	/^  e8:	8082                	ret$/;"	l
e8	user/ln.asm	/^  e8:	0785                	addi	a5,a5,1$/;"	l
e8	user/ls.asm	/^  e8:	d9c42683          	lw	a3,-612(s0)$/;"	l
e8	user/mkdir.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	user/rm.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	user/usertests.asm	/^      e8:	6442                	ld	s0,16(sp)$/;"	l
e8	user/wc.asm	/^  e8:	ec26                	sd	s1,24(sp)$/;"	l
e8	user/zombie.asm	/^  e8:	711d                	addi	sp,sp,-96$/;"	l
e80	user/grind.asm	/^     e80:	8bca                	mv	s7,s2$/;"	l
e80	user/sh.asm	/^     e80:	4981                	li	s3,0$/;"	l
e80	user/usertests.asm	/^     e80:	6a42                	ld	s4,16(sp)$/;"	l
e82	user/grind.asm	/^     e82:	4981                	li	s3,0$/;"	l
e82	user/sh.asm	/^     e82:	b72d                	j	dac <vprintf+0x4a>$/;"	l
e82	user/usertests.asm	/^     e82:	6aa2                	ld	s5,8(sp)$/;"	l
e84	user/grind.asm	/^     e84:	bdad                	j	cfe <vprintf+0x4a>$/;"	l
e84	user/sh.asm	/^     e84:	06400793          	li	a5,100$/;"	l
e84	user/usertests.asm	/^     e84:	6b02                	ld	s6,0(sp)$/;"	l
e86	user/grind.asm	/^     e86:	008b8913          	addi	s2,s7,8$/;"	l
e86	user/usertests.asm	/^     e86:	6121                	addi	sp,sp,64$/;"	l
e88	user/sh.asm	/^     e88:	02f60763          	beq	a2,a5,eb6 <vprintf+0x154>$/;"	l
e88	user/usertests.asm	/^     e88:	8082                	ret$/;"	l
e8a	user/grind.asm	/^     e8a:	4681                	li	a3,0$/;"	l
e8a	user/usertests.asm	/^     e8a:	85da                	mv	a1,s6$/;"	l
e8c	user/grind.asm	/^     e8c:	4641                	li	a2,16$/;"	l
e8c	user/sh.asm	/^     e8c:	07500793          	li	a5,117$/;"	l
e8c	user/usertests.asm	/^     e8c:	00005517          	auipc	a0,0x5$/;"	l
e8e	user/grind.asm	/^     e8e:	000ba583          	lw	a1,0(s7)$/;"	l
e90	user/sh.asm	/^     e90:	06f60963          	beq	a2,a5,f02 <vprintf+0x1a0>$/;"	l
e90	user/usertests.asm	/^     e90:	91c50513          	addi	a0,a0,-1764 # 57a8 <malloc+0x85c>$/;"	l
e92	user/grind.asm	/^     e92:	855a                	mv	a0,s6$/;"	l
e94	user/grind.asm	/^     e94:	d79ff0ef          	jal	c0c <printint>$/;"	l
e94	user/sh.asm	/^     e94:	07800793          	li	a5,120$/;"	l
e94	user/usertests.asm	/^     e94:	004040ef          	jal	4e98 <printf>$/;"	l
e98	user/grind.asm	/^     e98:	2485                	addiw	s1,s1,1$/;"	l
e98	user/sh.asm	/^     e98:	faf61ee3          	bne	a2,a5,e54 <vprintf+0xf2>$/;"	l
e98	user/usertests.asm	/^     e98:	4505                	li	a0,1$/;"	l
e9a	user/grind.asm	/^     e9a:	8bca                	mv	s7,s2$/;"	l
e9a	user/usertests.asm	/^     e9a:	3e7030ef          	jal	4a80 <exit>$/;"	l
e9c	user/grind.asm	/^     e9c:	4981                	li	s3,0$/;"	l
e9c	user/sh.asm	/^     e9c:	008b8913          	addi	s2,s7,8$/;"	l
e9e	user/grind.asm	/^     e9e:	b585                	j	cfe <vprintf+0x4a>$/;"	l
e9e	user/usertests.asm	/^     e9e:	715d                	addi	sp,sp,-80$/;"	l
ea	user/cat.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	user/forktest.asm	/^  ea:	e422                	sd	s0,8(sp)$/;"	l
ea	user/grind.asm	/^      ea:	5a7d                	li	s4,-1$/;"	l
ea	user/init.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	user/kill.asm	/^  ea:	00b78023          	sb	a1,0(a5)$/;"	l
ea	user/ln.asm	/^  ea:	fee79de3          	bne	a5,a4,e4 <memset+0x12>$/;"	l
ea	user/mkdir.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	user/rm.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	user/sh.asm	/^      ea:	4501                	li	a0,0$/;"	l
ea	user/stressfs.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	user/usertests.asm	/^      ea:	64a2                	ld	s1,8(sp)$/;"	l
ea	user/wc.asm	/^  ea:	e84a                	sd	s2,16(sp)$/;"	l
ea	user/zombie.asm	/^  ea:	ec86                	sd	ra,88(sp)$/;"	l
ea0	user/grind.asm	/^     ea0:	e06a                	sd	s10,0(sp)$/;"	l
ea0	user/sh.asm	/^     ea0:	4681                	li	a3,0$/;"	l
ea0	user/usertests.asm	/^     ea0:	e486                	sd	ra,72(sp)$/;"	l
ea2	user/grind.asm	/^     ea2:	008b8d13          	addi	s10,s7,8$/;"	l
ea2	user/sh.asm	/^     ea2:	4641                	li	a2,16$/;"	l
ea2	user/usertests.asm	/^     ea2:	e0a2                	sd	s0,64(sp)$/;"	l
ea4	user/sh.asm	/^     ea4:	000ba583          	lw	a1,0(s7)$/;"	l
ea4	user/usertests.asm	/^     ea4:	fc26                	sd	s1,56(sp)$/;"	l
ea6	user/grind.asm	/^     ea6:	000bb983          	ld	s3,0(s7)$/;"	l
ea6	user/usertests.asm	/^     ea6:	f84a                	sd	s2,48(sp)$/;"	l
ea8	user/sh.asm	/^     ea8:	855a                	mv	a0,s6$/;"	l
ea8	user/usertests.asm	/^     ea8:	f44e                	sd	s3,40(sp)$/;"	l
eaa	user/grind.asm	/^     eaa:	03000593          	li	a1,48$/;"	l
eaa	user/sh.asm	/^     eaa:	e11ff0ef          	jal	cba <printint>$/;"	l
eaa	user/usertests.asm	/^     eaa:	f052                	sd	s4,32(sp)$/;"	l
eac	user/usertests.asm	/^     eac:	ec56                	sd	s5,24(sp)$/;"	l
eae	user/grind.asm	/^     eae:	855a                	mv	a0,s6$/;"	l
eae	user/sh.asm	/^     eae:	2489                	addiw	s1,s1,2$/;"	l
eae	user/usertests.asm	/^     eae:	e85a                	sd	s6,16(sp)$/;"	l
eargv	user/sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	typeref:typename:char * []	file:
eb0	user/grind.asm	/^     eb0:	d3fff0ef          	jal	bee <putc>$/;"	l
eb0	user/sh.asm	/^     eb0:	8bca                	mv	s7,s2$/;"	l
eb0	user/usertests.asm	/^     eb0:	0880                	addi	s0,sp,80$/;"	l
eb2	user/sh.asm	/^     eb2:	4981                	li	s3,0$/;"	l
eb2	user/usertests.asm	/^     eb2:	89aa                	mv	s3,a0$/;"	l
eb4	user/grind.asm	/^     eb4:	07800593          	li	a1,120$/;"	l
eb4	user/sh.asm	/^     eb4:	bde5                	j	dac <vprintf+0x4a>$/;"	l
eb4	user/usertests.asm	/^     eb4:	00005517          	auipc	a0,0x5$/;"	l
eb6	user/sh.asm	/^     eb6:	008b8913          	addi	s2,s7,8$/;"	l
eb8	user/grind.asm	/^     eb8:	855a                	mv	a0,s6$/;"	l
eb8	user/usertests.asm	/^     eb8:	91450513          	addi	a0,a0,-1772 # 57c8 <malloc+0x87c>$/;"	l
eba	user/grind.asm	/^     eba:	d35ff0ef          	jal	bee <putc>$/;"	l
eba	user/sh.asm	/^     eba:	4685                	li	a3,1$/;"	l
ebc	user/sh.asm	/^     ebc:	4629                	li	a2,10$/;"	l
ebc	user/usertests.asm	/^     ebc:	415030ef          	jal	4ad0 <unlink>$/;"	l
ebe	user/grind.asm	/^     ebe:	4941                	li	s2,16$/;"	l
ebe	user/sh.asm	/^     ebe:	000ba583          	lw	a1,0(s7)$/;"	l
ec	user/cat.asm	/^  ec:	e406                	sd	ra,8(sp)$/;"	l
ec	user/echo.asm	/^  ec:	ff65                	bnez	a4,e4 <strlen+0x10>$/;"	l
ec	user/forktest.asm	/^  ec:	0800                	addi	s0,sp,16$/;"	l
ec	user/grep.asm	/^  ec:	fbe5                	bnez	a5,dc <match+0x1c>$/;"	l
ec	user/grind.asm	/^      ec:	00001917          	auipc	s2,0x1$/;"	l
ec	user/init.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	user/ls.asm	/^  ec:	da041603          	lh	a2,-608(s0)$/;"	l
ec	user/mkdir.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	user/rm.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	user/sh.asm	/^      ec:	311000ef          	jal	bfc <exit>$/;"	l
ec	user/stressfs.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	user/usertests.asm	/^      ec:	6105                	addi	sp,sp,32$/;"	l
ec	user/wc.asm	/^  ec:	e44e                	sd	s3,8(sp)$/;"	l
ec	user/zombie.asm	/^  ec:	e8a2                	sd	s0,80(sp)$/;"	l
ec0	user/grind.asm	/^     ec0:	00000b97          	auipc	s7,0x0$/;"	l
ec0	user/usertests.asm	/^     ec0:	20000593          	li	a1,512$/;"	l
ec2	user/sh.asm	/^     ec2:	855a                	mv	a0,s6$/;"	l
ec4	user/grind.asm	/^     ec4:	5d0b8b93          	addi	s7,s7,1488 # 1490 <digits>$/;"	l
ec4	user/sh.asm	/^     ec4:	df7ff0ef          	jal	cba <printint>$/;"	l
ec4	user/usertests.asm	/^     ec4:	00005517          	auipc	a0,0x5$/;"	l
ec8	user/grind.asm	/^     ec8:	03c9d793          	srli	a5,s3,0x3c$/;"	l
ec8	user/sh.asm	/^     ec8:	2489                	addiw	s1,s1,2$/;"	l
ec8	user/usertests.asm	/^     ec8:	90450513          	addi	a0,a0,-1788 # 57c8 <malloc+0x87c>$/;"	l
eca	user/sh.asm	/^     eca:	8bca                	mv	s7,s2$/;"	l
ecc	user/grind.asm	/^     ecc:	97de                	add	a5,a5,s7$/;"	l
ecc	user/sh.asm	/^     ecc:	4981                	li	s3,0$/;"	l
ecc	user/usertests.asm	/^     ecc:	3f5030ef          	jal	4ac0 <open>$/;"	l
ece	user/grind.asm	/^     ece:	0007c583          	lbu	a1,0(a5)$/;"	l
ece	user/sh.asm	/^     ece:	bdf9                	j	dac <vprintf+0x4a>$/;"	l
ecmd	user/sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ed0	user/sh.asm	/^     ed0:	008b8913          	addi	s2,s7,8$/;"	l
ed0	user/usertests.asm	/^     ed0:	0c054163          	bltz	a0,f92 <bigdir+0xf4>$/;"	l
ed2	user/grind.asm	/^     ed2:	855a                	mv	a0,s6$/;"	l
ed4	user/grind.asm	/^     ed4:	d1bff0ef          	jal	bee <putc>$/;"	l
ed4	user/sh.asm	/^     ed4:	4681                	li	a3,0$/;"	l
ed4	user/usertests.asm	/^     ed4:	3d5030ef          	jal	4aa8 <close>$/;"	l
ed6	user/sh.asm	/^     ed6:	4629                	li	a2,10$/;"	l
ed8	user/grind.asm	/^     ed8:	0992                	slli	s3,s3,0x4$/;"	l
ed8	user/sh.asm	/^     ed8:	000ba583          	lw	a1,0(s7)$/;"	l
ed8	user/usertests.asm	/^     ed8:	4901                	li	s2,0$/;"	l
eda	user/grind.asm	/^     eda:	397d                	addiw	s2,s2,-1$/;"	l
eda	user/usertests.asm	/^     eda:	07800a93          	li	s5,120$/;"	l
edc	user/grind.asm	/^     edc:	fe0916e3          	bnez	s2,ec8 <vprintf+0x214>$/;"	l
edc	user/sh.asm	/^     edc:	855a                	mv	a0,s6$/;"	l
ede	user/sh.asm	/^     ede:	dddff0ef          	jal	cba <printint>$/;"	l
ede	user/usertests.asm	/^     ede:	00005a17          	auipc	s4,0x5$/;"	l
ee	user/cat.asm	/^  ee:	e022                	sd	s0,0(sp)$/;"	l
ee	user/echo.asm	/^  ee:	40a6853b          	subw	a0,a3,a0$/;"	l
ee	user/forktest.asm	/^  ee:	87aa                	mv	a5,a0$/;"	l
ee	user/grep.asm	/^  ee:	a031                	j	fa <match+0x3a>$/;"	l
ee	user/init.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	user/kill.asm	/^  ee:	0785                	addi	a5,a5,1$/;"	l
ee	user/ln.asm	/^  ee:	6422                	ld	s0,8(sp)$/;"	l
ee	user/mkdir.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	user/rm.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	user/stressfs.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	user/usertests.asm	/^      ee:	8082                	ret$/;"	l
ee	user/wc.asm	/^  ee:	00858913          	addi	s2,a1,8$/;"	l
ee	user/zombie.asm	/^  ee:	e4a6                	sd	s1,72(sp)$/;"	l
ee0	user/grind.asm	/^     ee0:	8bea                	mv	s7,s10$/;"	l
ee2	user/grind.asm	/^     ee2:	4981                	li	s3,0$/;"	l
ee2	user/sh.asm	/^     ee2:	8bca                	mv	s7,s2$/;"	l
ee2	user/usertests.asm	/^     ee2:	8eaa0a13          	addi	s4,s4,-1814 # 57c8 <malloc+0x87c>$/;"	l
ee4	user/grind.asm	/^     ee4:	6d02                	ld	s10,0(sp)$/;"	l
ee4	user/sh.asm	/^     ee4:	4981                	li	s3,0$/;"	l
ee6	user/grind.asm	/^     ee6:	bd21                	j	cfe <vprintf+0x4a>$/;"	l
ee6	user/sh.asm	/^     ee6:	b5d9                	j	dac <vprintf+0x4a>$/;"	l
ee6	user/usertests.asm	/^     ee6:	1f400b13          	li	s6,500$/;"	l
ee8	user/grind.asm	/^     ee8:	008b8993          	addi	s3,s7,8$/;"	l
ee8	user/sh.asm	/^     ee8:	008b8913          	addi	s2,s7,8$/;"	l
eea	user/usertests.asm	/^     eea:	fb540823          	sb	s5,-80(s0)$/;"	l
eec	user/grind.asm	/^     eec:	000bb903          	ld	s2,0(s7)$/;"	l
eec	user/sh.asm	/^     eec:	4681                	li	a3,0$/;"	l
eee	user/sh.asm	/^     eee:	4629                	li	a2,10$/;"	l
eee	user/usertests.asm	/^     eee:	41f9571b          	sraiw	a4,s2,0x1f$/;"	l
ef0	user/grind.asm	/^     ef0:	00090f63          	beqz	s2,f0e <vprintf+0x25a>$/;"	l
ef0	user/sh.asm	/^     ef0:	000ba583          	lw	a1,0(s7)$/;"	l
ef2	user/usertests.asm	/^     ef2:	01a7571b          	srliw	a4,a4,0x1a$/;"	l
ef4	user/grind.asm	/^     ef4:	00094583          	lbu	a1,0(s2)$/;"	l
ef4	user/sh.asm	/^     ef4:	855a                	mv	a0,s6$/;"	l
ef6	user/sh.asm	/^     ef6:	dc5ff0ef          	jal	cba <printint>$/;"	l
ef6	user/usertests.asm	/^     ef6:	012707bb          	addw	a5,a4,s2$/;"	l
ef8	user/grind.asm	/^     ef8:	c195                	beqz	a1,f1c <vprintf+0x268>$/;"	l
efa	user/grind.asm	/^     efa:	855a                	mv	a0,s6$/;"	l
efa	user/sh.asm	/^     efa:	2485                	addiw	s1,s1,1$/;"	l
efa	user/usertests.asm	/^     efa:	4067d69b          	sraiw	a3,a5,0x6$/;"	l
efc	user/grind.asm	/^     efc:	cf3ff0ef          	jal	bee <putc>$/;"	l
efc	user/sh.asm	/^     efc:	8bca                	mv	s7,s2$/;"	l
efe	user/sh.asm	/^     efe:	4981                	li	s3,0$/;"	l
efe	user/usertests.asm	/^     efe:	0306869b          	addiw	a3,a3,48$/;"	l
efile	user/sh.c	/^  char *efile;$/;"	m	struct:redircmd	typeref:typename:char *	file:
ehsize	kernel/elf.h	/^  ushort ehsize;$/;"	m	struct:elfhdr	typeref:typename:ushort
either_copyin	kernel/proc.c	/^either_copyin(void *dst, int user_src, uint64 src, uint64 len)$/;"	f	typeref:typename:int
either_copyout	kernel/proc.c	/^either_copyout(int user_dst, uint64 dst, void *src, uint64 len)$/;"	f	typeref:typename:int
elf	kernel/elf.h	/^  uchar elf[12];$/;"	m	struct:elfhdr	typeref:typename:uchar[12]
elfhdr	kernel/elf.h	/^struct elfhdr {$/;"	s
empty	kernel/kernel.asm	/^      empty = ip;$/;"	d
empty	kernel/kernel.asm	/^  empty = 0;$/;"	d
end	kernel/kernel.ld	/^  PROVIDE(end = .);$/;"	s	assignment:provide
end	user/user.ld	/^  PROVIDE(end = .);$/;"	s	assignment:provide
end_op	kernel/log.c	/^end_op(void)$/;"	f	typeref:typename:void
end_part	gradelib.py	/^def end_part(name):$/;"	f
entry	kernel/elf.h	/^  uint64 entry;$/;"	m	struct:elfhdr	typeref:typename:uint64
entry	user/usys.pl	/^sub entry {$/;"	s
epc	kernel/proc.h	/^  \/*  24 *\/ uint64 epc;           \/\/ saved user program counter$/;"	m	struct:trapframe	typeref:typename:uint64
err	kernel/kernel.asm	/^ err:$/;"	l
es	user/sh.asm	/^  es = s + strlen(s);$/;"	d
etext	kernel/kernel.ld	/^    PROVIDE(etext = .);$/;"	s	section:.text	assignment:provide
exec	kernel/exec.c	/^exec(char *path, char **argv)$/;"	f	typeref:typename:int
exec	user/cat.asm	/^exec:$/;"	l
exec	user/echo.asm	/^exec:$/;"	l
exec	user/forktest.asm	/^exec:$/;"	l
exec	user/grep.asm	/^exec:$/;"	l
exec	user/grind.asm	/^exec:$/;"	l
exec	user/init.asm	/^exec:$/;"	l
exec	user/kill.asm	/^exec:$/;"	l
exec	user/ln.asm	/^exec:$/;"	l
exec	user/ls.asm	/^exec:$/;"	l
exec	user/mkdir.asm	/^exec:$/;"	l
exec	user/rm.asm	/^exec:$/;"	l
exec	user/sh.asm	/^exec:$/;"	l
exec	user/stressfs.asm	/^exec:$/;"	l
exec	user/usertests.asm	/^exec:$/;"	l
exec	user/usys.S	/^exec:$/;"	l
exec	user/wc.asm	/^exec:$/;"	l
exec	user/zombie.asm	/^exec:$/;"	l
execcmd	user/sh.c	/^execcmd(void)$/;"	f	typeref:struct:cmd *
execcmd	user/sh.c	/^struct execcmd {$/;"	s	file:
execout	user/usertests.c	/^execout(char *s)$/;"	f	typeref:typename:void
exectest	user/usertests.c	/^exectest(char *s)$/;"	f	typeref:typename:void
exit	kernel/proc.c	/^exit(int status)$/;"	f	typeref:typename:void
exit	user/cat.asm	/^exit:$/;"	l
exit	user/echo.asm	/^exit:$/;"	l
exit	user/forktest.asm	/^exit:$/;"	l
exit	user/grep.asm	/^exit:$/;"	l
exit	user/grind.asm	/^exit:$/;"	l
exit	user/init.asm	/^exit:$/;"	l
exit	user/initcode.S	/^exit:$/;"	l
exit	user/initcode.asm	/^exit:$/;"	l
exit	user/kill.asm	/^exit:$/;"	l
exit	user/ln.asm	/^exit:$/;"	l
exit	user/ls.asm	/^exit:$/;"	l
exit	user/mkdir.asm	/^exit:$/;"	l
exit	user/rm.asm	/^exit:$/;"	l
exit	user/sh.asm	/^exit:$/;"	l
exit	user/stressfs.asm	/^exit:$/;"	l
exit	user/usertests.asm	/^exit:$/;"	l
exit	user/usys.S	/^exit:$/;"	l
exit	user/wc.asm	/^exit:$/;"	l
exit	user/zombie.asm	/^exit:$/;"	l
exitiputtest	user/usertests.c	/^exitiputtest(char *s)$/;"	f	typeref:typename:void
exitwait	user/usertests.c	/^exitwait(char *s)$/;"	f	typeref:typename:void
extern	kernel/kernel.asm	/^extern int devintr();$/;"	l
f	user/usertests.c	/^  void (*f)(char *);$/;"	m	struct:test	typeref:typename:void (*)(char *)	file:
f0	user/cat.asm	/^  f0:	0800                	addi	s0,sp,16$/;"	l
f0	user/forktest.asm	/^  f0:	0585                	addi	a1,a1,1$/;"	l
f0	user/grep.asm	/^  f0:	0505                	addi	a0,a0,1$/;"	l
f0	user/grind.asm	/^      f0:	34490913          	addi	s2,s2,836 # 1430 <malloc+0x416>$/;"	l
f0	user/init.asm	/^  f0:	00054783          	lbu	a5,0(a0)$/;"	l
f0	user/kill.asm	/^  f0:	fee79de3          	bne	a5,a4,ea <memset+0x12>$/;"	l
f0	user/ln.asm	/^  f0:	0141                	addi	sp,sp,16$/;"	l
f0	user/ls.asm	/^  f0:	00001517          	auipc	a0,0x1$/;"	l
f0	user/mkdir.asm	/^  f0:	ca19                	beqz	a2,106 <memset+0x1c>$/;"	l
f0	user/rm.asm	/^  f0:	ca19                	beqz	a2,106 <memset+0x1c>$/;"	l
f0	user/sh.asm	/^      f0:	4505                	li	a0,1$/;"	l
f0	user/stressfs.asm	/^  f0:	87aa                	mv	a5,a0$/;"	l
f0	user/usertests.asm	/^      f0:	85a6                	mv	a1,s1$/;"	l
f0	user/zombie.asm	/^  f0:	e0ca                	sd	s2,64(sp)$/;"	l
f00	user/grind.asm	/^     f00:	0905                	addi	s2,s2,1$/;"	l
f00	user/sh.asm	/^     f00:	b575                	j	dac <vprintf+0x4a>$/;"	l
f02	user/grind.asm	/^     f02:	00094583          	lbu	a1,0(s2)$/;"	l
f02	user/sh.asm	/^     f02:	008b8913          	addi	s2,s7,8$/;"	l
f02	user/usertests.asm	/^     f02:	fad408a3          	sb	a3,-79(s0)$/;"	l
f06	user/grind.asm	/^     f06:	f9f5                	bnez	a1,efa <vprintf+0x246>$/;"	l
f06	user/sh.asm	/^     f06:	4681                	li	a3,0$/;"	l
f06	user/usertests.asm	/^     f06:	03f7f793          	andi	a5,a5,63$/;"	l
f08	user/grind.asm	/^     f08:	8bce                	mv	s7,s3$/;"	l
f08	user/sh.asm	/^     f08:	4629                	li	a2,10$/;"	l
f0a	user/grind.asm	/^     f0a:	4981                	li	s3,0$/;"	l
f0a	user/sh.asm	/^     f0a:	000ba583          	lw	a1,0(s7)$/;"	l
f0a	user/usertests.asm	/^     f0a:	9f99                	subw	a5,a5,a4$/;"	l
f0c	user/grind.asm	/^     f0c:	bbcd                	j	cfe <vprintf+0x4a>$/;"	l
f0c	user/usertests.asm	/^     f0c:	0307879b          	addiw	a5,a5,48$/;"	l
f0e	user/grind.asm	/^     f0e:	00000917          	auipc	s2,0x0$/;"	l
f0e	user/sh.asm	/^     f0e:	855a                	mv	a0,s6$/;"	l
f10	user/sh.asm	/^     f10:	dabff0ef          	jal	cba <printint>$/;"	l
f10	user/usertests.asm	/^     f10:	faf40923          	sb	a5,-78(s0)$/;"	l
f12	user/grind.asm	/^     f12:	51a90913          	addi	s2,s2,1306 # 1428 <malloc+0x40e>$/;"	l
f14	user/sh.asm	/^     f14:	2489                	addiw	s1,s1,2$/;"	l
f14	user/usertests.asm	/^     f14:	fa0409a3          	sb	zero,-77(s0)$/;"	l
f16	user/grind.asm	/^     f16:	02800593          	li	a1,40$/;"	l
f16	user/sh.asm	/^     f16:	8bca                	mv	s7,s2$/;"	l
f18	user/sh.asm	/^     f18:	4981                	li	s3,0$/;"	l
f18	user/usertests.asm	/^     f18:	fb040593          	addi	a1,s0,-80$/;"	l
f1a	user/grind.asm	/^     f1a:	b7c5                	j	efa <vprintf+0x246>$/;"	l
f1a	user/sh.asm	/^     f1a:	bd49                	j	dac <vprintf+0x4a>$/;"	l
f1c	user/grind.asm	/^     f1c:	8bce                	mv	s7,s3$/;"	l
f1c	user/sh.asm	/^     f1c:	008b8913          	addi	s2,s7,8$/;"	l
f1c	user/usertests.asm	/^     f1c:	8552                	mv	a0,s4$/;"	l
f1e	user/grind.asm	/^     f1e:	4981                	li	s3,0$/;"	l
f1e	user/usertests.asm	/^     f1e:	3c3030ef          	jal	4ae0 <link>$/;"	l
f2	user/cat.asm	/^  f2:	f81ff0ef          	jal	72 <main>$/;"	l
f2	user/echo.asm	/^  f2:	2505                	addiw	a0,a0,1$/;"	l
f2	user/forktest.asm	/^  f2:	0785                	addi	a5,a5,1$/;"	l
f2	user/grep.asm	/^  f2:	f59ff0ef          	jal	4a <matchhere>$/;"	l
f2	user/ln.asm	/^  f2:	8082                	ret$/;"	l
f2	user/mkdir.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	user/rm.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	user/sh.asm	/^      f2:	30b000ef          	jal	bfc <exit>$/;"	l
f2	user/stressfs.asm	/^  f2:	0585                	addi	a1,a1,1$/;"	l
f2	user/usertests.asm	/^      f2:	00005517          	auipc	a0,0x5$/;"	l
f2	user/wc.asm	/^  f2:	ffe5099b          	addiw	s3,a0,-2$/;"	l
f2	user/zombie.asm	/^  f2:	fc4e                	sd	s3,56(sp)$/;"	l
f20	user/grind.asm	/^     f20:	bbf9                	j	cfe <vprintf+0x4a>$/;"	l
f20	user/sh.asm	/^     f20:	4681                	li	a3,0$/;"	l
f22	user/grind.asm	/^     f22:	64a6                	ld	s1,72(sp)$/;"	l
f22	user/sh.asm	/^     f22:	4641                	li	a2,16$/;"	l
f22	user/usertests.asm	/^     f22:	84aa                	mv	s1,a0$/;"	l
f24	user/grind.asm	/^     f24:	79e2                	ld	s3,56(sp)$/;"	l
f24	user/sh.asm	/^     f24:	000ba583          	lw	a1,0(s7)$/;"	l
f24	user/usertests.asm	/^     f24:	e149                	bnez	a0,fa6 <bigdir+0x108>$/;"	l
f26	user/grind.asm	/^     f26:	7a42                	ld	s4,48(sp)$/;"	l
f26	user/usertests.asm	/^     f26:	2905                	addiw	s2,s2,1$/;"	l
f28	user/grind.asm	/^     f28:	7aa2                	ld	s5,40(sp)$/;"	l
f28	user/sh.asm	/^     f28:	855a                	mv	a0,s6$/;"	l
f28	user/usertests.asm	/^     f28:	fd6911e3          	bne	s2,s6,eea <bigdir+0x4c>$/;"	l
f2a	user/grind.asm	/^     f2a:	7b02                	ld	s6,32(sp)$/;"	l
f2a	user/sh.asm	/^     f2a:	d91ff0ef          	jal	cba <printint>$/;"	l
f2c	user/grind.asm	/^     f2c:	6be2                	ld	s7,24(sp)$/;"	l
f2c	user/usertests.asm	/^     f2c:	00005517          	auipc	a0,0x5$/;"	l
f2e	user/grind.asm	/^     f2e:	6c42                	ld	s8,16(sp)$/;"	l
f2e	user/sh.asm	/^     f2e:	8bca                	mv	s7,s2$/;"	l
f30	user/grind.asm	/^     f30:	6ca2                	ld	s9,8(sp)$/;"	l
f30	user/sh.asm	/^     f30:	4981                	li	s3,0$/;"	l
f30	user/usertests.asm	/^     f30:	89c50513          	addi	a0,a0,-1892 # 57c8 <malloc+0x87c>$/;"	l
f32	user/grind.asm	/^     f32:	60e6                	ld	ra,88(sp)$/;"	l
f32	user/sh.asm	/^     f32:	bdad                	j	dac <vprintf+0x4a>$/;"	l
f34	user/grind.asm	/^     f34:	6446                	ld	s0,80(sp)$/;"	l
f34	user/sh.asm	/^     f34:	008b8913          	addi	s2,s7,8$/;"	l
f34	user/usertests.asm	/^     f34:	39d030ef          	jal	4ad0 <unlink>$/;"	l
f36	user/grind.asm	/^     f36:	6906                	ld	s2,64(sp)$/;"	l
f38	user/grind.asm	/^     f38:	6125                	addi	sp,sp,96$/;"	l
f38	user/sh.asm	/^     f38:	4681                	li	a3,0$/;"	l
f38	user/usertests.asm	/^     f38:	07800913          	li	s2,120$/;"	l
f3a	user/grind.asm	/^     f3a:	8082                	ret$/;"	l
f3a	user/sh.asm	/^     f3a:	4641                	li	a2,16$/;"	l
f3c	user/grind.asm	/^     f3c:	715d                	addi	sp,sp,-80$/;"	l
f3c	user/sh.asm	/^     f3c:	000ba583          	lw	a1,0(s7)$/;"	l
f3c	user/usertests.asm	/^     f3c:	1f400a13          	li	s4,500$/;"	l
f3e	user/grind.asm	/^     f3e:	ec06                	sd	ra,24(sp)$/;"	l
f4	user/echo.asm	/^  f4:	6422                	ld	s0,8(sp)$/;"	l
f4	user/forktest.asm	/^  f4:	fff5c703          	lbu	a4,-1(a1)$/;"	l
f4	user/grind.asm	/^      f4:	a819                	j	10a <go+0x96>$/;"	l
f4	user/init.asm	/^  f4:	cb91                	beqz	a5,108 <strcmp+0x1e>$/;"	l
f4	user/kill.asm	/^  f4:	6422                	ld	s0,8(sp)$/;"	l
f4	user/ln.asm	/^  f4:	1141                	addi	sp,sp,-16$/;"	l
f4	user/ls.asm	/^  f4:	9e050513          	addi	a0,a0,-1568 # ad0 <malloc+0x132>$/;"	l
f4	user/mkdir.asm	/^  f4:	1602                	slli	a2,a2,0x20$/;"	l
f4	user/rm.asm	/^  f4:	1602                	slli	a2,a2,0x20$/;"	l
f4	user/stressfs.asm	/^  f4:	0785                	addi	a5,a5,1$/;"	l
f4	user/zombie.asm	/^  f4:	f852                	sd	s4,48(sp)$/;"	l
f40	user/grind.asm	/^     f40:	e822                	sd	s0,16(sp)$/;"	l
f40	user/sh.asm	/^     f40:	855a                	mv	a0,s6$/;"	l
f40	user/usertests.asm	/^     f40:	fb240823          	sb	s2,-80(s0)$/;"	l
f42	user/grind.asm	/^     f42:	1000                	addi	s0,sp,32$/;"	l
f42	user/sh.asm	/^     f42:	d79ff0ef          	jal	cba <printint>$/;"	l
f44	user/grind.asm	/^     f44:	e010                	sd	a2,0(s0)$/;"	l
f44	user/usertests.asm	/^     f44:	41f4d71b          	sraiw	a4,s1,0x1f$/;"	l
f46	user/grind.asm	/^     f46:	e414                	sd	a3,8(s0)$/;"	l
f46	user/sh.asm	/^     f46:	2485                	addiw	s1,s1,1$/;"	l
f48	user/grind.asm	/^     f48:	e818                	sd	a4,16(s0)$/;"	l
f48	user/sh.asm	/^     f48:	8bca                	mv	s7,s2$/;"	l
f48	user/usertests.asm	/^     f48:	01a7571b          	srliw	a4,a4,0x1a$/;"	l
f4a	user/grind.asm	/^     f4a:	ec1c                	sd	a5,24(s0)$/;"	l
f4a	user/sh.asm	/^     f4a:	4981                	li	s3,0$/;"	l
f4c	user/grind.asm	/^     f4c:	03043023          	sd	a6,32(s0)$/;"	l
f4c	user/sh.asm	/^     f4c:	b585                	j	dac <vprintf+0x4a>$/;"	l
f4c	user/usertests.asm	/^     f4c:	009707bb          	addw	a5,a4,s1$/;"	l
f4e	user/sh.asm	/^     f4e:	e06a                	sd	s10,0(sp)$/;"	l
f50	user/grind.asm	/^     f50:	03143423          	sd	a7,40(s0)$/;"	l
f50	user/sh.asm	/^     f50:	008b8d13          	addi	s10,s7,8$/;"	l
f50	user/usertests.asm	/^     f50:	4067d69b          	sraiw	a3,a5,0x6$/;"	l
f54	user/grind.asm	/^     f54:	fe843423          	sd	s0,-24(s0)$/;"	l
f54	user/sh.asm	/^     f54:	000bb983          	ld	s3,0(s7)$/;"	l
f54	user/usertests.asm	/^     f54:	0306869b          	addiw	a3,a3,48$/;"	l
f58	user/grind.asm	/^     f58:	8622                	mv	a2,s0$/;"	l
f58	user/sh.asm	/^     f58:	03000593          	li	a1,48$/;"	l
f58	user/usertests.asm	/^     f58:	fad408a3          	sb	a3,-79(s0)$/;"	l
f5a	user/grind.asm	/^     f5a:	d5bff0ef          	jal	cb4 <vprintf>$/;"	l
f5c	user/sh.asm	/^     f5c:	855a                	mv	a0,s6$/;"	l
f5c	user/usertests.asm	/^     f5c:	03f7f793          	andi	a5,a5,63$/;"	l
f5e	user/grind.asm	/^     f5e:	60e2                	ld	ra,24(sp)$/;"	l
f5e	user/sh.asm	/^     f5e:	d3fff0ef          	jal	c9c <putc>$/;"	l
f6	user/cat.asm	/^  f6:	4501                	li	a0,0$/;"	l
f6	user/echo.asm	/^  f6:	0141                	addi	sp,sp,16$/;"	l
f6	user/grep.asm	/^  f6:	a011                	j	fa <match+0x3a>$/;"	l
f6	user/grind.asm	/^      f6:	20200593          	li	a1,514$/;"	l
f6	user/init.asm	/^  f6:	0005c703          	lbu	a4,0(a1)$/;"	l
f6	user/kill.asm	/^  f6:	0141                	addi	sp,sp,16$/;"	l
f6	user/ln.asm	/^  f6:	e422                	sd	s0,8(sp)$/;"	l
f6	user/mkdir.asm	/^  f6:	9201                	srli	a2,a2,0x20$/;"	l
f6	user/rm.asm	/^  f6:	9201                	srli	a2,a2,0x20$/;"	l
f6	user/sh.asm	/^      f6:	5148                	lw	a0,36(a0)$/;"	l
f6	user/stressfs.asm	/^  f6:	fff5c703          	lbu	a4,-1(a1)$/;"	l
f6	user/usertests.asm	/^      f6:	f9e50513          	addi	a0,a0,-98 # 5090 <malloc+0x144>$/;"	l
f6	user/wc.asm	/^  f6:	02099793          	slli	a5,s3,0x20$/;"	l
f6	user/zombie.asm	/^  f6:	f456                	sd	s5,40(sp)$/;"	l
f60	user/grind.asm	/^     f60:	6442                	ld	s0,16(sp)$/;"	l
f60	user/usertests.asm	/^     f60:	9f99                	subw	a5,a5,a4$/;"	l
f62	user/grind.asm	/^     f62:	6161                	addi	sp,sp,80$/;"	l
f62	user/sh.asm	/^     f62:	07800593          	li	a1,120$/;"	l
f62	user/usertests.asm	/^     f62:	0307879b          	addiw	a5,a5,48$/;"	l
f64	user/grind.asm	/^     f64:	8082                	ret$/;"	l
f66	user/grind.asm	/^     f66:	711d                	addi	sp,sp,-96$/;"	l
f66	user/sh.asm	/^     f66:	855a                	mv	a0,s6$/;"	l
f66	user/usertests.asm	/^     f66:	faf40923          	sb	a5,-78(s0)$/;"	l
f68	user/grind.asm	/^     f68:	ec06                	sd	ra,24(sp)$/;"	l
f68	user/sh.asm	/^     f68:	d35ff0ef          	jal	c9c <putc>$/;"	l
f6a	user/grind.asm	/^     f6a:	e822                	sd	s0,16(sp)$/;"	l
f6a	user/usertests.asm	/^     f6a:	fa0409a3          	sb	zero,-77(s0)$/;"	l
f6c	user/grind.asm	/^     f6c:	1000                	addi	s0,sp,32$/;"	l
f6c	user/sh.asm	/^     f6c:	4941                	li	s2,16$/;"	l
f6e	user/grind.asm	/^     f6e:	e40c                	sd	a1,8(s0)$/;"	l
f6e	user/sh.asm	/^     f6e:	00000b97          	auipc	s7,0x0$/;"	l
f6e	user/usertests.asm	/^     f6e:	fb040513          	addi	a0,s0,-80$/;"	l
f70	user/grind.asm	/^     f70:	e810                	sd	a2,16(s0)$/;"	l
f72	user/grind.asm	/^     f72:	ec14                	sd	a3,24(s0)$/;"	l
f72	user/sh.asm	/^     f72:	39ab8b93          	addi	s7,s7,922 # 1308 <digits>$/;"	l
f72	user/usertests.asm	/^     f72:	35f030ef          	jal	4ad0 <unlink>$/;"	l
f74	user/grind.asm	/^     f74:	f018                	sd	a4,32(s0)$/;"	l
f76	user/grind.asm	/^     f76:	f41c                	sd	a5,40(s0)$/;"	l
f76	user/sh.asm	/^     f76:	03c9d793          	srli	a5,s3,0x3c$/;"	l
f76	user/usertests.asm	/^     f76:	e529                	bnez	a0,fc0 <bigdir+0x122>$/;"	l
f78	user/grind.asm	/^     f78:	03043823          	sd	a6,48(s0)$/;"	l
f78	user/usertests.asm	/^     f78:	2485                	addiw	s1,s1,1$/;"	l
f7a	user/sh.asm	/^     f7a:	97de                	add	a5,a5,s7$/;"	l
f7a	user/usertests.asm	/^     f7a:	fd4493e3          	bne	s1,s4,f40 <bigdir+0xa2>$/;"	l
f7c	user/grind.asm	/^     f7c:	03143c23          	sd	a7,56(s0)$/;"	l
f7c	user/sh.asm	/^     f7c:	0007c583          	lbu	a1,0(a5)$/;"	l
f7e	user/usertests.asm	/^     f7e:	60a6                	ld	ra,72(sp)$/;"	l
f8	user/cat.asm	/^  f8:	25c000ef          	jal	354 <exit>$/;"	l
f8	user/echo.asm	/^  f8:	8082                	ret$/;"	l
f8	user/forktest.asm	/^  f8:	fee78fa3          	sb	a4,-1(a5)$/;"	l
f8	user/grep.asm	/^  f8:	4505                	li	a0,1$/;"	l
f8	user/kill.asm	/^  f8:	8082                	ret$/;"	l
f8	user/ln.asm	/^  f8:	0800                	addi	s0,sp,16$/;"	l
f8	user/ls.asm	/^  f8:	7f2000ef          	jal	8ea <printf>$/;"	l
f8	user/mkdir.asm	/^  f8:	00a60733          	add	a4,a2,a0$/;"	l
f8	user/rm.asm	/^  f8:	00a60733          	add	a4,a2,a0$/;"	l
f8	user/sh.asm	/^      f8:	32d000ef          	jal	c24 <close>$/;"	l
f8	user/zombie.asm	/^  f8:	f05a                	sd	s6,32(sp)$/;"	l
f80	user/grind.asm	/^     f80:	00840613          	addi	a2,s0,8$/;"	l
f80	user/sh.asm	/^     f80:	855a                	mv	a0,s6$/;"	l
f80	user/usertests.asm	/^     f80:	6406                	ld	s0,64(sp)$/;"	l
f82	user/sh.asm	/^     f82:	d1bff0ef          	jal	c9c <putc>$/;"	l
f82	user/usertests.asm	/^     f82:	74e2                	ld	s1,56(sp)$/;"	l
f84	user/grind.asm	/^     f84:	fec43423          	sd	a2,-24(s0)$/;"	l
f84	user/usertests.asm	/^     f84:	7942                	ld	s2,48(sp)$/;"	l
f86	user/sh.asm	/^     f86:	0992                	slli	s3,s3,0x4$/;"	l
f86	user/usertests.asm	/^     f86:	79a2                	ld	s3,40(sp)$/;"	l
f88	user/grind.asm	/^     f88:	85aa                	mv	a1,a0$/;"	l
f88	user/sh.asm	/^     f88:	397d                	addiw	s2,s2,-1$/;"	l
f88	user/usertests.asm	/^     f88:	7a02                	ld	s4,32(sp)$/;"	l
f8a	user/grind.asm	/^     f8a:	4505                	li	a0,1$/;"	l
f8a	user/sh.asm	/^     f8a:	fe0916e3          	bnez	s2,f76 <vprintf+0x214>$/;"	l
f8a	user/usertests.asm	/^     f8a:	6ae2                	ld	s5,24(sp)$/;"	l
f8c	user/grind.asm	/^     f8c:	d29ff0ef          	jal	cb4 <vprintf>$/;"	l
f8c	user/usertests.asm	/^     f8c:	6b42                	ld	s6,16(sp)$/;"	l
f8e	user/sh.asm	/^     f8e:	8bea                	mv	s7,s10$/;"	l
f8e	user/usertests.asm	/^     f8e:	6161                	addi	sp,sp,80$/;"	l
f90	user/grind.asm	/^     f90:	60e2                	ld	ra,24(sp)$/;"	l
f90	user/sh.asm	/^     f90:	4981                	li	s3,0$/;"	l
f90	user/usertests.asm	/^     f90:	8082                	ret$/;"	l
f92	user/grind.asm	/^     f92:	6442                	ld	s0,16(sp)$/;"	l
f92	user/sh.asm	/^     f92:	6d02                	ld	s10,0(sp)$/;"	l
f92	user/usertests.asm	/^     f92:	85ce                	mv	a1,s3$/;"	l
f94	user/grind.asm	/^     f94:	6125                	addi	sp,sp,96$/;"	l
f94	user/sh.asm	/^     f94:	bd21                	j	dac <vprintf+0x4a>$/;"	l
f94	user/usertests.asm	/^     f94:	00005517          	auipc	a0,0x5$/;"	l
f96	user/grind.asm	/^     f96:	8082                	ret$/;"	l
f96	user/sh.asm	/^     f96:	008b8993          	addi	s3,s7,8$/;"	l
f98	user/grind.asm	/^     f98:	1141                	addi	sp,sp,-16$/;"	l
f98	user/usertests.asm	/^     f98:	83c50513          	addi	a0,a0,-1988 # 57d0 <malloc+0x884>$/;"	l
f9a	user/grind.asm	/^     f9a:	e422                	sd	s0,8(sp)$/;"	l
f9a	user/sh.asm	/^     f9a:	000bb903          	ld	s2,0(s7)$/;"	l
f9c	user/grind.asm	/^     f9c:	0800                	addi	s0,sp,16$/;"	l
f9c	user/usertests.asm	/^     f9c:	6fd030ef          	jal	4e98 <printf>$/;"	l
f9e	user/grind.asm	/^     f9e:	ff050693          	addi	a3,a0,-16$/;"	l
f9e	user/sh.asm	/^     f9e:	00090f63          	beqz	s2,fbc <vprintf+0x25a>$/;"	l
fa	user/echo.asm	/^  fa:	4501                	li	a0,0$/;"	l
fa	user/grep.asm	/^  fa:	60e2                	ld	ra,24(sp)$/;"	l
fa	user/grind.asm	/^      fa:	00001517          	auipc	a0,0x1$/;"	l
fa	user/init.asm	/^  fa:	00f71763          	bne	a4,a5,108 <strcmp+0x1e>$/;"	l
fa	user/kill.asm	/^  fa:	1141                	addi	sp,sp,-16$/;"	l
fa	user/ln.asm	/^  fa:	00054783          	lbu	a5,0(a0)$/;"	l
fa	user/stressfs.asm	/^  fa:	fee78fa3          	sb	a4,-1(a5)$/;"	l
fa	user/usertests.asm	/^      fa:	59f040ef          	jal	4e98 <printf>$/;"	l
fa	user/wc.asm	/^  fa:	01d7d993          	srli	s3,a5,0x1d$/;"	l
fa	user/zombie.asm	/^  fa:	ec5e                	sd	s7,24(sp)$/;"	l
fa0	user/usertests.asm	/^     fa0:	4505                	li	a0,1$/;"	l
fa2	user/grind.asm	/^     fa2:	00001797          	auipc	a5,0x1$/;"	l
fa2	user/sh.asm	/^     fa2:	00094583          	lbu	a1,0(s2)$/;"	l
fa2	user/usertests.asm	/^     fa2:	2df030ef          	jal	4a80 <exit>$/;"	l
fa6	user/grind.asm	/^     fa6:	06e7b783          	ld	a5,110(a5) # 2010 <freep>$/;"	l
fa6	user/sh.asm	/^     fa6:	c195                	beqz	a1,fca <vprintf+0x268>$/;"	l
fa6	user/usertests.asm	/^     fa6:	fb040693          	addi	a3,s0,-80$/;"	l
fa8	user/sh.asm	/^     fa8:	855a                	mv	a0,s6$/;"	l
faa	user/grind.asm	/^     faa:	a02d                	j	fd4 <free+0x3c>$/;"	l
faa	user/sh.asm	/^     faa:	cf3ff0ef          	jal	c9c <putc>$/;"	l
faa	user/usertests.asm	/^     faa:	864a                	mv	a2,s2$/;"	l
fac	user/grind.asm	/^     fac:	4618                	lw	a4,8(a2)$/;"	l
fac	user/usertests.asm	/^     fac:	85ce                	mv	a1,s3$/;"	l
fae	user/grind.asm	/^     fae:	9f2d                	addw	a4,a4,a1$/;"	l
fae	user/sh.asm	/^     fae:	0905                	addi	s2,s2,1$/;"	l
fae	user/usertests.asm	/^     fae:	00005517          	auipc	a0,0x5$/;"	l
fb0	user/grind.asm	/^     fb0:	fee52c23          	sw	a4,-8(a0)$/;"	l
fb0	user/sh.asm	/^     fb0:	00094583          	lbu	a1,0(s2)$/;"	l
fb2	user/usertests.asm	/^     fb2:	84250513          	addi	a0,a0,-1982 # 57f0 <malloc+0x8a4>$/;"	l
fb4	user/grind.asm	/^     fb4:	6398                	ld	a4,0(a5)$/;"	l
fb4	user/sh.asm	/^     fb4:	f9f5                	bnez	a1,fa8 <vprintf+0x246>$/;"	l
fb6	user/grind.asm	/^     fb6:	6310                	ld	a2,0(a4)$/;"	l
fb6	user/sh.asm	/^     fb6:	8bce                	mv	s7,s3$/;"	l
fb6	user/usertests.asm	/^     fb6:	6e3030ef          	jal	4e98 <printf>$/;"	l
fb8	user/grind.asm	/^     fb8:	a83d                	j	ff6 <free+0x5e>$/;"	l
fb8	user/sh.asm	/^     fb8:	4981                	li	s3,0$/;"	l
fba	user/grind.asm	/^     fba:	ff852703          	lw	a4,-8(a0)$/;"	l
fba	user/sh.asm	/^     fba:	bbcd                	j	dac <vprintf+0x4a>$/;"	l
fba	user/usertests.asm	/^     fba:	4505                	li	a0,1$/;"	l
fbc	user/sh.asm	/^     fbc:	00000917          	auipc	s2,0x0$/;"	l
fbc	user/usertests.asm	/^     fbc:	2c5030ef          	jal	4a80 <exit>$/;"	l
fbe	user/grind.asm	/^     fbe:	9f31                	addw	a4,a4,a2$/;"	l
fc	user/cat.asm	/^  fc:	1141                	addi	sp,sp,-16$/;"	l
fc	user/echo.asm	/^  fc:	bfe5                	j	f4 <strlen+0x20>$/;"	l
fc	user/forktest.asm	/^  fc:	fb75                	bnez	a4,f0 <strcpy+0x8>$/;"	l
fc	user/grep.asm	/^  fc:	6442                	ld	s0,16(sp)$/;"	l
fc	user/kill.asm	/^  fc:	e422                	sd	s0,8(sp)$/;"	l
fc	user/ls.asm	/^  fc:	8526                	mv	a0,s1$/;"	l
fc	user/mkdir.asm	/^  fc:	00b78023          	sb	a1,0(a5)$/;"	l
fc	user/rm.asm	/^  fc:	00b78023          	sb	a1,0(a5)$/;"	l
fc	user/sh.asm	/^      fc:	508c                	lw	a1,32(s1)$/;"	l
fc	user/zombie.asm	/^  fc:	1080                	addi	s0,sp,96$/;"	l
fc0	user/grind.asm	/^     fc0:	c798                	sw	a4,8(a5)$/;"	l
fc0	user/sh.asm	/^     fc0:	31490913          	addi	s2,s2,788 # 12d0 <malloc+0x208>$/;"	l
fc0	user/usertests.asm	/^     fc0:	85ce                	mv	a1,s3$/;"	l
fc2	user/grind.asm	/^     fc2:	ff053683          	ld	a3,-16(a0)$/;"	l
fc2	user/usertests.asm	/^     fc2:	00005517          	auipc	a0,0x5$/;"	l
fc4	user/sh.asm	/^     fc4:	02800593          	li	a1,40$/;"	l
fc6	user/grind.asm	/^     fc6:	a091                	j	100a <free+0x72>$/;"	l
fc6	user/usertests.asm	/^     fc6:	85650513          	addi	a0,a0,-1962 # 5818 <malloc+0x8cc>$/;"	l
fc8	user/grind.asm	/^     fc8:	6398                	ld	a4,0(a5)$/;"	l
fc8	user/sh.asm	/^     fc8:	b7c5                	j	fa8 <vprintf+0x246>$/;"	l
fca	user/grind.asm	/^     fca:	00e7e463          	bltu	a5,a4,fd2 <free+0x3a>$/;"	l
fca	user/sh.asm	/^     fca:	8bce                	mv	s7,s3$/;"	l
fca	user/usertests.asm	/^     fca:	6cf030ef          	jal	4e98 <printf>$/;"	l
fcc	user/sh.asm	/^     fcc:	4981                	li	s3,0$/;"	l
fce	user/grind.asm	/^     fce:	00e6ea63          	bltu	a3,a4,fe2 <free+0x4a>$/;"	l
fce	user/sh.asm	/^     fce:	bbf9                	j	dac <vprintf+0x4a>$/;"	l
fce	user/usertests.asm	/^     fce:	4505                	li	a0,1$/;"	l
fd	user/cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/grind.asm	/^        fd = open("x", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^      fd = open("\/.\/grindir\/.\/..\/b", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^      fd = open("\/grindir\/..\/a", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/sh.c	/^  int fd;$/;"	m	struct:redircmd	typeref:typename:int	file:
fd	user/stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	user/stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	user/usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open("truncfile", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	user/usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^    fd = open("echo-ok", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	user/usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("README", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigfile.dat", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigfile.dat", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("echo-ok", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("rwsbrk", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("sbrk", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open(p, O_RDWR);$/;"	d
fd	user/wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd0	kernel/kernel.asm	/^  fd0 = -1;$/;"	d
fd0	user/sh.asm	/^     fd0:	64a6                	ld	s1,72(sp)$/;"	l
fd0	user/usertests.asm	/^     fd0:	2b1030ef          	jal	4a80 <exit>$/;"	l
fd1	user/usertests.asm	/^  fd1 = open("truncfile", O_WRONLY|O_TRUNC);$/;"	d
fd1	user/usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd2	user/grind.asm	/^     fd2:	87ba                	mv	a5,a4$/;"	l
fd2	user/sh.asm	/^     fd2:	79e2                	ld	s3,56(sp)$/;"	l
fd4	user/grind.asm	/^     fd4:	fed7fae3          	bgeu	a5,a3,fc8 <free+0x30>$/;"	l
fd4	user/sh.asm	/^     fd4:	7a42                	ld	s4,48(sp)$/;"	l
fd4	user/usertests.asm	/^     fd4:	7179                	addi	sp,sp,-48$/;"	l
fd6	user/sh.asm	/^     fd6:	7aa2                	ld	s5,40(sp)$/;"	l
fd6	user/usertests.asm	/^     fd6:	f406                	sd	ra,40(sp)$/;"	l
fd8	user/grind.asm	/^     fd8:	6398                	ld	a4,0(a5)$/;"	l
fd8	user/sh.asm	/^     fd8:	7b02                	ld	s6,32(sp)$/;"	l
fd8	user/usertests.asm	/^     fd8:	f022                	sd	s0,32(sp)$/;"	l
fda	user/grind.asm	/^     fda:	00e6e463          	bltu	a3,a4,fe2 <free+0x4a>$/;"	l
fda	user/sh.asm	/^     fda:	6be2                	ld	s7,24(sp)$/;"	l
fda	user/usertests.asm	/^     fda:	ec26                	sd	s1,24(sp)$/;"	l
fdalloc	kernel/sysfile.c	/^fdalloc(struct file *f)$/;"	f	typeref:typename:int	file:
fdc	user/sh.asm	/^     fdc:	6c42                	ld	s8,16(sp)$/;"	l
fdc	user/usertests.asm	/^     fdc:	1800                	addi	s0,sp,48$/;"	l
fde	user/grind.asm	/^     fde:	fee7eae3          	bltu	a5,a4,fd2 <free+0x3a>$/;"	l
fde	user/sh.asm	/^     fde:	6ca2                	ld	s9,8(sp)$/;"	l
fde	user/usertests.asm	/^     fde:	fc043c23          	sd	zero,-40(s0)$/;"	l
fe	user/cat.asm	/^  fe:	e422                	sd	s0,8(sp)$/;"	l
fe	user/echo.asm	/^  fe:	1141                	addi	sp,sp,-16$/;"	l
fe	user/forktest.asm	/^  fe:	6422                	ld	s0,8(sp)$/;"	l
fe	user/grep.asm	/^  fe:	64a2                	ld	s1,8(sp)$/;"	l
fe	user/grind.asm	/^      fe:	06e50513          	addi	a0,a0,110 # 1168 <malloc+0x14e>$/;"	l
fe	user/init.asm	/^  fe:	0505                	addi	a0,a0,1$/;"	l
fe	user/kill.asm	/^  fe:	0800                	addi	s0,sp,16$/;"	l
fe	user/ln.asm	/^  fe:	cb99                	beqz	a5,114 <strchr+0x20>$/;"	l
fe	user/ls.asm	/^  fe:	3fc000ef          	jal	4fa <close>$/;"	l
fe	user/sh.asm	/^      fe:	6888                	ld	a0,16(s1)$/;"	l
fe	user/stressfs.asm	/^  fe:	fb75                	bnez	a4,f2 <strcpy+0x8>$/;"	l
fe	user/usertests.asm	/^      fe:	4505                	li	a0,1$/;"	l
fe	user/wc.asm	/^  fe:	05c1                	addi	a1,a1,16$/;"	l
fe	user/zombie.asm	/^  fe:	8baa                	mv	s7,a0$/;"	l
fe0	user/sh.asm	/^     fe0:	60e6                	ld	ra,88(sp)$/;"	l
fe2	user/grind.asm	/^     fe2:	ff852583          	lw	a1,-8(a0)$/;"	l
fe2	user/sh.asm	/^     fe2:	6446                	ld	s0,80(sp)$/;"	l
fe2	user/usertests.asm	/^     fe2:	00008497          	auipc	s1,0x8$/;"	l
fe4	user/sh.asm	/^     fe4:	6906                	ld	s2,64(sp)$/;"	l
fe6	user/grind.asm	/^     fe6:	6390                	ld	a2,0(a5)$/;"	l
fe6	user/sh.asm	/^     fe6:	6125                	addi	sp,sp,96$/;"	l
fe6	user/usertests.asm	/^     fe6:	01e48493          	addi	s1,s1,30 # 9000 <big>$/;"	l
fe8	user/grind.asm	/^     fe8:	02059813          	slli	a6,a1,0x20$/;"	l
fe8	user/sh.asm	/^     fe8:	8082                	ret$/;"	l
fea	user/sh.asm	/^     fea:	715d                	addi	sp,sp,-80$/;"	l
fea	user/usertests.asm	/^     fea:	fd840593          	addi	a1,s0,-40$/;"	l
fec	user/grind.asm	/^     fec:	01c85713          	srli	a4,a6,0x1c$/;"	l
fec	user/sh.asm	/^     fec:	ec06                	sd	ra,24(sp)$/;"	l
fee	user/sh.asm	/^     fee:	e822                	sd	s0,16(sp)$/;"	l
fee	user/usertests.asm	/^     fee:	6088                	ld	a0,0(s1)$/;"	l
fetchaddr	kernel/syscall.c	/^fetchaddr(uint64 addr, uint64 *ip)$/;"	f	typeref:typename:int
fetchstr	kernel/syscall.c	/^fetchstr(uint64 addr, char *buf, int max)$/;"	f	typeref:typename:int
ff	kernel/kernel.asm	/^  ff = *f;$/;"	d
ff0	user/grind.asm	/^     ff0:	9736                	add	a4,a4,a3$/;"	l
ff0	user/sh.asm	/^     ff0:	1000                	addi	s0,sp,32$/;"	l
ff0	user/usertests.asm	/^     ff0:	2c9030ef          	jal	4ab8 <exec>$/;"	l
ff2	user/grind.asm	/^     ff2:	fae60de3          	beq	a2,a4,fac <free+0x14>$/;"	l
ff2	user/sh.asm	/^     ff2:	e010                	sd	a2,0(s0)$/;"	l
ff4	user/sh.asm	/^     ff4:	e414                	sd	a3,8(s0)$/;"	l
ff4	user/usertests.asm	/^     ff4:	6088                	ld	a0,0(s1)$/;"	l
ff6	user/grind.asm	/^     ff6:	fec53823          	sd	a2,-16(a0)$/;"	l
ff6	user/sh.asm	/^     ff6:	e818                	sd	a4,16(s0)$/;"	l
ff6	user/usertests.asm	/^     ff6:	29b030ef          	jal	4a90 <pipe>$/;"	l
ff8	user/sh.asm	/^     ff8:	ec1c                	sd	a5,24(s0)$/;"	l
ffa	user/grind.asm	/^     ffa:	4790                	lw	a2,8(a5)$/;"	l
ffa	user/sh.asm	/^     ffa:	03043023          	sd	a6,32(s0)$/;"	l
ffa	user/usertests.asm	/^     ffa:	4501                	li	a0,0$/;"	l
ffc	user/grind.asm	/^     ffc:	02061593          	slli	a1,a2,0x20$/;"	l
ffc	user/usertests.asm	/^     ffc:	285030ef          	jal	4a80 <exit>$/;"	l
ffe	user/sh.asm	/^     ffe:	03143423          	sd	a7,40(s0)$/;"	l
file	kernel/file.c	/^  struct file file[NFILE];$/;"	m	struct:__anonc1f1ee260108	typeref:struct:file[]	file:
file	kernel/file.h	/^struct file {$/;"	s
file	user/sh.c	/^  char *file;$/;"	m	struct:redircmd	typeref:typename:char *	file:
filealloc	kernel/file.c	/^filealloc(void)$/;"	f	typeref:struct:file *
fileclose	kernel/file.c	/^fileclose(struct file *f)$/;"	f	typeref:typename:void
filedup	kernel/file.c	/^filedup(struct file *f)$/;"	f	typeref:struct:file *
fileinit	kernel/file.c	/^fileinit(void)$/;"	f	typeref:typename:void
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:QEMU
fileread	kernel/file.c	/^fileread(struct file *f, uint64 addr, int n)$/;"	f	typeref:typename:int
filestat	kernel/file.c	/^filestat(struct file *f, uint64 addr)$/;"	f	typeref:typename:int
filesz	kernel/elf.h	/^  uint64 filesz;$/;"	m	struct:proghdr	typeref:typename:uint64
filewrite	kernel/file.c	/^filewrite(struct file *f, uint64 addr, int n)$/;"	f	typeref:typename:int
first	kernel/kernel.asm	/^    first = 0;$/;"	d
flags	kernel/elf.h	/^  uint flags;$/;"	m	struct:elfhdr	typeref:typename:uint
flags	kernel/elf.h	/^  uint32 flags;$/;"	m	struct:proghdr	typeref:typename:uint32
flags	kernel/kernel.asm	/^    flags = PTE_FLAGS(*pte);$/;"	d
flags	kernel/virtio.h	/^  uint16 flags; \/\/ always zero$/;"	m	struct:virtq_avail	typeref:typename:uint16
flags	kernel/virtio.h	/^  uint16 flags; \/\/ always zero$/;"	m	struct:virtq_used	typeref:typename:uint16
flags	kernel/virtio.h	/^  uint16 flags;$/;"	m	struct:virtq_desc	typeref:typename:uint16
flags2perm	kernel/exec.c	/^int flags2perm(int flags)$/;"	f	typeref:typename:int
fmtname	user/ls.c	/^fmtname(char *path)$/;"	f	typeref:typename:char *
fname	user/usertests.asm	/^    fname = names[i];$/;"	d
fname	user/usertests.asm	/^    fname = names[pi];$/;"	d
fork	kernel/proc.c	/^fork(void)$/;"	f	typeref:typename:int
fork	user/cat.asm	/^fork:$/;"	l
fork	user/echo.asm	/^fork:$/;"	l
fork	user/forktest.asm	/^fork:$/;"	l
fork	user/grep.asm	/^fork:$/;"	l
fork	user/grind.asm	/^fork:$/;"	l
fork	user/init.asm	/^fork:$/;"	l
fork	user/kill.asm	/^fork:$/;"	l
fork	user/ln.asm	/^fork:$/;"	l
fork	user/ls.asm	/^fork:$/;"	l
fork	user/mkdir.asm	/^fork:$/;"	l
fork	user/rm.asm	/^fork:$/;"	l
fork	user/sh.asm	/^fork:$/;"	l
fork	user/stressfs.asm	/^fork:$/;"	l
fork	user/usertests.asm	/^fork:$/;"	l
fork	user/usys.S	/^fork:$/;"	l
fork	user/wc.asm	/^fork:$/;"	l
fork	user/zombie.asm	/^fork:$/;"	l
fork1	user/sh.c	/^fork1(void)$/;"	f	typeref:typename:int
forkfork	user/usertests.c	/^forkfork(char *s)$/;"	f	typeref:typename:void
forkforkfork	user/usertests.c	/^forkforkfork(char *s)$/;"	f	typeref:typename:void
forkret	kernel/proc.c	/^forkret(void)$/;"	f	typeref:typename:void
forktest	user/forktest.c	/^forktest(void)$/;"	f	typeref:typename:void
forktest	user/usertests.c	/^forktest(char *s)$/;"	f	typeref:typename:void
found	kernel/kernel.asm	/^        found = 1;$/;"	d
fourfiles	user/usertests.c	/^fourfiles(char *s)$/;"	f	typeref:typename:void
fourteen	user/usertests.c	/^fourteen(char *s)$/;"	f	typeref:typename:void
fprintf	user/printf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f	typeref:typename:void
free	kernel/virtio_disk.c	/^  char free[NUM];  \/\/ is a descriptor free?$/;"	m	struct:disk	typeref:typename:char[]	file:
free	user/umalloc.c	/^free(void *ap)$/;"	f	typeref:typename:void
free_chain	kernel/virtio_disk.c	/^free_chain(int i)$/;"	f	typeref:typename:void	file:
free_desc	kernel/virtio_disk.c	/^free_desc(int i)$/;"	f	typeref:typename:void	file:
freeblock	mkfs/mkfs.c	/^uint freeblock;$/;"	v	typeref:typename:uint
freeinode	mkfs/mkfs.c	/^uint freeinode = 1;$/;"	v	typeref:typename:uint
freelist	kernel/kalloc.c	/^  struct run *freelist;$/;"	m	struct:__anon3c3fa87c0108	typeref:struct:run *	file:
freep	user/cat.asm	/^      freep = prevp;$/;"	d
freep	user/cat.asm	/^  freep = p;$/;"	d
freep	user/echo.asm	/^      freep = prevp;$/;"	d
freep	user/echo.asm	/^  freep = p;$/;"	d
freep	user/grep.asm	/^      freep = prevp;$/;"	d
freep	user/grep.asm	/^  freep = p;$/;"	d
freep	user/grind.asm	/^      freep = prevp;$/;"	d
freep	user/grind.asm	/^  freep = p;$/;"	d
freep	user/init.asm	/^      freep = prevp;$/;"	d
freep	user/init.asm	/^  freep = p;$/;"	d
freep	user/kill.asm	/^      freep = prevp;$/;"	d
freep	user/kill.asm	/^  freep = p;$/;"	d
freep	user/ln.asm	/^      freep = prevp;$/;"	d
freep	user/ln.asm	/^  freep = p;$/;"	d
freep	user/ls.asm	/^      freep = prevp;$/;"	d
freep	user/ls.asm	/^  freep = p;$/;"	d
freep	user/mkdir.asm	/^      freep = prevp;$/;"	d
freep	user/mkdir.asm	/^  freep = p;$/;"	d
freep	user/rm.asm	/^      freep = prevp;$/;"	d
freep	user/rm.asm	/^  freep = p;$/;"	d
freep	user/sh.asm	/^      freep = prevp;$/;"	d
freep	user/sh.asm	/^  freep = p;$/;"	d
freep	user/stressfs.asm	/^      freep = prevp;$/;"	d
freep	user/stressfs.asm	/^  freep = p;$/;"	d
freep	user/umalloc.c	/^static Header *freep;$/;"	v	typeref:typename:Header *	file:
freep	user/usertests.asm	/^      freep = prevp;$/;"	d
freep	user/usertests.asm	/^  freep = p;$/;"	d
freep	user/wc.asm	/^      freep = prevp;$/;"	d
freep	user/wc.asm	/^  freep = p;$/;"	d
freep	user/zombie.asm	/^      freep = prevp;$/;"	d
freep	user/zombie.asm	/^  freep = p;$/;"	d
freeproc	kernel/proc.c	/^freeproc(struct proc *p)$/;"	f	typeref:typename:void	file:
freerange	kernel/kalloc.c	/^freerange(void *pa_start, void *pa_end)$/;"	f	typeref:typename:void
freewalk	kernel/vm.c	/^freewalk(pagetable_t pagetable)$/;"	f	typeref:typename:void
fs.img	Makefile	/^fs.img: mkfs\/mkfs README $(UEXTRA) $(UPROGS)$/;"	t
fsfd	mkfs/mkfs.c	/^int fsfd;$/;"	v	typeref:typename:int
fsfull	user/usertests.c	/^fsfull()$/;"	f	typeref:typename:void
fsinit	kernel/fs.c	/^fsinit(int dev) {$/;"	f	typeref:typename:void
fstat	user/cat.asm	/^fstat:$/;"	l
fstat	user/echo.asm	/^fstat:$/;"	l
fstat	user/forktest.asm	/^fstat:$/;"	l
fstat	user/grep.asm	/^fstat:$/;"	l
fstat	user/grind.asm	/^fstat:$/;"	l
fstat	user/init.asm	/^fstat:$/;"	l
fstat	user/kill.asm	/^fstat:$/;"	l
fstat	user/ln.asm	/^fstat:$/;"	l
fstat	user/ls.asm	/^fstat:$/;"	l
fstat	user/mkdir.asm	/^fstat:$/;"	l
fstat	user/rm.asm	/^fstat:$/;"	l
fstat	user/sh.asm	/^fstat:$/;"	l
fstat	user/stressfs.asm	/^fstat:$/;"	l
fstat	user/usertests.asm	/^fstat:$/;"	l
fstat	user/usys.S	/^fstat:$/;"	l
fstat	user/wc.asm	/^fstat:$/;"	l
fstat	user/zombie.asm	/^fstat:$/;"	l
ftable	kernel/file.c	/^} ftable;$/;"	v	typeref:struct:__anonc1f1ee260108
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	m	class:QEMU
getcmd	user/sh.c	/^getcmd(char *buf, int nbuf)$/;"	f	typeref:typename:int
getpid	user/cat.asm	/^getpid:$/;"	l
getpid	user/echo.asm	/^getpid:$/;"	l
getpid	user/forktest.asm	/^getpid:$/;"	l
getpid	user/grep.asm	/^getpid:$/;"	l
getpid	user/grind.asm	/^getpid:$/;"	l
getpid	user/init.asm	/^getpid:$/;"	l
getpid	user/kill.asm	/^getpid:$/;"	l
getpid	user/ln.asm	/^getpid:$/;"	l
getpid	user/ls.asm	/^getpid:$/;"	l
getpid	user/mkdir.asm	/^getpid:$/;"	l
getpid	user/rm.asm	/^getpid:$/;"	l
getpid	user/sh.asm	/^getpid:$/;"	l
getpid	user/stressfs.asm	/^getpid:$/;"	l
getpid	user/usertests.asm	/^getpid:$/;"	l
getpid	user/usys.S	/^getpid:$/;"	l
getpid	user/wc.asm	/^getpid:$/;"	l
getpid	user/zombie.asm	/^getpid:$/;"	l
gets	user/ulib.c	/^gets(char *buf, int max)$/;"	f	typeref:typename:char *
gettoken	user/sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f	typeref:typename:int
go	user/grind.c	/^go(int which_child)$/;"	f	typeref:typename:void
gp	kernel/proc.h	/^  \/*  56 *\/ uint64 gp;$/;"	m	struct:trapframe	typeref:typename:uint64
grade	Makefile	/^grade:$/;"	t
grep	user/grep.c	/^grep(char *pattern, int fd)$/;"	f	typeref:typename:void
growproc	kernel/proc.c	/^growproc(int n)$/;"	f	typeref:typename:int
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:shell_script.setup_call_on_line	file:
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:QEMU
havekids	kernel/kernel.asm	/^        havekids = 1;$/;"	d
havekids	kernel/kernel.asm	/^    havekids = 0;$/;"	d
head	kernel/bio.c	/^  struct buf head;$/;"	m	struct:__anon6a7165400108	typeref:struct:buf	file:
header	user/umalloc.c	/^union header {$/;"	u	file:
hi	user/grind.asm	/^    hi = x \/ 127773;$/;"	d
holding	kernel/spinlock.c	/^holding(struct spinlock *lk)$/;"	f	typeref:typename:int
holdingsleep	kernel/sleeplock.c	/^holdingsleep(struct sleeplock *lk)$/;"	f	typeref:typename:int
i	kernel/kernel.asm	/^  i = 0;$/;"	d
i	user/cat.asm	/^  i = 0;$/;"	d
i	user/echo.asm	/^  i = 0;$/;"	d
i	user/grep.asm	/^  i = 0;$/;"	d
i	user/grind.asm	/^  i = 0;$/;"	d
i	user/init.asm	/^  i = 0;$/;"	d
i	user/kill.asm	/^  i = 0;$/;"	d
i	user/ln.asm	/^  i = 0;$/;"	d
i	user/ls.asm	/^  i = 0;$/;"	d
i	user/mkdir.asm	/^  i = 0;$/;"	d
i	user/rm.asm	/^  i = 0;$/;"	d
i	user/sh.asm	/^  i = 0;$/;"	d
i	user/stressfs.asm	/^  i = 0;$/;"	d
i	user/usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	user/usertests.asm	/^    i = read(fd, buf, BSIZE);$/;"	d
i	user/usertests.asm	/^  i = 0;$/;"	d
i	user/usertests.asm	/^  i = read(fd, buf, N*SZ*2);$/;"	d
i	user/wc.asm	/^  i = 0;$/;"	d
i	user/zombie.asm	/^  i = 0;$/;"	d
ialloc	kernel/fs.c	/^ialloc(uint dev, short type)$/;"	f	typeref:struct:inode *
ialloc	mkfs/mkfs.c	/^ialloc(ushort type)$/;"	f	typeref:typename:uint
iappend	mkfs/mkfs.c	/^iappend(uint inum, void *xp, int n)$/;"	f	typeref:typename:void
id	kernel/virtio.h	/^  uint32 id;   \/\/ index of start of completed descriptor chain$/;"	m	struct:virtq_used_elem	typeref:typename:uint32
idup	kernel/fs.c	/^idup(struct inode *ip)$/;"	f	typeref:struct:inode *
idx	kernel/virtio.h	/^  uint16 idx;   \/\/ device increments when it adds a ring[] entry$/;"	m	struct:virtq_used	typeref:typename:uint16
idx	kernel/virtio.h	/^  uint16 idx;   \/\/ driver will write ring[idx] next$/;"	m	struct:virtq_avail	typeref:typename:uint16
iget	kernel/fs.c	/^iget(uint dev, uint inum)$/;"	f	typeref:struct:inode *	file:
iinit	kernel/fs.c	/^iinit()$/;"	f	typeref:typename:void
ilock	kernel/fs.c	/^ilock(struct inode *ip)$/;"	f	typeref:typename:void
info	kernel/virtio_disk.c	/^  } info[NUM];$/;"	m	struct:disk	typeref:struct:disk::__anon0ecc7a2d0108[]	file:
init	user/initcode.S	/^init:$/;"	l
initcode	kernel/proc.c	/^uchar initcode[] = {$/;"	v	typeref:typename:uchar[]
initlock	kernel/spinlock.c	/^initlock(struct spinlock *lk, char *name)$/;"	f	typeref:typename:void
initlog	kernel/log.c	/^initlog(int dev, struct superblock *sb)$/;"	f	typeref:typename:void
initproc	kernel/kernel.asm	/^  initproc = p;$/;"	d
initproc	kernel/proc.c	/^struct proc *initproc;$/;"	v	typeref:struct:proc *
initsleeplock	kernel/sleeplock.c	/^initsleeplock(struct sleeplock *lk, char *name)$/;"	f	typeref:typename:void
ino	kernel/stat.h	/^  uint ino;    \/\/ Inode number$/;"	m	struct:stat	typeref:typename:uint
inode	kernel/file.h	/^struct inode {$/;"	s
inode	kernel/fs.c	/^  struct inode inode[NINODE];$/;"	m	struct:__anon033c111f0108	typeref:struct:inode[]	file:
inodestart	kernel/fs.h	/^  uint inodestart;   \/\/ Block number of first inode block$/;"	m	struct:superblock	typeref:typename:uint
install_trans	kernel/log.c	/^install_trans(int recovering)$/;"	f	typeref:typename:void	file:
int	kernel/kernel.asm	/^int flags2perm(int flags)$/;"	l
int	kernel/kernel.asm	/^int$/;"	l
int	user/cat.asm	/^int$/;"	l
int	user/echo.asm	/^int$/;"	l
int	user/forktest.asm	/^int$/;"	l
int	user/grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	user/grep.asm	/^int$/;"	l
int	user/grind.asm	/^int$/;"	l
int	user/init.asm	/^int$/;"	l
int	user/kill.asm	/^int$/;"	l
int	user/ln.asm	/^int$/;"	l
int	user/ls.asm	/^int$/;"	l
int	user/mkdir.asm	/^int$/;"	l
int	user/rm.asm	/^int$/;"	l
int	user/sh.asm	/^int$/;"	l
int	user/stressfs.asm	/^int$/;"	l
int	user/usertests.asm	/^int$/;"	l
int	user/wc.asm	/^int$/;"	l
int	user/zombie.asm	/^int$/;"	l
intena	kernel/kernel.asm	/^  intena = mycpu()->intena;$/;"	d
intena	kernel/proc.h	/^  int intena;                 \/\/ Were interrupts enabled before push_off()?$/;"	m	struct:cpu	typeref:typename:int
intr_get	kernel/riscv.h	/^intr_get()$/;"	f	typeref:typename:int
intr_off	kernel/riscv.h	/^intr_off()$/;"	f	typeref:typename:void
intr_on	kernel/riscv.h	/^intr_on()$/;"	f	typeref:typename:void
inum	kernel/file.h	/^  uint inum;          \/\/ Inode number$/;"	m	struct:inode	typeref:typename:uint
inum	kernel/fs.h	/^  ushort inum;$/;"	m	struct:dirent	typeref:typename:ushort
inum	kernel/kernel.asm	/^      inum = de.inum;$/;"	d
inum	user/usertests.c	/^    ushort inum;$/;"	m	struct:concreate::__anon2469bfd60b08	typeref:typename:ushort	file:
inword	user/wc.asm	/^        inword = 0;$/;"	d
inword	user/wc.asm	/^        inword = 1;$/;"	d
inword	user/wc.asm	/^  inword = 0;$/;"	d
ip	kernel/file.h	/^  struct inode *ip;  \/\/ FD_INODE and FD_DEVICE$/;"	m	struct:file	typeref:struct:inode *
ip	kernel/kernel.asm	/^    ip = create(path, T_FILE, 0, 0);$/;"	d
ip	kernel/kernel.asm	/^    ip = idup(myproc()->cwd);$/;"	d
ip	kernel/kernel.asm	/^    ip = iget(ROOTDEV, ROOTINO);$/;"	d
ip	kernel/kernel.asm	/^    ip = next;$/;"	d
ip	kernel/kernel.asm	/^  ip = 0;$/;"	d
iput	kernel/fs.c	/^iput(struct inode *ip)$/;"	f	typeref:typename:void
iputtest	user/usertests.c	/^iputtest(char *s)$/;"	f	typeref:typename:void
iref	user/usertests.c	/^iref(char *s)$/;"	f	typeref:typename:void
isdirempty	kernel/sysfile.c	/^isdirempty(struct inode *dp)$/;"	f	typeref:typename:int	file:
itable	kernel/fs.c	/^} itable;$/;"	v	typeref:struct:__anon033c111f0108
iter	user/grind.c	/^iter()$/;"	f	typeref:typename:void
itrunc	kernel/fs.c	/^itrunc(struct inode *ip)$/;"	f	typeref:typename:void
iunlock	kernel/fs.c	/^iunlock(struct inode *ip)$/;"	f	typeref:typename:void
iunlockput	kernel/fs.c	/^iunlockput(struct inode *ip)$/;"	f	typeref:typename:void
iupdate	kernel/fs.c	/^iupdate(struct inode *ip)$/;"	f	typeref:typename:void
justone	user/usertests.asm	/^    justone = argv[1];$/;"	d
k	kernel/kernel.asm	/^  k = p->killed;$/;"	d
kalloc	kernel/kalloc.c	/^kalloc(void)$/;"	f	typeref:typename:void *
kernel_hartid	kernel/proc.h	/^  \/*  32 *\/ uint64 kernel_hartid; \/\/ saved kernel tp$/;"	m	struct:trapframe	typeref:typename:uint64
kernel_pagetable	kernel/kernel.asm	/^  kernel_pagetable = kvmmake();$/;"	d
kernel_pagetable	kernel/vm.c	/^pagetable_t kernel_pagetable;$/;"	v	typeref:typename:pagetable_t
kernel_satp	kernel/proc.h	/^  \/*   0 *\/ uint64 kernel_satp;   \/\/ kernel page table$/;"	m	struct:trapframe	typeref:typename:uint64
kernel_sp	kernel/proc.h	/^  \/*   8 *\/ uint64 kernel_sp;     \/\/ top of process's kernel stack$/;"	m	struct:trapframe	typeref:typename:uint64
kernel_trap	kernel/proc.h	/^  \/*  16 *\/ uint64 kernel_trap;   \/\/ usertrap()$/;"	m	struct:trapframe	typeref:typename:uint64
kerneltrap	kernel/trap.c	/^kerneltrap()$/;"	f	typeref:typename:void
kernelvec	kernel/kernelvec.S	/^kernelvec:$/;"	l
kernmem	user/usertests.c	/^kernmem(char *s)$/;"	f	typeref:typename:void
kfree	kernel/kalloc.c	/^kfree(void *pa)$/;"	f	typeref:typename:void
kill	gradelib.py	/^    def kill(self):$/;"	m	class:QEMU
kill	kernel/proc.c	/^kill(int pid)$/;"	f	typeref:typename:int
kill	user/cat.asm	/^kill:$/;"	l
kill	user/echo.asm	/^kill:$/;"	l
kill	user/forktest.asm	/^kill:$/;"	l
kill	user/grep.asm	/^kill:$/;"	l
kill	user/grind.asm	/^kill:$/;"	l
kill	user/init.asm	/^kill:$/;"	l
kill	user/kill.asm	/^kill:$/;"	l
kill	user/ln.asm	/^kill:$/;"	l
kill	user/ls.asm	/^kill:$/;"	l
kill	user/mkdir.asm	/^kill:$/;"	l
kill	user/rm.asm	/^kill:$/;"	l
kill	user/sh.asm	/^kill:$/;"	l
kill	user/stressfs.asm	/^kill:$/;"	l
kill	user/usertests.asm	/^kill:$/;"	l
kill	user/usys.S	/^kill:$/;"	l
kill	user/wc.asm	/^kill:$/;"	l
kill	user/zombie.asm	/^kill:$/;"	l
killed	kernel/proc.c	/^killed(struct proc *p)$/;"	f	typeref:typename:int
killed	kernel/proc.h	/^  int killed;                  \/\/ If non-zero, have been killed$/;"	m	struct:proc	typeref:typename:int
killstatus	user/usertests.c	/^killstatus(char *s)$/;"	f	typeref:typename:void
kinit	kernel/kalloc.c	/^kinit()$/;"	f	typeref:typename:void
kmem	kernel/kalloc.c	/^} kmem;$/;"	v	typeref:struct:__anon3c3fa87c0108
kpgtbl	kernel/kernel.asm	/^  kpgtbl = (pagetable_t) kalloc();$/;"	d
kstack	kernel/proc.h	/^  uint64 kstack;               \/\/ Virtual address of kernel stack$/;"	m	struct:proc	typeref:typename:uint64
kvminit	kernel/vm.c	/^kvminit(void)$/;"	f	typeref:typename:void
kvminithart	kernel/vm.c	/^kvminithart()$/;"	f	typeref:typename:void
kvmmake	kernel/vm.c	/^kvmmake(void)$/;"	f	typeref:typename:pagetable_t
kvmmap	kernel/vm.c	/^kvmmap(pagetable_t kpgtbl, uint64 va, uint64 pa, uint64 sz, int perm)$/;"	f	typeref:typename:void
l	user/wc.asm	/^  l = w = c = 0;$/;"	d
last	kernel/kernel.asm	/^      last = s+1;$/;"	d
last	kernel/kernel.asm	/^  last = va + size - PGSIZE;$/;"	d
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:cmd *	file:
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:cmd *	file:
len	kernel/kernel.asm	/^  len = path - s;$/;"	d
len	kernel/virtio.h	/^  uint32 len;$/;"	m	struct:virtq_desc	typeref:typename:uint32
len	kernel/virtio.h	/^  uint32 len;$/;"	m	struct:virtq_used_elem	typeref:typename:uint32
lh	kernel/log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:logheader	file:
link	user/cat.asm	/^link:$/;"	l
link	user/echo.asm	/^link:$/;"	l
link	user/forktest.asm	/^link:$/;"	l
link	user/grep.asm	/^link:$/;"	l
link	user/grind.asm	/^link:$/;"	l
link	user/init.asm	/^link:$/;"	l
link	user/kill.asm	/^link:$/;"	l
link	user/ln.asm	/^link:$/;"	l
link	user/ls.asm	/^link:$/;"	l
link	user/mkdir.asm	/^link:$/;"	l
link	user/rm.asm	/^link:$/;"	l
link	user/sh.asm	/^link:$/;"	l
link	user/stressfs.asm	/^link:$/;"	l
link	user/usertests.asm	/^link:$/;"	l
link	user/usys.S	/^link:$/;"	l
link	user/wc.asm	/^link:$/;"	l
link	user/zombie.asm	/^link:$/;"	l
linktest	user/usertests.c	/^linktest(char *s)$/;"	f	typeref:typename:void
linkunlink	user/usertests.c	/^linkunlink(char *s)$/;"	f	typeref:typename:void
listcmd	user/sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f	typeref:struct:cmd *
listcmd	user/sh.c	/^struct listcmd {$/;"	s	file:
lk	kernel/sleeplock.h	/^  struct spinlock lk; \/\/ spinlock protecting this sleep lock$/;"	m	struct:sleeplock	typeref:struct:spinlock
lo	user/grind.asm	/^    lo = x % 127773;$/;"	d
loadseg	kernel/exec.c	/^loadseg(pagetable_t pagetable, uint64 va, struct inode *ip, uint offset, uint sz)$/;"	f	typeref:typename:int	file:
lock	kernel/bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon6a7165400108	typeref:struct:spinlock	file:
lock	kernel/buf.h	/^  struct sleeplock lock;$/;"	m	struct:buf	typeref:struct:sleeplock
lock	kernel/console.c	/^  struct spinlock lock;$/;"	m	struct:__anonb6393d190108	typeref:struct:spinlock	file:
lock	kernel/file.c	/^  struct spinlock lock;$/;"	m	struct:__anonc1f1ee260108	typeref:struct:spinlock	file:
lock	kernel/file.h	/^  struct sleeplock lock; \/\/ protects everything below here$/;"	m	struct:inode	typeref:struct:sleeplock
lock	kernel/fs.c	/^  struct spinlock lock;$/;"	m	struct:__anon033c111f0108	typeref:struct:spinlock	file:
lock	kernel/kalloc.c	/^  struct spinlock lock;$/;"	m	struct:__anon3c3fa87c0108	typeref:struct:spinlock	file:
lock	kernel/log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:spinlock	file:
lock	kernel/pipe.c	/^  struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:spinlock	file:
lock	kernel/printf.c	/^  struct spinlock lock;$/;"	m	struct:__anonef4e5b790108	typeref:struct:spinlock	file:
lock	kernel/proc.h	/^  struct spinlock lock;$/;"	m	struct:proc	typeref:struct:spinlock
locked	kernel/sleeplock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:sleeplock	typeref:typename:uint
locked	kernel/spinlock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	typeref:typename:uint
locking	kernel/kernel.asm	/^  locking = pr.locking;$/;"	d
locking	kernel/printf.c	/^  int locking;$/;"	m	struct:__anonef4e5b790108	typeref:typename:int	file:
log	kernel/log.c	/^struct log log;$/;"	v	typeref:struct:log
log	kernel/log.c	/^struct log {$/;"	s	file:
log_write	kernel/log.c	/^log_write(struct buf *b)$/;"	f	typeref:typename:void
logheader	kernel/log.c	/^struct logheader {$/;"	s	file:
logstart	kernel/fs.h	/^  uint logstart;     \/\/ Block number of first log block$/;"	m	struct:superblock	typeref:typename:uint
ls	user/ls.c	/^ls(char *path)$/;"	f	typeref:typename:void
m	kernel/kernel.asm	/^      m = 1 << (bi % 8);$/;"	d
m	kernel/kernel.asm	/^    m = min(n - tot, BSIZE - off%BSIZE);$/;"	d
m	kernel/kernel.asm	/^  m = 1 << (bi % 8);$/;"	d
m	user/grep.asm	/^  m = 0;$/;"	d
m1	user/usertests.asm	/^      m1 = m2;$/;"	d
m1	user/usertests.asm	/^    m1 = 0;$/;"	d
m1	user/usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	user/usertests.asm	/^      m2 = *(char**)m1;$/;"	d
machine	kernel/elf.h	/^  ushort machine;$/;"	m	struct:elfhdr	typeref:typename:ushort
magic	kernel/elf.h	/^  uint magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr	typeref:typename:uint
magic	kernel/fs.h	/^  uint magic;        \/\/ Must be FSMAGIC$/;"	m	struct:superblock	typeref:typename:uint
main	kernel/main.c	/^main()$/;"	f	typeref:typename:void
main	mkfs/mkfs.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/cat.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/echo.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/forktest.c	/^main(void)$/;"	f	typeref:typename:int
main	user/grep.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/grind.c	/^main()$/;"	f	typeref:typename:int
main	user/init.c	/^main(void)$/;"	f	typeref:typename:int
main	user/kill.c	/^main(int argc, char **argv)$/;"	f	typeref:typename:int
main	user/ln.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/ls.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/mkdir.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/rm.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/sh.c	/^main(void)$/;"	f	typeref:typename:int
main	user/stressfs.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/usertests.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/wc.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/zombie.c	/^main(void)$/;"	f	typeref:typename:int
major	kernel/file.h	/^  short major;       \/\/ FD_DEVICE$/;"	m	struct:file	typeref:typename:short
major	kernel/file.h	/^  short major;$/;"	m	struct:inode	typeref:typename:short
major	kernel/file.h	/^#define major(/;"	d
major	kernel/fs.h	/^  short major;          \/\/ Major device number (T_DEVICE only)$/;"	m	struct:dinode	typeref:typename:short
make	gradelib.py	/^def make(*target):$/;"	f
malloc	user/umalloc.c	/^malloc(uint nbytes)$/;"	f	typeref:typename:void *
manywrites	user/usertests.c	/^manywrites(char *s)$/;"	f	typeref:typename:void
mappages	kernel/vm.c	/^mappages(pagetable_t pagetable, uint64 va, uint64 size, uint64 pa, int perm)$/;"	f	typeref:typename:int
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match	user/grep.c	/^match(char *re, char *text)$/;"	f	typeref:typename:int
matchhere	user/grep.c	/^int matchhere(char *re, char *text)$/;"	f	typeref:typename:int
matchstar	user/grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f	typeref:typename:int
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mem	kernel/kernel.asm	/^    mem = kalloc();$/;"	d
mem	kernel/kernel.asm	/^  mem = kalloc();$/;"	d
mem	user/usertests.c	/^mem(char *s)$/;"	f	typeref:typename:void
memcmp	kernel/string.c	/^memcmp(const void *v1, const void *v2, uint n)$/;"	f	typeref:typename:int
memcmp	user/ulib.c	/^memcmp(const void *s1, const void *s2, uint n)$/;"	f	typeref:typename:int
memcpy	kernel/string.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f	typeref:typename:void *
memcpy	user/ulib.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f	typeref:typename:void *
memmove	kernel/string.c	/^memmove(void *dst, const void *src, uint n)$/;"	f	typeref:typename:void *
memmove	user/ulib.c	/^memmove(void *vdst, const void *vsrc, int n)$/;"	f	typeref:typename:void *
memset	kernel/string.c	/^memset(void *dst, int c, uint n)$/;"	f	typeref:typename:void *
memset	user/ulib.c	/^memset(void *dst, int c, uint n)$/;"	f	typeref:typename:void *
memsz	kernel/elf.h	/^  uint64 memsz;$/;"	m	struct:proghdr	typeref:typename:uint64
min	kernel/fs.c	/^#define min(/;"	d	file:
min	mkfs/mkfs.c	/^#define min(/;"	d	file:
minor	kernel/file.h	/^  short minor;$/;"	m	struct:inode	typeref:typename:short
minor	kernel/file.h	/^#define minor(/;"	d
minor	kernel/fs.h	/^  short minor;          \/\/ Minor device number (T_DEVICE only)$/;"	m	struct:dinode	typeref:typename:short
mkdev	kernel/file.h	/^#define	mkdev(/;"	d
mkdir	user/cat.asm	/^mkdir:$/;"	l
mkdir	user/echo.asm	/^mkdir:$/;"	l
mkdir	user/forktest.asm	/^mkdir:$/;"	l
mkdir	user/grep.asm	/^mkdir:$/;"	l
mkdir	user/grind.asm	/^mkdir:$/;"	l
mkdir	user/init.asm	/^mkdir:$/;"	l
mkdir	user/kill.asm	/^mkdir:$/;"	l
mkdir	user/ln.asm	/^mkdir:$/;"	l
mkdir	user/ls.asm	/^mkdir:$/;"	l
mkdir	user/mkdir.asm	/^mkdir:$/;"	l
mkdir	user/rm.asm	/^mkdir:$/;"	l
mkdir	user/sh.asm	/^mkdir:$/;"	l
mkdir	user/stressfs.asm	/^mkdir:$/;"	l
mkdir	user/usertests.asm	/^mkdir:$/;"	l
mkdir	user/usys.S	/^mkdir:$/;"	l
mkdir	user/wc.asm	/^mkdir:$/;"	l
mkdir	user/zombie.asm	/^mkdir:$/;"	l
mkfs/mkfs	Makefile	/^mkfs\/mkfs: mkfs\/mkfs.c $K\/fs.h $K\/param.h$/;"	t
mknod	user/cat.asm	/^mknod:$/;"	l
mknod	user/echo.asm	/^mknod:$/;"	l
mknod	user/forktest.asm	/^mknod:$/;"	l
mknod	user/grep.asm	/^mknod:$/;"	l
mknod	user/grind.asm	/^mknod:$/;"	l
mknod	user/init.asm	/^mknod:$/;"	l
mknod	user/kill.asm	/^mknod:$/;"	l
mknod	user/ln.asm	/^mknod:$/;"	l
mknod	user/ls.asm	/^mknod:$/;"	l
mknod	user/mkdir.asm	/^mknod:$/;"	l
mknod	user/rm.asm	/^mknod:$/;"	l
mknod	user/sh.asm	/^mknod:$/;"	l
mknod	user/stressfs.asm	/^mknod:$/;"	l
mknod	user/usertests.asm	/^mknod:$/;"	l
mknod	user/usys.S	/^mknod:$/;"	l
mknod	user/wc.asm	/^mknod:$/;"	l
mknod	user/zombie.asm	/^mknod:$/;"	l
mode	user/sh.c	/^  int mode;$/;"	m	struct:redircmd	typeref:typename:int	file:
morecore	user/umalloc.c	/^morecore(uint nu)$/;"	f	typeref:typename:Header *	file:
mycpu	kernel/proc.c	/^mycpu(void)$/;"	f	typeref:struct:cpu *
myproc	kernel/proc.c	/^myproc(void)$/;"	f	typeref:struct:proc *
n	gradelib.py	/^            n = 0$/;"	v	class:shell_script.setup_call_on_line.context
n	kernel/kernel.asm	/^      n = PGSIZE;$/;"	d
n	kernel/kernel.asm	/^      n = len;$/;"	d
n	kernel/kernel.asm	/^      n = max;$/;"	d
n	kernel/kernel.asm	/^      n = sz - i;$/;"	d
n	kernel/kernel.asm	/^    n = 0;$/;"	d
n	kernel/kernel.asm	/^    n = PGSIZE - (dstva - va0);$/;"	d
n	kernel/kernel.asm	/^    n = PGSIZE - (srcva - va0);$/;"	d
n	kernel/kernel.asm	/^    n = ip->size - off;$/;"	d
n	kernel/log.c	/^  int n;$/;"	m	struct:logheader	typeref:typename:int	file:
n	user/cat.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/cat.asm	/^  n = 0;$/;"	d
n	user/echo.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/echo.asm	/^  n = 0;$/;"	d
n	user/forktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/forktest.asm	/^  n = 0;$/;"	d
n	user/grep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/grep.asm	/^  n = 0;$/;"	d
n	user/grind.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/grind.asm	/^  n = 0;$/;"	d
n	user/init.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/init.asm	/^  n = 0;$/;"	d
n	user/kill.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/kill.asm	/^  n = 0;$/;"	d
n	user/ln.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/ln.asm	/^  n = 0;$/;"	d
n	user/ls.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/ls.asm	/^  n = 0;$/;"	d
n	user/mkdir.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/mkdir.asm	/^  n = 0;$/;"	d
n	user/rm.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/rm.asm	/^  n = 0;$/;"	d
n	user/sh.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/sh.asm	/^  n = 0;$/;"	d
n	user/stressfs.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/stressfs.asm	/^  n = 0;$/;"	d
n	user/usertests.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/usertests.asm	/^    n = read(fds[0], (void*)addr, 8192);$/;"	d
n	user/usertests.asm	/^    n = write(1, (char*)addr, 8192);$/;"	d
n	user/usertests.asm	/^    n = write(fds[1], "x", 1);$/;"	d
n	user/usertests.asm	/^    n = write(fds[1], (char*)addr, 8192);$/;"	d
n	user/usertests.asm	/^  n = 0;$/;"	d
n	user/usertests.asm	/^  n = read(fd, (void*)(a+4096), 10);$/;"	d
n	user/usertests.asm	/^  n = read(fd2, buf, sizeof(buf));$/;"	d
n	user/usertests.asm	/^  n = read(fd3, buf, sizeof(buf));$/;"	d
n	user/usertests.asm	/^  n = write(fd, (void*)(a+4096), 1024);$/;"	d
n	user/wc.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/wc.asm	/^  n = 0;$/;"	d
n	user/zombie.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/zombie.asm	/^  n = 0;$/;"	d
n1	kernel/kernel.asm	/^        n1 = max;$/;"	d
name	kernel/fs.h	/^  char name[DIRSIZ];$/;"	m	struct:dirent	typeref:typename:char[]
name	kernel/proc.h	/^  char name[16];               \/\/ Process name (debugging)$/;"	m	struct:proc	typeref:typename:char[16]
name	kernel/sleeplock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:sleeplock	typeref:typename:char *
name	kernel/spinlock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock	typeref:typename:char *
name	user/usertests.c	/^    char name[DIRSIZ];$/;"	m	struct:concreate::__anon2469bfd60b08	typeref:typename:char[]	file:
namecmp	kernel/fs.c	/^namecmp(const char *s, const char *t)$/;"	f	typeref:typename:int
namei	kernel/fs.c	/^namei(char *path)$/;"	f	typeref:struct:inode *
nameiparent	kernel/fs.c	/^nameiparent(char *path, char *name)$/;"	f	typeref:struct:inode *
namex	kernel/fs.c	/^namex(char *path, int nameiparent, char *name)$/;"	f	typeref:struct:inode *	file:
nbitmap	mkfs/mkfs.c	/^int nbitmap = FSSIZE\/BPB + 1;$/;"	v	typeref:typename:int
nblocks	kernel/fs.h	/^  uint nblocks;      \/\/ Number of data blocks$/;"	m	struct:superblock	typeref:typename:uint
nblocks	mkfs/mkfs.c	/^int nblocks;  \/\/ Number of data blocks$/;"	v	typeref:typename:int
nc	user/usertests.asm	/^  nc = np = 0;$/;"	d
neg	user/cat.asm	/^    neg = 1;$/;"	d
neg	user/cat.asm	/^  neg = 0;$/;"	d
neg	user/echo.asm	/^    neg = 1;$/;"	d
neg	user/echo.asm	/^  neg = 0;$/;"	d
neg	user/grep.asm	/^    neg = 1;$/;"	d
neg	user/grep.asm	/^  neg = 0;$/;"	d
neg	user/grind.asm	/^    neg = 1;$/;"	d
neg	user/grind.asm	/^  neg = 0;$/;"	d
neg	user/init.asm	/^    neg = 1;$/;"	d
neg	user/init.asm	/^  neg = 0;$/;"	d
neg	user/kill.asm	/^    neg = 1;$/;"	d
neg	user/kill.asm	/^  neg = 0;$/;"	d
neg	user/ln.asm	/^    neg = 1;$/;"	d
neg	user/ln.asm	/^  neg = 0;$/;"	d
neg	user/ls.asm	/^    neg = 1;$/;"	d
neg	user/ls.asm	/^  neg = 0;$/;"	d
neg	user/mkdir.asm	/^    neg = 1;$/;"	d
neg	user/mkdir.asm	/^  neg = 0;$/;"	d
neg	user/rm.asm	/^    neg = 1;$/;"	d
neg	user/rm.asm	/^  neg = 0;$/;"	d
neg	user/sh.asm	/^    neg = 1;$/;"	d
neg	user/sh.asm	/^  neg = 0;$/;"	d
neg	user/stressfs.asm	/^    neg = 1;$/;"	d
neg	user/stressfs.asm	/^  neg = 0;$/;"	d
neg	user/usertests.asm	/^    neg = 1;$/;"	d
neg	user/usertests.asm	/^  neg = 0;$/;"	d
neg	user/wc.asm	/^    neg = 1;$/;"	d
neg	user/wc.asm	/^  neg = 0;$/;"	d
neg	user/zombie.asm	/^    neg = 1;$/;"	d
neg	user/zombie.asm	/^  neg = 0;$/;"	d
next	kernel/buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf *
next	kernel/kalloc.c	/^  struct run *next;$/;"	m	struct:run	typeref:struct:run *	file:
next	kernel/virtio.h	/^  uint16 next;$/;"	m	struct:virtq_desc	typeref:typename:uint16
nextpid	kernel/kernel.asm	/^  nextpid = nextpid + 1;$/;"	d
nextpid	kernel/proc.c	/^int nextpid = 1;$/;"	v	typeref:typename:int
ninodeblocks	mkfs/mkfs.c	/^int ninodeblocks = NINODES \/ IPB + 1;$/;"	v	typeref:typename:int
ninodes	kernel/fs.h	/^  uint ninodes;      \/\/ Number of inodes.$/;"	m	struct:superblock	typeref:typename:uint
nlink	kernel/file.h	/^  short nlink;$/;"	m	struct:inode	typeref:typename:short
nlink	kernel/fs.h	/^  short nlink;          \/\/ Number of links to inode in file system$/;"	m	struct:dinode	typeref:typename:short
nlink	kernel/stat.h	/^  short nlink; \/\/ Number of links to file$/;"	m	struct:stat	typeref:typename:short
nlog	kernel/fs.h	/^  uint nlog;         \/\/ Number of log blocks$/;"	m	struct:superblock	typeref:typename:uint
nlog	mkfs/mkfs.c	/^int nlog = LOGSIZE;$/;"	v	typeref:typename:int
nmeta	mkfs/mkfs.c	/^int nmeta;    \/\/ Number of meta blocks (boot, sb, nlog, inode, bitmap)$/;"	v	typeref:typename:int
noff	kernel/proc.h	/^  int noff;                   \/\/ Depth of push_off() nesting.$/;"	m	struct:cpu	typeref:typename:int
nowrite	user/usertests.c	/^nowrite(char *s)$/;"	f	typeref:typename:void
nread	kernel/pipe.c	/^  uint nread;     \/\/ number of bytes read$/;"	m	struct:pipe	typeref:typename:uint	file:
nulterminate	user/sh.c	/^nulterminate(struct cmd *cmd)$/;"	f	typeref:struct:cmd *
num	kernel/kernel.asm	/^  num = p->trapframe->a7;$/;"	d
nunits	user/cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/grind.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nwrite	kernel/pipe.c	/^  uint nwrite;    \/\/ number of bytes written$/;"	m	struct:pipe	typeref:typename:uint	file:
off	kernel/elf.h	/^  uint64 off;$/;"	m	struct:proghdr	typeref:typename:uint64
off	kernel/file.h	/^  uint off;          \/\/ FD_INODE$/;"	m	struct:file	typeref:typename:uint
ofile	kernel/proc.h	/^  struct file *ofile[NOFILE];  \/\/ Open files$/;"	m	struct:proc	typeref:struct:file * []
oldbrk	user/usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
oldpagetable	kernel/kernel.asm	/^  oldpagetable = p->pagetable;$/;"	d
oldsz	kernel/kernel.asm	/^  oldsz = PGROUNDUP(oldsz);$/;"	d
open	user/cat.asm	/^open:$/;"	l
open	user/echo.asm	/^open:$/;"	l
open	user/forktest.asm	/^open:$/;"	l
open	user/grep.asm	/^open:$/;"	l
open	user/grind.asm	/^open:$/;"	l
open	user/init.asm	/^open:$/;"	l
open	user/kill.asm	/^open:$/;"	l
open	user/ln.asm	/^open:$/;"	l
open	user/ls.asm	/^open:$/;"	l
open	user/mkdir.asm	/^open:$/;"	l
open	user/rm.asm	/^open:$/;"	l
open	user/sh.asm	/^open:$/;"	l
open	user/stressfs.asm	/^open:$/;"	l
open	user/usertests.asm	/^open:$/;"	l
open	user/usys.S	/^open:$/;"	l
open	user/wc.asm	/^open:$/;"	l
open	user/zombie.asm	/^open:$/;"	l
openiputtest	user/usertests.c	/^openiputtest(char *s)$/;"	f	typeref:typename:void
opentest	user/usertests.c	/^opentest(char *s)$/;"	f	typeref:typename:void
ops	kernel/virtio_disk.c	/^  struct virtio_blk_req ops[NUM];$/;"	m	struct:disk	typeref:struct:virtio_blk_req[]	file:
os	kernel/kernel.asm	/^  os = s;$/;"	d
os	user/cat.asm	/^  os = s;$/;"	d
os	user/echo.asm	/^  os = s;$/;"	d
os	user/forktest.asm	/^  os = s;$/;"	d
os	user/grep.asm	/^  os = s;$/;"	d
os	user/grind.asm	/^  os = s;$/;"	d
os	user/init.asm	/^  os = s;$/;"	d
os	user/kill.asm	/^  os = s;$/;"	d
os	user/ln.asm	/^  os = s;$/;"	d
os	user/ls.asm	/^  os = s;$/;"	d
os	user/mkdir.asm	/^  os = s;$/;"	d
os	user/rm.asm	/^  os = s;$/;"	d
os	user/sh.asm	/^  os = s;$/;"	d
os	user/stressfs.asm	/^  os = s;$/;"	d
os	user/usertests.asm	/^  os = s;$/;"	d
os	user/wc.asm	/^  os = s;$/;"	d
os	user/zombie.asm	/^  os = s;$/;"	d
outofinodes	user/usertests.c	/^outofinodes(char *s)$/;"	f	typeref:typename:void
outstanding	kernel/log.c	/^  int outstanding; \/\/ how many FS sys calls are executing.$/;"	m	struct:log	typeref:typename:int	file:
p	kernel/kernel.asm	/^  p = (char*)PGROUNDUP((uint64)pa_start);$/;"	d
p	kernel/kernel.asm	/^  p = allocproc();$/;"	d
p	kernel/kernel.asm	/^  p = myproc();$/;"	d
p	user/cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/grep.asm	/^      p = q+1;$/;"	d
p	user/grep.asm	/^    p = buf;$/;"	d
p	user/grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/grind.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	user/ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/usertests.asm	/^  p = sbrk(amt);$/;"	d
p	user/usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
pa	kernel/kernel.asm	/^    pa = PTE2PA(*pte);$/;"	d
pa	kernel/kernel.asm	/^    pa = walkaddr(pagetable, va + i);$/;"	d
pa	kernel/kernel.asm	/^  pa = PTE2PA(*pte);$/;"	d
pa0	kernel/kernel.asm	/^    pa0 = PTE2PA(*pte);$/;"	d
pa0	kernel/kernel.asm	/^    pa0 = walkaddr(pagetable, va0);$/;"	d
paddr	kernel/elf.h	/^  uint64 paddr;$/;"	m	struct:proghdr	typeref:typename:uint64
pagetable	kernel/kernel.asm	/^      pagetable = (pagetable_t)PTE2PA(*pte);$/;"	d
pagetable	kernel/kernel.asm	/^  pagetable = (pagetable_t) kalloc();$/;"	d
pagetable	kernel/kernel.asm	/^  pagetable = uvmcreate();$/;"	d
pagetable	kernel/proc.h	/^  pagetable_t pagetable;       \/\/ User page table$/;"	m	struct:proc	typeref:typename:pagetable_t
pagetable_t	kernel/kernel.asm	/^pagetable_t$/;"	l
pagetable_t	kernel/riscv.h	/^typedef uint64 *pagetable_t; \/\/ 512 PTEs$/;"	t	typeref:typename:uint64 *
panic	kernel/printf.c	/^panic(char *s)$/;"	f	typeref:typename:void
panic	user/sh.c	/^panic(char *s)$/;"	f	typeref:typename:void
panicked	kernel/kernel.asm	/^  panicked = 1; \/\/ freeze uart output from other CPUs$/;"	d
panicked	kernel/printf.c	/^volatile int panicked = 0;$/;"	v	typeref:typename:volatile int
parent	kernel/proc.h	/^  struct proc *parent;         \/\/ Parent process$/;"	m	struct:proc	typeref:struct:proc *
parseblock	user/sh.c	/^parseblock(char **ps, char *es)$/;"	f	typeref:struct:cmd *
parsecmd	user/sh.c	/^parsecmd(char *s)$/;"	f	typeref:struct:cmd *
parseexec	user/sh.c	/^parseexec(char **ps, char *es)$/;"	f	typeref:struct:cmd *
parseline	user/sh.c	/^parseline(char **ps, char *es)$/;"	f	typeref:struct:cmd *
parsepipe	user/sh.c	/^parsepipe(char **ps, char *es)$/;"	f	typeref:struct:cmd *
parseredirs	user/sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f	typeref:struct:cmd *
pattern	user/grep.asm	/^  pattern = argv[1];$/;"	d
pde_t	kernel/types.h	/^typedef uint64 pde_t;$/;"	t	typeref:typename:uint64
peek	user/sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f	typeref:typename:int
perm	kernel/kernel.asm	/^      perm = PTE_X;$/;"	d
pgbug	user/usertests.c	/^pgbug(char *s)$/;"	f	typeref:typename:void
ph	Makefile	/^ph: notxv6\/ph.c$/;"	t
phentsize	kernel/elf.h	/^  ushort phentsize;$/;"	m	struct:elfhdr	typeref:typename:ushort
phnum	kernel/elf.h	/^  ushort phnum;$/;"	m	struct:elfhdr	typeref:typename:ushort
phoff	kernel/elf.h	/^  uint64 phoff;$/;"	m	struct:elfhdr	typeref:typename:uint64
pi	kernel/kernel.asm	/^  pi = 0;$/;"	d
pid	kernel/kernel.asm	/^          pid = pp->pid;$/;"	d
pid	kernel/kernel.asm	/^  pid = nextpid;$/;"	d
pid	kernel/kernel.asm	/^  pid = np->pid;$/;"	d
pid	kernel/proc.h	/^  int pid;                     \/\/ Process ID$/;"	m	struct:proc	typeref:typename:int
pid	kernel/sleeplock.h	/^  int pid;           \/\/ Process holding lock$/;"	m	struct:sleeplock	typeref:typename:int
pid	user/forktest.asm	/^    pid = fork();$/;"	d
pid	user/init.asm	/^    pid = fork();$/;"	d
pid	user/sh.asm	/^  pid = fork();$/;"	d
pid	user/usertests.asm	/^    pid = fork();$/;"	d
pid	user/usertests.asm	/^  pid = fork();$/;"	d
pid1	user/usertests.asm	/^  pid1 = fork();$/;"	d
pid2	user/usertests.asm	/^  pid2 = fork();$/;"	d
pid3	user/usertests.asm	/^  pid3 = fork();$/;"	d
pid_lock	kernel/proc.c	/^struct spinlock pid_lock;$/;"	v	typeref:struct:spinlock
pipe	kernel/file.h	/^  struct pipe *pipe; \/\/ FD_PIPE$/;"	m	struct:file	typeref:struct:pipe *
pipe	kernel/pipe.c	/^struct pipe {$/;"	s	file:
pipe	user/cat.asm	/^pipe:$/;"	l
pipe	user/echo.asm	/^pipe:$/;"	l
pipe	user/forktest.asm	/^pipe:$/;"	l
pipe	user/grep.asm	/^pipe:$/;"	l
pipe	user/grind.asm	/^pipe:$/;"	l
pipe	user/init.asm	/^pipe:$/;"	l
pipe	user/kill.asm	/^pipe:$/;"	l
pipe	user/ln.asm	/^pipe:$/;"	l
pipe	user/ls.asm	/^pipe:$/;"	l
pipe	user/mkdir.asm	/^pipe:$/;"	l
pipe	user/rm.asm	/^pipe:$/;"	l
pipe	user/sh.asm	/^pipe:$/;"	l
pipe	user/stressfs.asm	/^pipe:$/;"	l
pipe	user/usertests.asm	/^pipe:$/;"	l
pipe	user/usys.S	/^pipe:$/;"	l
pipe	user/wc.asm	/^pipe:$/;"	l
pipe	user/zombie.asm	/^pipe:$/;"	l
pipe1	user/usertests.c	/^pipe1(char *s)$/;"	f	typeref:typename:void
pipealloc	kernel/pipe.c	/^pipealloc(struct file **f0, struct file **f1)$/;"	f	typeref:typename:int
pipeclose	kernel/pipe.c	/^pipeclose(struct pipe *pi, int writable)$/;"	f	typeref:typename:void
pipecmd	user/sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f	typeref:struct:cmd *
pipecmd	user/sh.c	/^struct pipecmd {$/;"	s	file:
piperead	kernel/pipe.c	/^piperead(struct pipe *pi, uint64 addr, int n)$/;"	f	typeref:typename:int
pipewrite	kernel/pipe.c	/^pipewrite(struct pipe *pi, uint64 addr, int n)$/;"	f	typeref:typename:int
plic_claim	kernel/plic.c	/^plic_claim(void)$/;"	f	typeref:typename:int
plic_complete	kernel/plic.c	/^plic_complete(int irq)$/;"	f	typeref:typename:void
plicinit	kernel/plic.c	/^plicinit(void)$/;"	f	typeref:typename:void
plicinithart	kernel/plic.c	/^plicinithart(void)$/;"	f	typeref:typename:void
pop_off	kernel/spinlock.c	/^pop_off(void)$/;"	f	typeref:typename:void
post_make	gradelib.py	/^def post_make():$/;"	f
pr	kernel/printf.c	/^} pr;$/;"	v	typeref:struct:__anonef4e5b790108
pre_make	gradelib.py	/^def pre_make():$/;"	f
preempt	user/usertests.c	/^preempt(char *s)$/;"	f	typeref:typename:void
prev	kernel/buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf *
print	user/forktest.c	/^print(const char *s)$/;"	f	typeref:typename:void
print-gdbport	Makefile	/^print-gdbport:$/;"	t
printf	kernel/printf.c	/^printf(char *fmt, ...)$/;"	f	typeref:typename:int
printf	user/printf.c	/^printf(const char *fmt, ...)$/;"	f	typeref:typename:void
printfinit	kernel/printf.c	/^printfinit(void)$/;"	f	typeref:typename:void
printint	kernel/printf.c	/^printint(long long xx, int base, int sign)$/;"	f	typeref:typename:void	file:
printint	user/printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	typeref:typename:void	file:
printptr	kernel/printf.c	/^printptr(uint64 x)$/;"	f	typeref:typename:void	file:
printptr	user/printf.c	/^printptr(int fd, uint64 x) {$/;"	f	typeref:typename:void	file:
proc	kernel/proc.c	/^struct proc proc[NPROC];$/;"	v	typeref:struct:proc[]
proc	kernel/proc.h	/^  struct proc *proc;          \/\/ The process running on this cpu, or null.$/;"	m	struct:cpu	typeref:struct:proc *
proc	kernel/proc.h	/^struct proc {$/;"	s
proc_freepagetable	kernel/proc.c	/^proc_freepagetable(pagetable_t pagetable, uint64 sz)$/;"	f	typeref:typename:void
proc_mapstacks	kernel/proc.c	/^proc_mapstacks(pagetable_t kpgtbl)$/;"	f	typeref:typename:void
proc_pagetable	kernel/proc.c	/^proc_pagetable(struct proc *p)$/;"	f	typeref:typename:pagetable_t
procdump	kernel/proc.c	/^procdump(void)$/;"	f	typeref:typename:void
procinit	kernel/proc.c	/^procinit(void)$/;"	f	typeref:typename:void
procstate	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	g
proghdr	kernel/elf.h	/^struct proghdr {$/;"	s
pte	kernel/kernel.asm	/^    pte = walk(pagetable, va0, 0);$/;"	d
pte	kernel/kernel.asm	/^  pte = walk(pagetable, va, 0);$/;"	d
pte_t	kernel/kernel.asm	/^pte_t *$/;"	l
pte_t	kernel/riscv.h	/^typedef uint64 pte_t;$/;"	t	typeref:typename:uint64
ptr	user/umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon3d351ad10108	typeref:union:header *	file:
push_off	kernel/spinlock.c	/^push_off(void)$/;"	f	typeref:typename:void
putc	user/printf.c	/^putc(int fd, char c)$/;"	f	typeref:typename:void	file:
qemu	Makefile	/^qemu: $K\/kernel fs.img$/;"	t
qemu-gdb	Makefile	/^qemu-gdb: $K\/kernel .gdbinit fs.img$/;"	t
quick	user/usertests.asm	/^    quick = 1;$/;"	d
quicktests	user/usertests.c	/^} quicktests[] = {$/;"	v	typeref:struct:test[]
r	grade-lab-util	/^r = Runner(save("xv6.out"))$/;"	v
r	kernel/console.c	/^  uint r;  \/\/ Read index$/;"	m	struct:__anonb6393d190108	typeref:typename:uint	file:
r	kernel/kernel.asm	/^    r = devsw[f->major].read(1, addr, n);$/;"	d
r	kernel/kernel.asm	/^    r = piperead(f->pipe, addr, n);$/;"	d
r	kernel/kernel.asm	/^  r = (lk->locked && lk->cpu == mycpu());$/;"	d
r	kernel/kernel.asm	/^  r = (struct run*)pa;$/;"	d
r	kernel/kernel.asm	/^  r = kmem.freelist;$/;"	d
r	kernel/kernel.asm	/^  r = lk->locked && (lk->pid == myproc()->pid);$/;"	d
r	user/cat.asm	/^  r = fstat(fd, st);$/;"	d
r	user/echo.asm	/^  r = fstat(fd, st);$/;"	d
r	user/forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	user/grep.asm	/^  r = fstat(fd, st);$/;"	d
r	user/grind.asm	/^  r = fstat(fd, st);$/;"	d
r	user/init.asm	/^  r = fstat(fd, st);$/;"	d
r	user/kill.asm	/^  r = fstat(fd, st);$/;"	d
r	user/ln.asm	/^  r = fstat(fd, st);$/;"	d
r	user/ls.asm	/^  r = fstat(fd, st);$/;"	d
r	user/mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	user/rm.asm	/^  r = fstat(fd, st);$/;"	d
r	user/sh.asm	/^  r = fstat(fd, st);$/;"	d
r	user/stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	user/usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	user/wc.asm	/^  r = fstat(fd, st);$/;"	d
r	user/zombie.asm	/^  r = fstat(fd, st);$/;"	d
r_fp	kernel/riscv.h	/^r_fp()$/;"	f	typeref:typename:uint64
r_mcounteren	kernel/riscv.h	/^r_mcounteren()$/;"	f	typeref:typename:uint64
r_medeleg	kernel/riscv.h	/^r_medeleg()$/;"	f	typeref:typename:uint64
r_menvcfg	kernel/riscv.h	/^r_menvcfg()$/;"	f	typeref:typename:uint64
r_mhartid	kernel/riscv.h	/^r_mhartid()$/;"	f	typeref:typename:uint64
r_mideleg	kernel/riscv.h	/^r_mideleg()$/;"	f	typeref:typename:uint64
r_mie	kernel/riscv.h	/^r_mie()$/;"	f	typeref:typename:uint64
r_mstatus	kernel/riscv.h	/^r_mstatus()$/;"	f	typeref:typename:uint64
r_ra	kernel/riscv.h	/^r_ra()$/;"	f	typeref:typename:uint64
r_satp	kernel/riscv.h	/^r_satp()$/;"	f	typeref:typename:uint64
r_scause	kernel/riscv.h	/^r_scause()$/;"	f	typeref:typename:uint64
r_sepc	kernel/riscv.h	/^r_sepc()$/;"	f	typeref:typename:uint64
r_sie	kernel/riscv.h	/^r_sie()$/;"	f	typeref:typename:uint64
r_sip	kernel/riscv.h	/^r_sip()$/;"	f	typeref:typename:uint64
r_sp	kernel/riscv.h	/^r_sp()$/;"	f	typeref:typename:uint64
r_sstatus	kernel/riscv.h	/^r_sstatus()$/;"	f	typeref:typename:uint64
r_stimecmp	kernel/riscv.h	/^r_stimecmp()$/;"	f	typeref:typename:uint64
r_stval	kernel/riscv.h	/^r_stval()$/;"	f	typeref:typename:uint64
r_stvec	kernel/riscv.h	/^r_stvec()$/;"	f	typeref:typename:uint64
r_time	kernel/riscv.h	/^r_time()$/;"	f	typeref:typename:uint64
r_tp	kernel/riscv.h	/^r_tp()$/;"	f	typeref:typename:uint64
ra	kernel/proc.h	/^  \/*  40 *\/ uint64 ra;$/;"	m	struct:trapframe	typeref:typename:uint64
ra	kernel/proc.h	/^  uint64 ra;$/;"	m	struct:context	typeref:typename:uint64
rand	user/grind.c	/^rand(void)$/;"	f	typeref:typename:int
rand_next	user/grind.c	/^unsigned long rand_next = 1;$/;"	v	typeref:typename:unsigned long
random_str	gradelib.py	/^def random_str(n=8):$/;"	f
rcmd	user/sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
read	kernel/file.h	/^  int (*read)(int, uint64, int);$/;"	m	struct:devsw	typeref:typename:int (*)(int,uint64,int)
read	user/cat.asm	/^read:$/;"	l
read	user/echo.asm	/^read:$/;"	l
read	user/forktest.asm	/^read:$/;"	l
read	user/grep.asm	/^read:$/;"	l
read	user/grind.asm	/^read:$/;"	l
read	user/init.asm	/^read:$/;"	l
read	user/kill.asm	/^read:$/;"	l
read	user/ln.asm	/^read:$/;"	l
read	user/ls.asm	/^read:$/;"	l
read	user/mkdir.asm	/^read:$/;"	l
read	user/rm.asm	/^read:$/;"	l
read	user/sh.asm	/^read:$/;"	l
read	user/stressfs.asm	/^read:$/;"	l
read	user/usertests.asm	/^read:$/;"	l
read	user/usys.S	/^read:$/;"	l
read	user/wc.asm	/^read:$/;"	l
read	user/zombie.asm	/^read:$/;"	l
read_head	kernel/log.c	/^read_head(void)$/;"	f	typeref:typename:void	file:
readable	kernel/file.h	/^  char readable;$/;"	m	struct:file	typeref:typename:char
readi	kernel/fs.c	/^readi(struct inode *ip, int user_dst, uint64 dst, uint off, uint n)$/;"	f	typeref:typename:int
readopen	kernel/pipe.c	/^  int readopen;   \/\/ read fd is still open$/;"	m	struct:pipe	typeref:typename:int	file:
readsb	kernel/fs.c	/^readsb(int dev, struct superblock *sb)$/;"	f	typeref:typename:void	file:
recover_from_log	kernel/log.c	/^recover_from_log(void)$/;"	f	typeref:typename:void	file:
redircmd	user/sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f	typeref:struct:cmd *
redircmd	user/sh.c	/^struct redircmd {$/;"	s	file:
ref	kernel/file.h	/^  int ref;            \/\/ Reference count$/;"	m	struct:inode	typeref:typename:int
ref	kernel/file.h	/^  int ref; \/\/ reference count$/;"	m	struct:file	typeref:typename:int
refcnt	kernel/buf.h	/^  uint refcnt;$/;"	m	struct:buf	typeref:typename:uint
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	file:
release	kernel/spinlock.c	/^release(struct spinlock *lk)$/;"	f	typeref:typename:void
releasesleep	kernel/sleeplock.c	/^releasesleep(struct sleeplock *lk)$/;"	f	typeref:typename:void
reparent	kernel/proc.c	/^reparent(struct proc *p)$/;"	f	typeref:typename:void
reparent	user/usertests.c	/^reparent(char *s)$/;"	f	typeref:typename:void
reparent2	user/usertests.c	/^reparent2(char *s)$/;"	f	typeref:typename:void
reserved	kernel/virtio.h	/^  uint32 reserved;$/;"	m	struct:virtio_blk_req	typeref:typename:uint32
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
ret	kernel/kernel.asm	/^    ret = (i == n ? n : -1);$/;"	d
ret	kernel/kernel.asm	/^    ret = devsw[f->major].write(1, addr, n);$/;"	d
ret	kernel/kernel.asm	/^    ret = pipewrite(f->pipe, addr, n);$/;"	d
ret	user/sh.asm	/^      ret = '+';$/;"	d
ret	user/sh.asm	/^    ret = 'a';$/;"	d
ret	user/sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	user/sh.asm	/^  ret = *s;$/;"	d
ret	user/sh.asm	/^  ret = execcmd();$/;"	d
ret	user/sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
ret	user/usertests.asm	/^    ret = exec("echo", args2);$/;"	d
ret	user/usertests.asm	/^  ret = exec(b, args);$/;"	d
ret	user/usertests.asm	/^  ret = link(b, b);$/;"	d
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:cmd *	file:
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:cmd *	file:
ring	kernel/virtio.h	/^  struct virtq_used_elem ring[NUM];$/;"	m	struct:virtq_used	typeref:struct:virtq_used_elem[]
ring	kernel/virtio.h	/^  uint16 ring[NUM]; \/\/ descriptor numbers of chain heads$/;"	m	struct:virtq_avail	typeref:typename:uint16[]
rinode	mkfs/mkfs.c	/^rinode(uint inum, struct dinode *ip)$/;"	f	typeref:typename:void
rmdot	user/usertests.c	/^rmdot(char *s)$/;"	f	typeref:typename:void
rsect	mkfs/mkfs.c	/^rsect(uint sec, void *buf)$/;"	f	typeref:typename:void
run	kernel/kalloc.c	/^struct run {$/;"	s	file:
run	user/usertests.c	/^run(void f(char *), char *s) {$/;"	f	typeref:typename:int
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	member:Runner.run_qemu	file:
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	file:
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	user/sh.c	/^runcmd(struct cmd *cmd)$/;"	f	typeref:typename:void
runtests	user/usertests.c	/^runtests(struct test *tests, char *justone, int continuous) {$/;"	f	typeref:typename:int
rwsbrk	user/usertests.c	/^rwsbrk()$/;"	f	typeref:typename:void
s	kernel/kernel.asm	/^        s = "(null)";$/;"	d
s	kernel/kernel.asm	/^  s = src;$/;"	d
s	user/cat.asm	/^          s = "(null)";$/;"	d
s	user/echo.asm	/^          s = "(null)";$/;"	d
s	user/grep.asm	/^          s = "(null)";$/;"	d
s	user/grind.asm	/^          s = "(null)";$/;"	d
s	user/init.asm	/^          s = "(null)";$/;"	d
s	user/kill.asm	/^          s = "(null)";$/;"	d
s	user/ln.asm	/^          s = "(null)";$/;"	d
s	user/ls.asm	/^          s = "(null)";$/;"	d
s	user/mkdir.asm	/^          s = "(null)";$/;"	d
s	user/rm.asm	/^          s = "(null)";$/;"	d
s	user/sh.asm	/^          s = "(null)";$/;"	d
s	user/sh.asm	/^  s = *ps;$/;"	d
s	user/stressfs.asm	/^          s = "(null)";$/;"	d
s	user/umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon3d351ad10108	file:
s	user/usertests.asm	/^          s = "(null)";$/;"	d
s	user/usertests.c	/^  char *s;$/;"	m	struct:test	typeref:typename:char *	file:
s	user/wc.asm	/^          s = "(null)";$/;"	d
s	user/zombie.asm	/^          s = "(null)";$/;"	d
s0	kernel/proc.h	/^  \/*  96 *\/ uint64 s0;$/;"	m	struct:trapframe	typeref:typename:uint64
s0	kernel/proc.h	/^  uint64 s0;$/;"	m	struct:context	typeref:typename:uint64
s1	kernel/kernel.asm	/^  s1 = v1;$/;"	d
s1	kernel/proc.h	/^  \/* 104 *\/ uint64 s1;$/;"	m	struct:trapframe	typeref:typename:uint64
s1	kernel/proc.h	/^  uint64 s1;$/;"	m	struct:context	typeref:typename:uint64
s10	kernel/proc.h	/^  \/* 240 *\/ uint64 s10;$/;"	m	struct:trapframe	typeref:typename:uint64
s10	kernel/proc.h	/^  uint64 s10;$/;"	m	struct:context	typeref:typename:uint64
s11	kernel/proc.h	/^  \/* 248 *\/ uint64 s11;$/;"	m	struct:trapframe	typeref:typename:uint64
s11	kernel/proc.h	/^  uint64 s11;$/;"	m	struct:context	typeref:typename:uint64
s2	kernel/kernel.asm	/^  s2 = v2;$/;"	d
s2	kernel/proc.h	/^  \/* 176 *\/ uint64 s2;$/;"	m	struct:trapframe	typeref:typename:uint64
s2	kernel/proc.h	/^  uint64 s2;$/;"	m	struct:context	typeref:typename:uint64
s3	kernel/proc.h	/^  \/* 184 *\/ uint64 s3;$/;"	m	struct:trapframe	typeref:typename:uint64
s3	kernel/proc.h	/^  uint64 s3;$/;"	m	struct:context	typeref:typename:uint64
s4	kernel/proc.h	/^  \/* 192 *\/ uint64 s4;$/;"	m	struct:trapframe	typeref:typename:uint64
s4	kernel/proc.h	/^  uint64 s4;$/;"	m	struct:context	typeref:typename:uint64
s5	kernel/proc.h	/^  \/* 200 *\/ uint64 s5;$/;"	m	struct:trapframe	typeref:typename:uint64
s5	kernel/proc.h	/^  uint64 s5;$/;"	m	struct:context	typeref:typename:uint64
s6	kernel/proc.h	/^  \/* 208 *\/ uint64 s6;$/;"	m	struct:trapframe	typeref:typename:uint64
s6	kernel/proc.h	/^  uint64 s6;$/;"	m	struct:context	typeref:typename:uint64
s7	kernel/proc.h	/^  \/* 216 *\/ uint64 s7;$/;"	m	struct:trapframe	typeref:typename:uint64
s7	kernel/proc.h	/^  uint64 s7;$/;"	m	struct:context	typeref:typename:uint64
s8	kernel/proc.h	/^  \/* 224 *\/ uint64 s8;$/;"	m	struct:trapframe	typeref:typename:uint64
s8	kernel/proc.h	/^  uint64 s8;$/;"	m	struct:context	typeref:typename:uint64
s9	kernel/proc.h	/^  \/* 232 *\/ uint64 s9;$/;"	m	struct:trapframe	typeref:typename:uint64
s9	kernel/proc.h	/^  uint64 s9;$/;"	m	struct:context	typeref:typename:uint64
safestrcpy	kernel/string.c	/^safestrcpy(char *s, const char *t, int n)$/;"	f	typeref:typename:char *
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	file:
sb	kernel/fs.c	/^struct superblock sb; $/;"	v	typeref:struct:superblock
sb	mkfs/mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sbrk	user/cat.asm	/^sbrk:$/;"	l
sbrk	user/echo.asm	/^sbrk:$/;"	l
sbrk	user/forktest.asm	/^sbrk:$/;"	l
sbrk	user/grep.asm	/^sbrk:$/;"	l
sbrk	user/grind.asm	/^sbrk:$/;"	l
sbrk	user/init.asm	/^sbrk:$/;"	l
sbrk	user/kill.asm	/^sbrk:$/;"	l
sbrk	user/ln.asm	/^sbrk:$/;"	l
sbrk	user/ls.asm	/^sbrk:$/;"	l
sbrk	user/mkdir.asm	/^sbrk:$/;"	l
sbrk	user/rm.asm	/^sbrk:$/;"	l
sbrk	user/sh.asm	/^sbrk:$/;"	l
sbrk	user/stressfs.asm	/^sbrk:$/;"	l
sbrk	user/usertests.asm	/^sbrk:$/;"	l
sbrk	user/usys.S	/^sbrk:$/;"	l
sbrk	user/wc.asm	/^sbrk:$/;"	l
sbrk	user/zombie.asm	/^sbrk:$/;"	l
sbrk8000	user/usertests.c	/^sbrk8000(char *s)$/;"	f	typeref:typename:void
sbrkarg	user/usertests.c	/^sbrkarg(char *s)$/;"	f	typeref:typename:void
sbrkbasic	user/usertests.c	/^sbrkbasic(char *s)$/;"	f	typeref:typename:void
sbrkbugs	user/usertests.c	/^sbrkbugs(char *s)$/;"	f	typeref:typename:void
sbrkfail	user/usertests.c	/^sbrkfail(char *s)$/;"	f	typeref:typename:void
sbrklast	user/usertests.c	/^sbrklast(char *s)$/;"	f	typeref:typename:void
sbrkmuch	user/usertests.c	/^sbrkmuch(char *s)$/;"	f	typeref:typename:void
sched	kernel/proc.c	/^sched(void)$/;"	f	typeref:typename:void
scheduler	kernel/proc.c	/^scheduler(void)$/;"	f	typeref:typename:void
sector	kernel/virtio.h	/^  uint64 sector;$/;"	m	struct:virtio_blk_req	typeref:typename:uint64
setkilled	kernel/proc.c	/^setkilled(struct proc *p)$/;"	f	typeref:typename:void
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:shell_script	file:
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	file:
sfence_vma	kernel/riscv.h	/^sfence_vma()$/;"	f	typeref:typename:void
sharedfd	user/usertests.c	/^sharedfd(char *s)$/;"	f	typeref:typename:void
shell_script	gradelib.py	/^def shell_script(script, terminate_match=None):$/;"	f
shentsize	kernel/elf.h	/^  ushort shentsize;$/;"	m	struct:elfhdr	typeref:typename:ushort
shnum	kernel/elf.h	/^  ushort shnum;$/;"	m	struct:elfhdr	typeref:typename:ushort
shoff	kernel/elf.h	/^  uint64 shoff;$/;"	m	struct:elfhdr	typeref:typename:uint64
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	file:
shstrndx	kernel/elf.h	/^  ushort shstrndx;$/;"	m	struct:elfhdr	typeref:typename:ushort
size	kernel/file.h	/^  uint size;$/;"	m	struct:inode	typeref:typename:uint
size	kernel/fs.h	/^  uint size;            \/\/ Size of file (bytes)$/;"	m	struct:dinode	typeref:typename:uint
size	kernel/fs.h	/^  uint size;         \/\/ Size of file system image (blocks)$/;"	m	struct:superblock	typeref:typename:uint
size	kernel/log.c	/^  int size;$/;"	m	struct:log	typeref:typename:int	file:
size	kernel/stat.h	/^  uint64 size; \/\/ Size of file in bytes$/;"	m	struct:stat	typeref:typename:uint64
size	user/umalloc.c	/^    uint size;$/;"	m	struct:header::__anon3d351ad10108	typeref:typename:uint	file:
skipelem	kernel/fs.c	/^skipelem(char *path, char *name)$/;"	f	typeref:typename:char *	file:
sleep	kernel/proc.c	/^sleep(void *chan, struct spinlock *lk)$/;"	f	typeref:typename:void
sleep	user/cat.asm	/^sleep:$/;"	l
sleep	user/echo.asm	/^sleep:$/;"	l
sleep	user/forktest.asm	/^sleep:$/;"	l
sleep	user/grep.asm	/^sleep:$/;"	l
sleep	user/grind.asm	/^sleep:$/;"	l
sleep	user/init.asm	/^sleep:$/;"	l
sleep	user/kill.asm	/^sleep:$/;"	l
sleep	user/ln.asm	/^sleep:$/;"	l
sleep	user/ls.asm	/^sleep:$/;"	l
sleep	user/mkdir.asm	/^sleep:$/;"	l
sleep	user/rm.asm	/^sleep:$/;"	l
sleep	user/sh.asm	/^sleep:$/;"	l
sleep	user/stressfs.asm	/^sleep:$/;"	l
sleep	user/usertests.asm	/^sleep:$/;"	l
sleep	user/usys.S	/^sleep:$/;"	l
sleep	user/wc.asm	/^sleep:$/;"	l
sleep	user/zombie.asm	/^sleep:$/;"	l
sleeplock	kernel/sleeplock.h	/^struct sleeplock {$/;"	s
slowtests	user/usertests.c	/^struct test slowtests[] = {$/;"	v	typeref:struct:test[]
sp	kernel/kernel.asm	/^  sp = sz;$/;"	d
sp	kernel/proc.h	/^  \/*  48 *\/ uint64 sp;$/;"	m	struct:trapframe	typeref:typename:uint64
sp	kernel/proc.h	/^  uint64 sp;$/;"	m	struct:context	typeref:typename:uint64
spin	kernel/entry.S	/^spin:$/;"	l
spinlock	kernel/spinlock.h	/^struct spinlock {$/;"	s
src	user/cat.asm	/^  src = vsrc;$/;"	d
src	user/echo.asm	/^  src = vsrc;$/;"	d
src	user/forktest.asm	/^  src = vsrc;$/;"	d
src	user/grep.asm	/^  src = vsrc;$/;"	d
src	user/grind.asm	/^  src = vsrc;$/;"	d
src	user/init.asm	/^  src = vsrc;$/;"	d
src	user/kill.asm	/^  src = vsrc;$/;"	d
src	user/ln.asm	/^  src = vsrc;$/;"	d
src	user/ls.asm	/^  src = vsrc;$/;"	d
src	user/mkdir.asm	/^  src = vsrc;$/;"	d
src	user/rm.asm	/^  src = vsrc;$/;"	d
src	user/sh.asm	/^  src = vsrc;$/;"	d
src	user/stressfs.asm	/^  src = vsrc;$/;"	d
src	user/usertests.asm	/^  src = vsrc;$/;"	d
src	user/wc.asm	/^  src = vsrc;$/;"	d
src	user/zombie.asm	/^  src = vsrc;$/;"	d
srcva	kernel/kernel.asm	/^    srcva = va0 + PGSIZE;$/;"	d
stack0	kernel/start.c	/^__attribute__ ((aligned (16))) char stack0[4096 * NCPU];$/;"	v	typeref:typename:char[]
stackbase	kernel/kernel.asm	/^  stackbase = sp - USERSTACK*PGSIZE;$/;"	d
stacktest	user/usertests.c	/^stacktest(char *s)$/;"	f	typeref:typename:void
start	kernel/log.c	/^  int start;$/;"	m	struct:log	typeref:typename:int	file:
start	kernel/start.c	/^start()$/;"	f	typeref:typename:void
start	user/initcode.S	/^start:$/;"	l
start	user/initcode.asm	/^start:$/;"	l
start	user/ulib.c	/^start()$/;"	f	typeref:typename:void
started	kernel/kernel.asm	/^    started = 1;$/;"	d
started	kernel/main.c	/^volatile static int started = 0;$/;"	v	typeref:typename:volatile int	file:
stat	kernel/stat.h	/^struct stat {$/;"	s
stat	mkfs/mkfs.c	/^#define stat /;"	d	file:
stat	user/ulib.c	/^stat(const char *n, struct stat *st)$/;"	f	typeref:typename:int
state	kernel/kernel.asm	/^      state = "???";$/;"	d
state	kernel/kernel.asm	/^      state = states[p->state];$/;"	d
state	kernel/proc.h	/^  enum procstate state;        \/\/ Process state$/;"	m	struct:proc	typeref:enum:procstate
state	user/cat.asm	/^        state = '%';$/;"	d
state	user/cat.asm	/^      state = 0;$/;"	d
state	user/cat.asm	/^  state = 0;$/;"	d
state	user/echo.asm	/^        state = '%';$/;"	d
state	user/echo.asm	/^      state = 0;$/;"	d
state	user/echo.asm	/^  state = 0;$/;"	d
state	user/grep.asm	/^        state = '%';$/;"	d
state	user/grep.asm	/^      state = 0;$/;"	d
state	user/grep.asm	/^  state = 0;$/;"	d
state	user/grind.asm	/^        state = '%';$/;"	d
state	user/grind.asm	/^      state = 0;$/;"	d
state	user/grind.asm	/^  state = 0;$/;"	d
state	user/init.asm	/^        state = '%';$/;"	d
state	user/init.asm	/^      state = 0;$/;"	d
state	user/init.asm	/^  state = 0;$/;"	d
state	user/kill.asm	/^        state = '%';$/;"	d
state	user/kill.asm	/^      state = 0;$/;"	d
state	user/kill.asm	/^  state = 0;$/;"	d
state	user/ln.asm	/^        state = '%';$/;"	d
state	user/ln.asm	/^      state = 0;$/;"	d
state	user/ln.asm	/^  state = 0;$/;"	d
state	user/ls.asm	/^        state = '%';$/;"	d
state	user/ls.asm	/^      state = 0;$/;"	d
state	user/ls.asm	/^  state = 0;$/;"	d
state	user/mkdir.asm	/^        state = '%';$/;"	d
state	user/mkdir.asm	/^      state = 0;$/;"	d
state	user/mkdir.asm	/^  state = 0;$/;"	d
state	user/rm.asm	/^        state = '%';$/;"	d
state	user/rm.asm	/^      state = 0;$/;"	d
state	user/rm.asm	/^  state = 0;$/;"	d
state	user/sh.asm	/^        state = '%';$/;"	d
state	user/sh.asm	/^      state = 0;$/;"	d
state	user/sh.asm	/^  state = 0;$/;"	d
state	user/stressfs.asm	/^        state = '%';$/;"	d
state	user/stressfs.asm	/^      state = 0;$/;"	d
state	user/stressfs.asm	/^  state = 0;$/;"	d
state	user/usertests.asm	/^        state = '%';$/;"	d
state	user/usertests.asm	/^      state = 0;$/;"	d
state	user/usertests.asm	/^  state = 0;$/;"	d
state	user/wc.asm	/^        state = '%';$/;"	d
state	user/wc.asm	/^      state = 0;$/;"	d
state	user/wc.asm	/^  state = 0;$/;"	d
state	user/zombie.asm	/^        state = '%';$/;"	d
state	user/zombie.asm	/^      state = 0;$/;"	d
state	user/zombie.asm	/^  state = 0;$/;"	d
stati	kernel/fs.c	/^stati(struct inode *ip, struct stat *st)$/;"	f	typeref:typename:void
static	kernel/kernel.asm	/^static char digits[] = "0123456789abcdef";$/;"	l
static	kernel/kernel.asm	/^static inline void$/;"	l
static	kernel/kernel.asm	/^static int loadseg(pde_t *, uint64, struct inode *, uint, uint);$/;"	l
static	kernel/kernel.asm	/^static int$/;"	l
static	kernel/kernel.asm	/^static struct inode*$/;"	t
static	kernel/kernel.asm	/^static uint$/;"	l
static	kernel/kernel.asm	/^static uint64$/;"	l
static	kernel/kernel.asm	/^static void$/;"	l
static	user/cat.asm	/^static Header *freep;$/;"	l
static	user/cat.asm	/^static Header base;$/;"	l
static	user/cat.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/cat.asm	/^static void$/;"	l
static	user/echo.asm	/^static Header *freep;$/;"	l
static	user/echo.asm	/^static Header base;$/;"	l
static	user/echo.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/echo.asm	/^static void$/;"	l
static	user/grep.asm	/^static Header *freep;$/;"	l
static	user/grep.asm	/^static Header base;$/;"	l
static	user/grep.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/grep.asm	/^static void$/;"	l
static	user/grind.asm	/^static Header *freep;$/;"	l
static	user/grind.asm	/^static Header base;$/;"	l
static	user/grind.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/grind.asm	/^static void$/;"	l
static	user/init.asm	/^static Header *freep;$/;"	l
static	user/init.asm	/^static Header base;$/;"	l
static	user/init.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/init.asm	/^static void$/;"	l
static	user/kill.asm	/^static Header *freep;$/;"	l
static	user/kill.asm	/^static Header base;$/;"	l
static	user/kill.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/kill.asm	/^static void$/;"	l
static	user/ln.asm	/^static Header *freep;$/;"	l
static	user/ln.asm	/^static Header base;$/;"	l
static	user/ln.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/ln.asm	/^static void$/;"	l
static	user/ls.asm	/^static Header *freep;$/;"	l
static	user/ls.asm	/^static Header base;$/;"	l
static	user/ls.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/ls.asm	/^static void$/;"	l
static	user/mkdir.asm	/^static Header *freep;$/;"	l
static	user/mkdir.asm	/^static Header base;$/;"	l
static	user/mkdir.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/mkdir.asm	/^static void$/;"	l
static	user/rm.asm	/^static Header *freep;$/;"	l
static	user/rm.asm	/^static Header base;$/;"	l
static	user/rm.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/rm.asm	/^static void$/;"	l
static	user/sh.asm	/^static Header *freep;$/;"	l
static	user/sh.asm	/^static Header base;$/;"	l
static	user/sh.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/sh.asm	/^static void$/;"	l
static	user/stressfs.asm	/^static Header *freep;$/;"	l
static	user/stressfs.asm	/^static Header base;$/;"	l
static	user/stressfs.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/stressfs.asm	/^static void$/;"	l
static	user/usertests.asm	/^static Header *freep;$/;"	l
static	user/usertests.asm	/^static Header base;$/;"	l
static	user/usertests.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/usertests.asm	/^static inline uint64$/;"	l
static	user/usertests.asm	/^static void$/;"	l
static	user/wc.asm	/^static Header *freep;$/;"	l
static	user/wc.asm	/^static Header base;$/;"	l
static	user/wc.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/wc.asm	/^static void$/;"	l
static	user/zombie.asm	/^static Header *freep;$/;"	l
static	user/zombie.asm	/^static Header base;$/;"	l
static	user/zombie.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/zombie.asm	/^static void$/;"	l
static_assert	mkfs/mkfs.c	/^#define static_assert(/;"	d	file:
status	kernel/kernel.asm	/^  status = *R(VIRTIO_MMIO_STATUS);$/;"	d
status	kernel/virtio_disk.c	/^    char status;$/;"	m	struct:disk::__anon0ecc7a2d0108	typeref:typename:char	file:
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	file:
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
strchr	user/ulib.c	/^strchr(const char *s, char c)$/;"	f	typeref:typename:char *
strcmp	user/ulib.c	/^strcmp(const char *p, const char *q)$/;"	f	typeref:typename:int
strcpy	user/ulib.c	/^strcpy(char *s, const char *t)$/;"	f	typeref:typename:char *
strlen	kernel/string.c	/^strlen(const char *s)$/;"	f	typeref:typename:int
strlen	user/ulib.c	/^strlen(const char *s)$/;"	f	typeref:typename:uint
strncmp	kernel/string.c	/^strncmp(const char *p, const char *q, uint n)$/;"	f	typeref:typename:int
strncpy	kernel/string.c	/^strncpy(char *s, const char *t, int n)$/;"	f	typeref:typename:char *
struct	kernel/kernel.asm	/^  struct proc *p = c->proc;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p = myproc();$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *pr = myproc();$/;"	l
subdir	user/usertests.c	/^subdir(char *s)$/;"	f	typeref:typename:void
submit-check	Makefile	/^submit-check:$/;"	t
superblock	kernel/fs.h	/^struct superblock {$/;"	s
swtch	kernel/swtch.S	/^swtch:$/;"	l
symbols	user/sh.c	/^char symbols[] = "<|>&;()";$/;"	v	typeref:typename:char[]
sys_chdir	kernel/sysfile.c	/^sys_chdir(void)$/;"	f	typeref:typename:uint64
sys_close	kernel/sysfile.c	/^sys_close(void)$/;"	f	typeref:typename:uint64
sys_dup	kernel/sysfile.c	/^sys_dup(void)$/;"	f	typeref:typename:uint64
sys_exec	kernel/sysfile.c	/^sys_exec(void)$/;"	f	typeref:typename:uint64
sys_exit	kernel/sysproc.c	/^sys_exit(void)$/;"	f	typeref:typename:uint64
sys_fork	kernel/sysproc.c	/^sys_fork(void)$/;"	f	typeref:typename:uint64
sys_fstat	kernel/sysfile.c	/^sys_fstat(void)$/;"	f	typeref:typename:uint64
sys_getpid	kernel/sysproc.c	/^sys_getpid(void)$/;"	f	typeref:typename:uint64
sys_kill	kernel/sysproc.c	/^sys_kill(void)$/;"	f	typeref:typename:uint64
sys_link	kernel/sysfile.c	/^sys_link(void)$/;"	f	typeref:typename:uint64
sys_mkdir	kernel/sysfile.c	/^sys_mkdir(void)$/;"	f	typeref:typename:uint64
sys_mknod	kernel/sysfile.c	/^sys_mknod(void)$/;"	f	typeref:typename:uint64
sys_open	kernel/sysfile.c	/^sys_open(void)$/;"	f	typeref:typename:uint64
sys_pipe	kernel/sysfile.c	/^sys_pipe(void)$/;"	f	typeref:typename:uint64
sys_read	kernel/sysfile.c	/^sys_read(void)$/;"	f	typeref:typename:uint64
sys_sbrk	kernel/sysproc.c	/^sys_sbrk(void)$/;"	f	typeref:typename:uint64
sys_sleep	kernel/sysproc.c	/^sys_sleep(void)$/;"	f	typeref:typename:uint64
sys_unlink	kernel/sysfile.c	/^sys_unlink(void)$/;"	f	typeref:typename:uint64
sys_uptime	kernel/sysproc.c	/^sys_uptime(void)$/;"	f	typeref:typename:uint64
sys_wait	kernel/sysproc.c	/^sys_wait(void)$/;"	f	typeref:typename:uint64
sys_write	kernel/sysfile.c	/^sys_write(void)$/;"	f	typeref:typename:uint64
syscall	kernel/syscall.c	/^syscall(void)$/;"	f	typeref:typename:void
syscalls	kernel/syscall.c	/^static uint64 (*syscalls[])(void) = {$/;"	v	typeref:typename:uint64 (* [])(void)	file:
sz	kernel/kernel.asm	/^    sz = sz1;$/;"	d
sz	kernel/kernel.asm	/^    sz = uvmdealloc(p->pagetable, sz, sz + n);$/;"	d
sz	kernel/kernel.asm	/^  sz = PGROUNDUP(sz);$/;"	d
sz	kernel/kernel.asm	/^  sz = p->sz;$/;"	d
sz	kernel/kernel.asm	/^  sz = sz1;$/;"	d
sz	kernel/proc.h	/^  uint64 sz;                   \/\/ Size of process memory (bytes)$/;"	m	struct:proc	typeref:typename:uint64
t0	kernel/proc.h	/^  \/*  72 *\/ uint64 t0;$/;"	m	struct:trapframe	typeref:typename:uint64
t1	kernel/proc.h	/^  \/*  80 *\/ uint64 t1;$/;"	m	struct:trapframe	typeref:typename:uint64
t2	kernel/proc.h	/^  \/*  88 *\/ uint64 t2;$/;"	m	struct:trapframe	typeref:typename:uint64
t3	kernel/proc.h	/^  \/* 256 *\/ uint64 t3;$/;"	m	struct:trapframe	typeref:typename:uint64
t4	kernel/proc.h	/^  \/* 264 *\/ uint64 t4;$/;"	m	struct:trapframe	typeref:typename:uint64
t5	kernel/proc.h	/^  \/* 272 *\/ uint64 t5;$/;"	m	struct:trapframe	typeref:typename:uint64
t6	kernel/proc.h	/^  \/* 280 *\/ uint64 t6;$/;"	m	struct:trapframe	typeref:typename:uint64
tags	Makefile	/^tags: $(OBJS) _init$/;"	t
target	kernel/kernel.asm	/^  target = n;$/;"	d
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test	user/usertests.c	/^struct test {$/;"	s	file:
test_find_curdir	grade-lab-util	/^def test_find_curdir():$/;"	f
test_find_recursive	grade-lab-util	/^def test_find_recursive():$/;"	f
test_pingpong	grade-lab-util	/^def test_pingpong():$/;"	f
test_primes	grade-lab-util	/^def test_primes():$/;"	f
test_sleep	grade-lab-util	/^def test_sleep():$/;"	f
test_sleep_no_args	grade-lab-util	/^def test_sleep_no_args():$/;"	f
test_time	grade-lab-util	/^def test_time():$/;"	f
test_xargs	grade-lab-util	/^def test_xargs():$/;"	f
test_xargs_multiline	grade-lab-util	/^def test_xargs_multiline():$/;"	f
ticks	kernel/trap.c	/^uint ticks;$/;"	v	typeref:typename:uint
ticks0	kernel/kernel.asm	/^  ticks0 = ticks;$/;"	d
tickslock	kernel/trap.c	/^struct spinlock tickslock;$/;"	v	typeref:struct:spinlock
timerinit	kernel/start.c	/^timerinit()$/;"	f	typeref:typename:void
tok	user/sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
top	user/usertests.asm	/^  top = (uint64) sbrk(0);$/;"	d
tot	kernel/kernel.asm	/^      tot = -1;$/;"	d
total	user/usertests.asm	/^    total = 0;$/;"	d
total	user/usertests.asm	/^  total = 0;$/;"	d
tp	kernel/proc.h	/^  \/*  64 *\/ uint64 tp;$/;"	m	struct:trapframe	typeref:typename:uint64
trampoline	kernel/trampoline.S	/^trampoline:$/;"	l
trapframe	kernel/proc.h	/^  struct trapframe *trapframe; \/\/ data page for trampoline.S$/;"	m	struct:proc	typeref:struct:trapframe *
trapframe	kernel/proc.h	/^struct trapframe {$/;"	s
trapinit	kernel/trap.c	/^trapinit(void)$/;"	f	typeref:typename:void
trapinithart	kernel/trap.c	/^trapinithart(void)$/;"	f	typeref:typename:void
truncate1	user/usertests.c	/^truncate1(char *s)$/;"	f	typeref:typename:void
truncate2	user/usertests.c	/^truncate2(char *s)$/;"	f	typeref:typename:void
truncate3	user/usertests.c	/^truncate3(char *s)$/;"	f	typeref:typename:void
twochildren	user/usertests.c	/^twochildren(char *s)$/;"	f	typeref:typename:void
type	kernel/elf.h	/^  uint32 type;$/;"	m	struct:proghdr	typeref:typename:uint32
type	kernel/elf.h	/^  ushort type;$/;"	m	struct:elfhdr	typeref:typename:ushort
type	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	m	struct:file	typeref:enum:file::__anonc1f1ee2b0103
type	kernel/file.h	/^  short type;         \/\/ copy of disk inode$/;"	m	struct:inode	typeref:typename:short
type	kernel/fs.h	/^  short type;           \/\/ File type$/;"	m	struct:dinode	typeref:typename:short
type	kernel/stat.h	/^  short type;  \/\/ Type of file$/;"	m	struct:stat	typeref:typename:short
type	kernel/virtio.h	/^  uint32 type; \/\/ VIRTIO_BLK_T_IN or ..._OUT$/;"	m	struct:virtio_blk_req	typeref:typename:uint32
type	user/sh.c	/^  int type;$/;"	m	struct:backcmd	typeref:typename:int	file:
type	user/sh.c	/^  int type;$/;"	m	struct:cmd	typeref:typename:int	file:
type	user/sh.c	/^  int type;$/;"	m	struct:execcmd	typeref:typename:int	file:
type	user/sh.c	/^  int type;$/;"	m	struct:listcmd	typeref:typename:int	file:
type	user/sh.c	/^  int type;$/;"	m	struct:pipecmd	typeref:typename:int	file:
type	user/sh.c	/^  int type;$/;"	m	struct:redircmd	typeref:typename:int	file:
uart_tx_buf	kernel/uart.c	/^char uart_tx_buf[UART_TX_BUF_SIZE];$/;"	v	typeref:typename:char[]
uart_tx_lock	kernel/uart.c	/^struct spinlock uart_tx_lock;$/;"	v	typeref:struct:spinlock
uart_tx_r	kernel/uart.c	/^uint64 uart_tx_r; \/\/ read next from uart_tx_buf[uart_tx_r % UART_TX_BUF_SIZE]$/;"	v	typeref:typename:uint64
uart_tx_w	kernel/uart.c	/^uint64 uart_tx_w; \/\/ write next to uart_tx_buf[uart_tx_w % UART_TX_BUF_SIZE]$/;"	v	typeref:typename:uint64
uartgetc	kernel/uart.c	/^uartgetc(void)$/;"	f	typeref:typename:int
uartinit	kernel/uart.c	/^uartinit(void)$/;"	f	typeref:typename:void
uartintr	kernel/uart.c	/^uartintr(void)$/;"	f	typeref:typename:void
uartputc	kernel/uart.c	/^uartputc(int c)$/;"	f	typeref:typename:void
uartputc_sync	kernel/uart.c	/^uartputc_sync(int c)$/;"	f	typeref:typename:void
uartstart	kernel/uart.c	/^uartstart()$/;"	f	typeref:typename:void
uchar	kernel/types.h	/^typedef unsigned char  uchar;$/;"	t	typeref:typename:unsigned char
uint	kernel/types.h	/^typedef unsigned int   uint;$/;"	t	typeref:typename:unsigned int
uint	user/cat.asm	/^uint$/;"	l
uint	user/echo.asm	/^uint$/;"	l
uint	user/forktest.asm	/^uint$/;"	l
uint	user/grep.asm	/^uint$/;"	l
uint	user/grind.asm	/^uint$/;"	l
uint	user/init.asm	/^uint$/;"	l
uint	user/kill.asm	/^uint$/;"	l
uint	user/ln.asm	/^uint$/;"	l
uint	user/ls.asm	/^uint$/;"	l
uint	user/mkdir.asm	/^uint$/;"	l
uint	user/rm.asm	/^uint$/;"	l
uint	user/sh.asm	/^uint$/;"	l
uint	user/stressfs.asm	/^uint$/;"	l
uint	user/usertests.asm	/^uint$/;"	l
uint	user/wc.asm	/^uint$/;"	l
uint	user/zombie.asm	/^uint$/;"	l
uint16	kernel/types.h	/^typedef unsigned short uint16;$/;"	t	typeref:typename:unsigned short
uint32	kernel/types.h	/^typedef unsigned int  uint32;$/;"	t	typeref:typename:unsigned int
uint64	kernel/kernel.asm	/^uint64$/;"	l
uint64	kernel/types.h	/^typedef unsigned long uint64;$/;"	t	typeref:typename:unsigned long
uint8	kernel/types.h	/^typedef unsigned char uint8;$/;"	t	typeref:typename:unsigned char
uninit	user/usertests.c	/^char uninit[10000];$/;"	v	typeref:typename:char[10000]
unlink	user/cat.asm	/^unlink:$/;"	l
unlink	user/echo.asm	/^unlink:$/;"	l
unlink	user/forktest.asm	/^unlink:$/;"	l
unlink	user/grep.asm	/^unlink:$/;"	l
unlink	user/grind.asm	/^unlink:$/;"	l
unlink	user/init.asm	/^unlink:$/;"	l
unlink	user/kill.asm	/^unlink:$/;"	l
unlink	user/ln.asm	/^unlink:$/;"	l
unlink	user/ls.asm	/^unlink:$/;"	l
unlink	user/mkdir.asm	/^unlink:$/;"	l
unlink	user/rm.asm	/^unlink:$/;"	l
unlink	user/sh.asm	/^unlink:$/;"	l
unlink	user/stressfs.asm	/^unlink:$/;"	l
unlink	user/usertests.asm	/^unlink:$/;"	l
unlink	user/usys.S	/^unlink:$/;"	l
unlink	user/wc.asm	/^unlink:$/;"	l
unlink	user/zombie.asm	/^unlink:$/;"	l
unlinkread	user/usertests.c	/^unlinkread(char *s)$/;"	f	typeref:typename:void
unsigned	user/grind.asm	/^unsigned long rand_next = 1;$/;"	l
unused	kernel/virtio.h	/^  uint16 unused;$/;"	m	struct:virtq_avail	typeref:typename:uint16
uptime	user/cat.asm	/^uptime:$/;"	l
uptime	user/echo.asm	/^uptime:$/;"	l
uptime	user/forktest.asm	/^uptime:$/;"	l
uptime	user/grep.asm	/^uptime:$/;"	l
uptime	user/grind.asm	/^uptime:$/;"	l
uptime	user/init.asm	/^uptime:$/;"	l
uptime	user/kill.asm	/^uptime:$/;"	l
uptime	user/ln.asm	/^uptime:$/;"	l
uptime	user/ls.asm	/^uptime:$/;"	l
uptime	user/mkdir.asm	/^uptime:$/;"	l
uptime	user/rm.asm	/^uptime:$/;"	l
uptime	user/sh.asm	/^uptime:$/;"	l
uptime	user/stressfs.asm	/^uptime:$/;"	l
uptime	user/usertests.asm	/^uptime:$/;"	l
uptime	user/usys.S	/^uptime:$/;"	l
uptime	user/wc.asm	/^uptime:$/;"	l
uptime	user/zombie.asm	/^uptime:$/;"	l
used	kernel/virtio_disk.c	/^  struct virtq_used *used;$/;"	m	struct:disk	typeref:struct:virtq_used *	file:
used_idx	kernel/virtio_disk.c	/^  uint16 used_idx; \/\/ we've looked this far in used[2..NUM].$/;"	m	struct:disk	typeref:typename:uint16	file:
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
userinit	kernel/proc.c	/^userinit(void)$/;"	f	typeref:typename:void
userret	kernel/trampoline.S	/^userret:$/;"	l
usertrap	kernel/trap.c	/^usertrap(void)$/;"	f	typeref:typename:void
usertrapret	kernel/trap.c	/^usertrapret(void)$/;"	f	typeref:typename:void
uservec	kernel/trampoline.S	/^uservec:    $/;"	l
ushort	kernel/types.h	/^typedef unsigned short ushort;$/;"	t	typeref:typename:unsigned short
uvmalloc	kernel/vm.c	/^uvmalloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz, int xperm)$/;"	f	typeref:typename:uint64
uvmclear	kernel/vm.c	/^uvmclear(pagetable_t pagetable, uint64 va)$/;"	f	typeref:typename:void
uvmcopy	kernel/vm.c	/^uvmcopy(pagetable_t old, pagetable_t new, uint64 sz)$/;"	f	typeref:typename:int
uvmcreate	kernel/vm.c	/^uvmcreate()$/;"	f	typeref:typename:pagetable_t
uvmdealloc	kernel/vm.c	/^uvmdealloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)$/;"	f	typeref:typename:uint64
uvmfirst	kernel/vm.c	/^uvmfirst(pagetable_t pagetable, uchar *src, uint sz)$/;"	f	typeref:typename:void
uvmfree	kernel/vm.c	/^uvmfree(pagetable_t pagetable, uint64 sz)$/;"	f	typeref:typename:void
uvmunmap	kernel/vm.c	/^uvmunmap(pagetable_t pagetable, uint64 va, uint64 npages, int do_free)$/;"	f	typeref:typename:void
va0	kernel/kernel.asm	/^    va0 = PGROUNDDOWN(dstva);$/;"	d
va0	kernel/kernel.asm	/^    va0 = PGROUNDDOWN(srcva);$/;"	d
vaddr	kernel/elf.h	/^  uint64 vaddr;$/;"	m	struct:proghdr	typeref:typename:uint64
valid	kernel/buf.h	/^  int valid;   \/\/ has data been read from disk?$/;"	m	struct:buf	typeref:typename:int
valid	kernel/file.h	/^  int valid;          \/\/ inode has been read from disk?$/;"	m	struct:inode	typeref:typename:int
validatetest	user/usertests.c	/^validatetest(char *s)$/;"	f	typeref:typename:void
vdisk_lock	kernel/virtio_disk.c	/^  struct spinlock vdisk_lock;$/;"	m	struct:disk	typeref:struct:spinlock	file:
version	kernel/elf.h	/^  uint version;$/;"	m	struct:elfhdr	typeref:typename:uint
virtio_blk_req	kernel/virtio.h	/^struct virtio_blk_req {$/;"	s
virtio_disk_init	kernel/virtio_disk.c	/^virtio_disk_init(void)$/;"	f	typeref:typename:void
virtio_disk_intr	kernel/virtio_disk.c	/^virtio_disk_intr()$/;"	f	typeref:typename:void
virtio_disk_rw	kernel/virtio_disk.c	/^virtio_disk_rw(struct buf *b, int write)$/;"	f	typeref:typename:void
virtq_avail	kernel/virtio.h	/^struct virtq_avail {$/;"	s
virtq_desc	kernel/virtio.h	/^struct virtq_desc {$/;"	s
virtq_used	kernel/virtio.h	/^struct virtq_used {$/;"	s
virtq_used_elem	kernel/virtio.h	/^struct virtq_used_elem {$/;"	s
void	kernel/kernel.asm	/^void *$/;"	l
void	kernel/kernel.asm	/^void uartstart();$/;"	l
void	kernel/kernel.asm	/^void$/;"	l
void	user/cat.asm	/^void *$/;"	l
void	user/cat.asm	/^void$/;"	l
void	user/echo.asm	/^void *$/;"	l
void	user/echo.asm	/^void$/;"	l
void	user/forktest.asm	/^void *$/;"	l
void	user/forktest.asm	/^void$/;"	l
void	user/grep.asm	/^void *$/;"	l
void	user/grep.asm	/^void$/;"	l
void	user/grind.asm	/^void *$/;"	l
void	user/grind.asm	/^void$/;"	l
void	user/init.asm	/^void *$/;"	l
void	user/init.asm	/^void$/;"	l
void	user/kill.asm	/^void *$/;"	l
void	user/kill.asm	/^void$/;"	l
void	user/ln.asm	/^void *$/;"	l
void	user/ln.asm	/^void$/;"	l
void	user/ls.asm	/^void *$/;"	l
void	user/ls.asm	/^void$/;"	l
void	user/mkdir.asm	/^void *$/;"	l
void	user/mkdir.asm	/^void$/;"	l
void	user/rm.asm	/^void *$/;"	l
void	user/rm.asm	/^void$/;"	l
void	user/sh.asm	/^void *$/;"	l
void	user/sh.asm	/^void$/;"	l
void	user/stressfs.asm	/^void *$/;"	l
void	user/stressfs.asm	/^void$/;"	l
void	user/usertests.asm	/^void *$/;"	l
void	user/usertests.asm	/^void$/;"	l
void	user/wc.asm	/^void *$/;"	l
void	user/wc.asm	/^void$/;"	l
void	user/zombie.asm	/^void *$/;"	l
void	user/zombie.asm	/^void$/;"	l
volatile	kernel/kernel.asm	/^volatile static int started = 0;$/;"	l
vprintf	user/printf.c	/^vprintf(int fd, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
w	kernel/console.c	/^  uint w;  \/\/ Write index$/;"	m	struct:__anonb6393d190108	typeref:typename:uint	file:
w_mcounteren	kernel/riscv.h	/^w_mcounteren(uint64 x)$/;"	f	typeref:typename:void
w_medeleg	kernel/riscv.h	/^w_medeleg(uint64 x)$/;"	f	typeref:typename:void
w_menvcfg	kernel/riscv.h	/^w_menvcfg(uint64 x)$/;"	f	typeref:typename:void
w_mepc	kernel/riscv.h	/^w_mepc(uint64 x)$/;"	f	typeref:typename:void
w_mideleg	kernel/riscv.h	/^w_mideleg(uint64 x)$/;"	f	typeref:typename:void
w_mie	kernel/riscv.h	/^w_mie(uint64 x)$/;"	f	typeref:typename:void
w_mstatus	kernel/riscv.h	/^w_mstatus(uint64 x)$/;"	f	typeref:typename:void
w_pmpaddr0	kernel/riscv.h	/^w_pmpaddr0(uint64 x)$/;"	f	typeref:typename:void
w_pmpcfg0	kernel/riscv.h	/^w_pmpcfg0(uint64 x)$/;"	f	typeref:typename:void
w_satp	kernel/riscv.h	/^w_satp(uint64 x)$/;"	f	typeref:typename:void
w_sepc	kernel/riscv.h	/^w_sepc(uint64 x)$/;"	f	typeref:typename:void
w_sie	kernel/riscv.h	/^w_sie(uint64 x)$/;"	f	typeref:typename:void
w_sip	kernel/riscv.h	/^w_sip(uint64 x)$/;"	f	typeref:typename:void
w_sstatus	kernel/riscv.h	/^w_sstatus(uint64 x)$/;"	f	typeref:typename:void
w_stimecmp	kernel/riscv.h	/^w_stimecmp(uint64 x)$/;"	f	typeref:typename:void
w_stvec	kernel/riscv.h	/^w_stvec(uint64 x)$/;"	f	typeref:typename:void
w_tp	kernel/riscv.h	/^w_tp(uint64 x)$/;"	f	typeref:typename:void
wait	gradelib.py	/^    def wait(self):$/;"	m	class:QEMU
wait	kernel/proc.c	/^wait(uint64 addr)$/;"	f	typeref:typename:int
wait	user/cat.asm	/^wait:$/;"	l
wait	user/echo.asm	/^wait:$/;"	l
wait	user/forktest.asm	/^wait:$/;"	l
wait	user/grep.asm	/^wait:$/;"	l
wait	user/grind.asm	/^wait:$/;"	l
wait	user/init.asm	/^wait:$/;"	l
wait	user/kill.asm	/^wait:$/;"	l
wait	user/ln.asm	/^wait:$/;"	l
wait	user/ls.asm	/^wait:$/;"	l
wait	user/mkdir.asm	/^wait:$/;"	l
wait	user/rm.asm	/^wait:$/;"	l
wait	user/sh.asm	/^wait:$/;"	l
wait	user/stressfs.asm	/^wait:$/;"	l
wait	user/usertests.asm	/^wait:$/;"	l
wait	user/usys.S	/^wait:$/;"	l
wait	user/wc.asm	/^wait:$/;"	l
wait	user/zombie.asm	/^wait:$/;"	l
wait_lock	kernel/proc.c	/^struct spinlock wait_lock;$/;"	v	typeref:struct:spinlock
wakeup	kernel/proc.c	/^wakeup(void *chan)$/;"	f	typeref:typename:void
walk	kernel/vm.c	/^walk(pagetable_t pagetable, uint64 va, int alloc)$/;"	f	typeref:typename:pte_t *
walkaddr	kernel/vm.c	/^walkaddr(pagetable_t pagetable, uint64 va)$/;"	f	typeref:typename:uint64
wc	user/wc.c	/^wc(int fd, char *name)$/;"	f	typeref:typename:void
whitespace	user/sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v	typeref:typename:char[]
winode	mkfs/mkfs.c	/^winode(uint inum, struct dinode *ip)$/;"	f	typeref:typename:void
wpid	user/init.asm	/^      wpid = wait((int *) 0);$/;"	d
writable	kernel/file.h	/^  char writable;$/;"	m	struct:file	typeref:typename:char
write	gradelib.py	/^    def write(self, buf):$/;"	m	class:QEMU
write	kernel/file.h	/^  int (*write)(int, uint64, int);$/;"	m	struct:devsw	typeref:typename:int (*)(int,uint64,int)
write	user/cat.asm	/^write:$/;"	l
write	user/echo.asm	/^write:$/;"	l
write	user/forktest.asm	/^write:$/;"	l
write	user/grep.asm	/^write:$/;"	l
write	user/grind.asm	/^write:$/;"	l
write	user/init.asm	/^write:$/;"	l
write	user/kill.asm	/^write:$/;"	l
write	user/ln.asm	/^write:$/;"	l
write	user/ls.asm	/^write:$/;"	l
write	user/mkdir.asm	/^write:$/;"	l
write	user/rm.asm	/^write:$/;"	l
write	user/sh.asm	/^write:$/;"	l
write	user/stressfs.asm	/^write:$/;"	l
write	user/usertests.asm	/^write:$/;"	l
write	user/usys.S	/^write:$/;"	l
write	user/wc.asm	/^write:$/;"	l
write	user/zombie.asm	/^write:$/;"	l
write_head	kernel/log.c	/^write_head(void)$/;"	f	typeref:typename:void	file:
write_log	kernel/log.c	/^write_log(void)$/;"	f	typeref:typename:void	file:
write_results	gradelib.py	/^def write_results():$/;"	f
writebig	user/usertests.c	/^writebig(char *s)$/;"	f	typeref:typename:void
writei	kernel/fs.c	/^writei(struct inode *ip, int user_src, uint64 src, uint off, uint n)$/;"	f	typeref:typename:int
writeopen	kernel/pipe.c	/^  int writeopen;  \/\/ write fd is still open$/;"	m	struct:pipe	typeref:typename:int	file:
writetest	user/usertests.c	/^writetest(char *s)$/;"	f	typeref:typename:void
wsect	mkfs/mkfs.c	/^wsect(uint sec, void *buf)$/;"	f	typeref:typename:void
x	kernel/kernel.asm	/^    x = -xx;$/;"	d
x	kernel/kernel.asm	/^    x = xx;$/;"	d
x	user/cat.asm	/^    x = -xx;$/;"	d
x	user/cat.asm	/^    x = xx;$/;"	d
x	user/echo.asm	/^    x = -xx;$/;"	d
x	user/echo.asm	/^    x = xx;$/;"	d
x	user/grep.asm	/^    x = -xx;$/;"	d
x	user/grep.asm	/^    x = xx;$/;"	d
x	user/grind.asm	/^    x = (*ctx % 0x7ffffffe) + 1;$/;"	d
x	user/grind.asm	/^    x = -xx;$/;"	d
x	user/grind.asm	/^    x = 16807 * lo - 2836 * hi;$/;"	d
x	user/grind.asm	/^    x = xx;$/;"	d
x	user/init.asm	/^    x = -xx;$/;"	d
x	user/init.asm	/^    x = xx;$/;"	d
x	user/kill.asm	/^    x = -xx;$/;"	d
x	user/kill.asm	/^    x = xx;$/;"	d
x	user/ln.asm	/^    x = -xx;$/;"	d
x	user/ln.asm	/^    x = xx;$/;"	d
x	user/ls.asm	/^    x = -xx;$/;"	d
x	user/ls.asm	/^    x = xx;$/;"	d
x	user/mkdir.asm	/^    x = -xx;$/;"	d
x	user/mkdir.asm	/^    x = xx;$/;"	d
x	user/rm.asm	/^    x = -xx;$/;"	d
x	user/rm.asm	/^    x = xx;$/;"	d
x	user/sh.asm	/^    x = -xx;$/;"	d
x	user/sh.asm	/^    x = xx;$/;"	d
x	user/stressfs.asm	/^    x = -xx;$/;"	d
x	user/stressfs.asm	/^    x = xx;$/;"	d
x	user/umalloc.c	/^  Align x;$/;"	m	union:header	typeref:typename:Align	file:
x	user/usertests.asm	/^    x = -xx;$/;"	d
x	user/usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	user/usertests.asm	/^    x = xx;$/;"	d
x	user/wc.asm	/^    x = -xx;$/;"	d
x	user/wc.asm	/^    x = xx;$/;"	d
x	user/zombie.asm	/^    x = -xx;$/;"	d
x	user/zombie.asm	/^    x = xx;$/;"	d
xint	mkfs/mkfs.c	/^xint(uint x)$/;"	f	typeref:typename:uint
xshort	mkfs/mkfs.c	/^xshort(ushort x)$/;"	f	typeref:typename:ushort
xstate	kernel/proc.h	/^  int xstate;                  \/\/ Exit status to be returned to parent's wait$/;"	m	struct:proc	typeref:typename:int
xticks	kernel/kernel.asm	/^  xticks = ticks;$/;"	d
yield	kernel/proc.c	/^yield(void)$/;"	f	typeref:typename:void
zeroes	mkfs/mkfs.c	/^char zeroes[BSIZE];$/;"	v	typeref:typename:char[]
zipball	Makefile	/^zipball: clean submit-check$/;"	t
